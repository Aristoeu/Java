/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:30:42 GMT 2022
 */

package com.thealgorithms.divideandconquer;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.divideandconquer.BinaryExponentiation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryExponentiation_ESTest extends BinaryExponentiation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      long long0 = BinaryExponentiation.calculatePower((-433L), (-433L));
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      long long0 = BinaryExponentiation.calculatePower(1739L, 1739L);
      assertEquals((-4525815843758263149L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long long0 = BinaryExponentiation.calculatePower(2623L, 0L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      long long0 = BinaryExponentiation.calculatePower(1054L, 1054L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BinaryExponentiation binaryExponentiation0 = new BinaryExponentiation();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BinaryExponentiation.main((String[]) null);
  }
}
