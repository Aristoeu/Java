/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:40:54 GMT 2022
 */

package com.thealgorithms.devutils.entities;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.devutils.entities.ProcessDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProcessDetails_ESTest extends ProcessDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("", 1, 1);
      processDetails0.setWaitingTime(1833);
      int int0 = processDetails0.getWaitingTime();
      assertEquals(1833, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("com.thealgorithms.devutils.entities.ProcessDetails", (-183), (-183));
      processDetails0.setWaitingTime((-183));
      int int0 = processDetails0.getWaitingTime();
      assertEquals((-183), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      processDetails0.setTurnAroundTimeTime(835);
      int int0 = processDetails0.getTurnAroundTimeTime();
      assertEquals(835, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("$QsfCnL+=N@v,", 0, (-2190));
      processDetails0.setTurnAroundTimeTime((-3306));
      int int0 = processDetails0.getTurnAroundTimeTime();
      assertEquals((-3306), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails((String) null, (-1737), (-1737));
      processDetails0.getProcessId();
      assertEquals((-1737), processDetails0.getArrivalTime());
      assertEquals((-1737), processDetails0.getBurstTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("", 1, 1);
      processDetails0.getProcessId();
      assertEquals(1, processDetails0.getArrivalTime());
      assertEquals(1, processDetails0.getBurstTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("(e?(mUZB`[1~", 0, 1);
      int int0 = processDetails0.getBurstTime();
      assertEquals(1, int0);
      assertEquals(0, processDetails0.getArrivalTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("(e?(mUZB`[1~", 0, 1);
      int int0 = processDetails0.getArrivalTime();
      assertEquals(1, processDetails0.getBurstTime());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("", 1521, 1521);
      int int0 = processDetails0.getArrivalTime();
      assertEquals(1521, int0);
      assertEquals(1521, processDetails0.getBurstTime());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      int int0 = processDetails0.getArrivalTime();
      assertEquals((-1), int0);
      assertEquals((-1), processDetails0.getBurstTime());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      processDetails0.getProcessId();
      assertEquals((-1), processDetails0.getArrivalTime());
      assertEquals((-1), processDetails0.getBurstTime());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      int int0 = processDetails0.getTurnAroundTimeTime();
      assertEquals((-1), processDetails0.getArrivalTime());
      assertEquals((-1), processDetails0.getBurstTime());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      processDetails0.setArrivalTime((-4039));
      assertEquals((-4039), processDetails0.getArrivalTime());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      assertEquals((-1), processDetails0.getBurstTime());
      
      processDetails0.setBurstTime(0);
      int int0 = processDetails0.getBurstTime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("8^@p", (-1127), (-1127));
      int int0 = processDetails0.getWaitingTime();
      assertEquals(0, int0);
      assertEquals((-1127), processDetails0.getBurstTime());
      assertEquals((-1127), processDetails0.getArrivalTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("27[", (-1), (-1));
      int int0 = processDetails0.getBurstTime();
      assertEquals((-1), processDetails0.getArrivalTime());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProcessDetails processDetails0 = new ProcessDetails("", (-3759), 0);
      processDetails0.setProcessId("");
      assertEquals(0, processDetails0.getBurstTime());
      assertEquals((-3759), processDetails0.getArrivalTime());
  }
}
