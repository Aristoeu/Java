/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:23:04 GMT 2022
 */

package com.thealgorithms.audiofilters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.audiofilters.IIRFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IIRFilter_ESTest extends IIRFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(2482);
      iIRFilter0.process(2482);
      double double0 = iIRFilter0.process(2482);
      assertEquals(2482.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-1.0);
      IIRFilter iIRFilter0 = new IIRFilter(1);
      // Undeclared exception!
      try { 
        iIRFilter0.setCoeffs(doubleArray1, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 23.560615075679266;
      IIRFilter iIRFilter0 = new IIRFilter(1);
      double[] doubleArray1 = new double[0];
      try { 
        iIRFilter0.setCoeffs(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bCoeffs must be of size 1, got 0
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(2482);
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[1];
      try { 
        iIRFilter0.setCoeffs(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // aCoeffs must be of size 2482, got 0
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(1);
      double[] doubleArray0 = new double[2];
      try { 
        iIRFilter0.setCoeffs(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // aCoeffs must be of size 1, got 2
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(532);
      double double0 = iIRFilter0.process(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(532);
      double double0 = iIRFilter0.process((-6781.05));
      assertEquals((-6781.05), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(1);
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        iIRFilter0.setCoeffs((double[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(1);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1;
      double[] doubleArray1 = new double[3];
      try { 
        iIRFilter0.setCoeffs(doubleArray0, doubleArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bCoeffs must be of size 1, got 3
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIRFilter iIRFilter0 = null;
      try {
        iIRFilter0 = new IIRFilter(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // order must be greater than zero
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIRFilter iIRFilter0 = new IIRFilter(1);
      double[] doubleArray0 = new double[1];
      try { 
        iIRFilter0.setCoeffs(doubleArray0, doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // aCoeffs.get(0) must not be zero
         //
         verifyException("com.thealgorithms.audiofilters.IIRFilter", e);
      }
  }
}
