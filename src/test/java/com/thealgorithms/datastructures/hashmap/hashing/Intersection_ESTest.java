/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:52:38 GMT 2022
 */

package com.thealgorithms.datastructures.hashmap.hashing;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.datastructures.hashmap.hashing.Intersection;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Intersection_ESTest extends Intersection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[] intArray1 = new int[1];
      intArray1[0] = 793;
      List<Integer> list0 = Intersection.intersection(intArray0, intArray1);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[10];
      intArray0[5] = (-2145979799);
      int[] intArray1 = new int[8];
      List<Integer> list0 = Intersection.intersection(intArray1, intArray0);
      assertEquals(8, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[10];
      int[] intArray1 = new int[0];
      List<Integer> list0 = Intersection.intersection(intArray0, intArray1);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[10];
      int[] intArray1 = new int[0];
      List<Integer> list0 = Intersection.intersection(intArray1, intArray0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[2];
      List<Integer> list0 = Intersection.intersection(intArray0, (int[]) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      List<Integer> list0 = Intersection.intersection((int[]) null, (int[]) null);
      assertEquals(0, list0.size());
  }
}
