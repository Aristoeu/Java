/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:37:14 GMT 2022
 */

package com.thealgorithms.datastructures.graphs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.graphs.Cycle;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cycle_ESTest extends Cycle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Cycle cycle0 = new Cycle();
      ArrayList<ArrayList<Integer>> arrayList0 = cycle0.cycles;
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList1.add((Integer) null);
      arrayList0.add(arrayList1);
      arrayList0.add(arrayList1);
      cycle0.printAll();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Cycle cycle0 = new Cycle();
      ArrayList<ArrayList<Integer>> arrayList0 = cycle0.cycles;
      arrayList0.add((ArrayList<Integer>) null);
      // Undeclared exception!
      try { 
        cycle0.printAll();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.Cycle", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SystemInUtil.addInputLine("yvgRjw7vTTGsYWb");
      Cycle cycle0 = null;
      try {
        cycle0 = new Cycle();
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SystemInUtil.addInputLine("-9");
      SystemInUtil.addInputLine("-9");
      Cycle cycle0 = null;
      try {
        cycle0 = new Cycle();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.Cycle", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      SystemInUtil.addInputLine("9");
      SystemInUtil.addInputLine("9");
      SystemInUtil.addInputLine("9");
      Cycle cycle0 = null;
      try {
        cycle0 = new Cycle();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.thealgorithms.datastructures.graphs.Cycle", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Cycle cycle0 = new Cycle();
      ArrayList<ArrayList<Integer>> arrayList0 = cycle0.cycles;
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add(arrayList1);
      // Undeclared exception!
      try { 
        cycle0.printAll();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      SystemInUtil.addInputLine("9");
      Cycle cycle0 = null;
      try {
        cycle0 = new Cycle();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      SystemInUtil.addInputLine("0");
      Cycle cycle0 = new Cycle();
      cycle0.start();
  }
}
