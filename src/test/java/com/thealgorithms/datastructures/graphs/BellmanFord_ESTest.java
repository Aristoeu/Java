/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:14:49 GMT 2022
 */

package com.thealgorithms.datastructures.graphs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.graphs.BellmanFord;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BellmanFord_ESTest extends BellmanFord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[8];
      SystemInUtil.addInputLine("0 0XpsG6");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "0 0XpsG6";
      stringArray0[1] = "0 0XpsG6";
      stringArray0[2] = "0 0XpsG6";
      stringArray0[3] = "0 0XpsG6";
      stringArray0[4] = "0 0XpsG6";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(401, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = bellmanFord0.getEdgeArray();
      bellmanFord0.edge = (-2045);
      bellmanFord0.vertex = 3633;
      bellmanFord0.show(0, 401, bellmanFord_EdgeArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      SystemInUtil.addInputLine("com.thealgorithms.datastructures.graphs.BellmanFord");
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1275;
      BellmanFord bellmanFord0 = new BellmanFord(1268, 1275);
      int int1 = 0;
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1268, Integer.MAX_VALUE, 1254);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(0, 0, 2530);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(0, 1274, (-1));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge((-1), (-1), 2530);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge(2004, 1046, (-1181));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      BellmanFord.Edge bellmanFord_Edge5 = bellmanFord0.new Edge((-691), 0, 1);
      bellmanFord_Edge5.w = 1274;
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge5;
      int[] intArray0 = new int[9];
      intArray0[0] = (-691);
      intArray0[1] = (-1230);
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = (-1181);
      intArray0[5] = 0;
      intArray0[6] = 2530;
      intArray0[7] = 1274;
      intArray0[8] = 0;
      // Undeclared exception!
      try { 
        bellmanFord0.printPath(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(401, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = bellmanFord0.getEdgeArray();
      bellmanFord0.vertex = 3633;
      bellmanFord0.show(0, 0, bellmanFord_EdgeArray0);
      bellmanFord0.show(0, 401, bellmanFord_EdgeArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      String string0 = "";
      // Undeclared exception!
      bellmanFord0.show(0, 3633, bellmanFord_EdgeArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1268, 1275);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1268, Integer.MAX_VALUE, 1254);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(0, 0, 2530);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge((-4), (-4), 2530);
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge(2004, 1046, (-1181));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge((-691), 0, 1);
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge4;
      // Undeclared exception!
      try { 
        bellmanFord0.show(0, 1275, bellmanFord_EdgeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1297, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[2];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1297, 0, 0);
      bellmanFord0.edge = 1297;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(1297, 0, 0);
      bellmanFord_Edge1.v = 1297;
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      // Undeclared exception!
      try { 
        bellmanFord0.show(0, 0, bellmanFord_EdgeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(2671, 2671);
      bellmanFord0.edge = 866;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Distances are: ";
      stringArray0[1] = "d4,H'`";
      stringArray0[2] = "yq57|.;=|,TN!.0X";
      stringArray0[3] = "UJac<_J";
      stringArray0[4] = "%SuvO|vB1%D6}NXc";
      stringArray0[5] = "st";
      stringArray0[6] = "UJac<_J";
      stringArray0[7] = "yq57|.;=|,TN!.0X";
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[5];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(2671, 866, (-1054));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(2671, 0, (-3649));
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(2671, 866, 1);
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge2;
      bellmanFord_Edge0.u = 505;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge(0, 1, 1);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge((-1054), 0, 2671);
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      // Undeclared exception!
      try { 
        bellmanFord0.show(866, 2671, bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2671
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1268, 1275);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1268, Integer.MAX_VALUE, 1254);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(0, 0, 2530);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(0, 1274, (-1));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge((-1), (-1), 2530);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge(2004, 1046, (-1181));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      BellmanFord.Edge bellmanFord_Edge5 = bellmanFord0.new Edge((-691), 0, 1);
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge5;
      // Undeclared exception!
      try { 
        bellmanFord0.show(0, 1275, bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1274
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(401, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = bellmanFord0.getEdgeArray();
      bellmanFord0.vertex = 3633;
      bellmanFord0.show(0, 401, bellmanFord_EdgeArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      SystemInUtil.addInputLine("Q1c86Gi>}");
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("Negative cycle");
      int int0 = 45;
      int int1 = 1071;
      BellmanFord bellmanFord0 = new BellmanFord(45, 1071);
      int int2 = (-1189);
      bellmanFord0.addEdge(1071, (-1189), (-1189));
      // Undeclared exception!
      try { 
        bellmanFord0.go();
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      bellmanFord0.printPath(intArray0, intArray0[6]);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord((-1), 0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 0;
      intArray0[6] = 0;
      bellmanFord0.printPath(intArray0, 0);
      bellmanFord0.edge = 2018;
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge((-1), 1, 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(878, 1);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord bellmanFord1 = new BellmanFord((-2811), 0);
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord1.new Edge(1, 0, 1);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord bellmanFord2 = new BellmanFord(0, 2903);
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord2.new Edge(0, 0, 0);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(332, 0, 297);
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge(0, 2032, 332);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge(297, (-1), (-807));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      BellmanFord.Edge bellmanFord_Edge5 = bellmanFord0.new Edge((-1), (-2811), 0);
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge5;
      bellmanFord0.show(0, 0, bellmanFord_EdgeArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      int[] intArray0 = new int[1];
      bellmanFord0.vertex = (-863);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[1];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(2117, 812, (-5275));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      // Undeclared exception!
      try { 
        bellmanFord0.show(2117, (-863), bellmanFord_EdgeArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(2671, 2671);
      bellmanFord0.edge = 899;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Distances are: ";
      stringArray0[1] = "4,H'`";
      stringArray0[2] = "yq57|.;=|,TN!.0X";
      stringArray0[3] = "UJac<_J";
      stringArray0[4] = "%SuvO|vB1%D6}NXc";
      stringArray0[5] = "st";
      stringArray0[6] = "";
      stringArray0[7] = ":JjaE";
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[5];
      int int0 = (-1054);
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(2671, 899, (-1054));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(2671, 0, (-3658));
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(2671, 899, 899);
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge(0, 1, 1);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge((-1054), 0, 2671);
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      // Undeclared exception!
      try { 
        bellmanFord0.show(899, 2671, bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2671
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1268, 1275);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1268, Integer.MAX_VALUE, 1254);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(0, 0, 2530);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(0, 1274, (-1));
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge((-1), (-1), 2530);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge(2004, 1046, (-1181));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      BellmanFord.Edge bellmanFord_Edge5 = bellmanFord0.new Edge((-691), 0, 1);
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge5;
      // Undeclared exception!
      try { 
        bellmanFord0.show(0, 1275, bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1268
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      String[] stringArray0 = new String[1];
      String string0 = ">f";
      int[] intArray0 = null;
      int int2 = (-1);
      // Undeclared exception!
      try { 
        bellmanFord0.printPath((int[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(0, 2844);
      bellmanFord0.getEdgeArray();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = (-95);
      int int1 = 1925;
      BellmanFord bellmanFord0 = new BellmanFord((-95), 1925);
      int int2 = (-1113);
      bellmanFord0.vertex = (-95);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        bellmanFord0.printPath(intArray0, (-95));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(4536, 4536);
      bellmanFord0.addEdge(0, 303, 0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(401, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = bellmanFord0.getEdgeArray();
      bellmanFord0.vertex = 3633;
      bellmanFord0.show(0, 401, bellmanFord_EdgeArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      int int1 = 1651;
      BellmanFord bellmanFord0 = new BellmanFord(0, 1651);
      // Undeclared exception!
      try { 
        bellmanFord0.go();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 2010;
      int int1 = (-784);
      BellmanFord bellmanFord0 = null;
      try {
        bellmanFord0 = new BellmanFord(2010, (-784));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "RA_lAX%KW4z2^#'";
      stringArray0[2] = "H";
      stringArray0[3] = "";
      stringArray0[4] = "nC bJHB";
      stringArray0[5] = "j&_`&vu?/t$@~a<[+";
      stringArray0[6] = "";
      stringArray0[7] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      stringArray0[8] = "";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 0;
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[4];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(0, 0, (-2595));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge((-789), (-2595), 0);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge((-2595), 0, 0);
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge2;
      BellmanFord bellmanFord1 = new BellmanFord((-809), 0);
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord1.new Edge((-1), 0, 0);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      // Undeclared exception!
      try { 
        bellmanFord0.show((-809), (-789), bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -809
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      int int1 = 0;
      bellmanFord0.printPath(intArray0, int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        BellmanFord.main((String[]) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord((-2944), 3535);
      bellmanFord0.addEdge(3535, 3535, (-2944));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(4536, 4536);
      // Undeclared exception!
      try { 
        bellmanFord0.go();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1268, 1275);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[6];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1268, Integer.MAX_VALUE, 1254);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(0, 0, 2530);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(0, 1259, (-1));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge2;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge((-1), (-1), 2530);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge(2004, 1046, (-1181));
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      BellmanFord.Edge bellmanFord_Edge5 = bellmanFord0.new Edge((-691), 0, 1);
      bellmanFord_Edge5.u = Integer.MAX_VALUE;
      bellmanFord_EdgeArray0[5] = bellmanFord_Edge5;
      // Undeclared exception!
      try { 
        bellmanFord0.show(0, 1275, bellmanFord_EdgeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 0;
      BellmanFord bellmanFord0 = new BellmanFord(0, 0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        bellmanFord0.addEdge(3075, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(2671, 2671);
      bellmanFord0.edge = 2671;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Distances are: ";
      stringArray0[1] = "d4,H'`";
      stringArray0[2] = "yq57|.;=|,TN!.0X";
      stringArray0[3] = "UJac<_J";
      stringArray0[4] = "%SuvO|vB1%D6}NXc";
      stringArray0[5] = "st";
      stringArray0[6] = "UJac<_J";
      stringArray0[7] = "yq57|.;=|,TN!.0X";
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[5];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(2671, 866, (-1054));
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(2671, 0, (-3649));
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      BellmanFord.Edge bellmanFord_Edge2 = bellmanFord0.new Edge(2671, 866, 1);
      bellmanFord_EdgeArray0[2] = bellmanFord_Edge1;
      bellmanFord_Edge0.u = 505;
      BellmanFord.Edge bellmanFord_Edge3 = bellmanFord0.new Edge(0, 1, 1);
      bellmanFord_EdgeArray0[3] = bellmanFord_Edge3;
      BellmanFord.Edge bellmanFord_Edge4 = bellmanFord0.new Edge((-1054), 0, 2671);
      bellmanFord_EdgeArray0[4] = bellmanFord_Edge4;
      // Undeclared exception!
      try { 
        bellmanFord0.show(866, 2671, bellmanFord_EdgeArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2671
         //
         verifyException("com.thealgorithms.datastructures.graphs.BellmanFord", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(401, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = bellmanFord0.getEdgeArray();
      bellmanFord0.vertex = 3633;
      bellmanFord0.show(0, 401, bellmanFord_EdgeArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.thealgorithms.datastructures.graphs.BellmanFord";
      stringArray0[1] = "-";
      // Undeclared exception!
      try { 
        BellmanFord.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BellmanFord bellmanFord0 = new BellmanFord(1297, 0);
      BellmanFord.Edge[] bellmanFord_EdgeArray0 = new BellmanFord.Edge[2];
      BellmanFord.Edge bellmanFord_Edge0 = bellmanFord0.new Edge(1297, 0, 0);
      bellmanFord_EdgeArray0[0] = bellmanFord_Edge0;
      BellmanFord.Edge bellmanFord_Edge1 = bellmanFord0.new Edge(1297, 0, 0);
      bellmanFord_EdgeArray0[1] = bellmanFord_Edge1;
      bellmanFord0.show(0, 0, bellmanFord_EdgeArray0);
      assertEquals(2, bellmanFord_EdgeArray0.length);
  }
}
