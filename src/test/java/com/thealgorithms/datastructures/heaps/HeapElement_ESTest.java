/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:42:41 GMT 2022
 */

package com.thealgorithms.datastructures.heaps;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.heaps.HeapElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HeapElement_ESTest extends HeapElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HeapElement heapElement0 = new HeapElement(0.0);
      Integer integer0 = new Integer(800);
      HeapElement heapElement1 = new HeapElement(integer0, (Object) heapElement0);
      boolean boolean0 = heapElement0.equals(heapElement1);
      assertEquals(0.0, heapElement0.getKey(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      HeapElement heapElement0 = new HeapElement(double0);
      double double1 = heapElement0.getKey();
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HeapElement heapElement0 = new HeapElement(279.5451845);
      double double0 = heapElement0.getKey();
      assertEquals(279.5451845, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HeapElement heapElement0 = new HeapElement((-2521), (Object) null);
      heapElement0.getInfo();
      assertEquals((-2521.0), heapElement0.getKey(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HeapElement heapElement0 = new HeapElement(0);
      // Undeclared exception!
      try { 
        heapElement0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        integer0.toString();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", (-557));
      HeapElement heapElement0 = new HeapElement(integer0);
      // Undeclared exception!
      try { 
        heapElement0.equals(heapElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.HeapElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HeapElement heapElement0 = null;
      try {
        heapElement0 = new HeapElement((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.HeapElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      HeapElement heapElement0 = new HeapElement(2285.32907297467, object0);
      HeapElement heapElement1 = null;
      try {
        heapElement1 = new HeapElement((Double) null, (Object) heapElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.HeapElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      heapElement0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(558);
      HeapElement heapElement0 = new HeapElement(integer0, integer0);
      HeapElement heapElement1 = new HeapElement(integer0);
      boolean boolean0 = heapElement0.equals(heapElement1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      HeapElement heapElement1 = new HeapElement((-2147082234), (Object) "Key: -2624.102026 - java.lang.Double@0000000002");
      boolean boolean0 = heapElement0.equals(heapElement1);
      assertEquals((-2.147082234E9), heapElement1.getKey(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      boolean boolean0 = heapElement0.equals(heapElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      boolean boolean0 = heapElement0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      String string0 = heapElement0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      double double1 = heapElement0.getKey();
      assertEquals((-2624.102026), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      HeapElement heapElement0 = new HeapElement(0.0, object0);
      boolean boolean0 = heapElement0.equals(object0);
      assertEquals(0.0, heapElement0.getKey(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HeapElement heapElement0 = null;
      try {
        heapElement0 = new HeapElement((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.HeapElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HeapElement heapElement0 = null;
      try {
        heapElement0 = new HeapElement((Integer) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.HeapElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-2624.102026));
      HeapElement heapElement0 = new HeapElement(double0, double0);
      Object object0 = heapElement0.getInfo();
      assertEquals((-2624.102026), object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HeapElement heapElement0 = new HeapElement((double) (-1003));
      heapElement0.hashCode();
      assertEquals((-1003.0), heapElement0.getKey(), 0.01);
  }
}
