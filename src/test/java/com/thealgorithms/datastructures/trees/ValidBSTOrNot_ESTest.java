/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:38:43 GMT 2022
 */

package com.thealgorithms.datastructures.trees;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.datastructures.trees.ValidBSTOrNot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValidBSTOrNot_ESTest extends ValidBSTOrNot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValidBSTOrNot validBSTOrNot0 = new ValidBSTOrNot();
      ValidBSTOrNot.Node validBSTOrNot_Node0 = validBSTOrNot0.new Node(1112);
      validBSTOrNot0.isBSTUtil(validBSTOrNot_Node0, 1112, 1112);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValidBSTOrNot validBSTOrNot0 = new ValidBSTOrNot();
      ValidBSTOrNot.Node validBSTOrNot_Node0 = validBSTOrNot0.new Node(1112);
      validBSTOrNot_Node0.right = validBSTOrNot_Node0;
      boolean boolean0 = validBSTOrNot0.isBST(validBSTOrNot_Node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValidBSTOrNot validBSTOrNot0 = new ValidBSTOrNot();
      ValidBSTOrNot.Node validBSTOrNot_Node0 = validBSTOrNot0.new Node(1112);
      validBSTOrNot_Node0.right = validBSTOrNot_Node0;
      ValidBSTOrNot.Node validBSTOrNot_Node1 = validBSTOrNot_Node0.right;
      validBSTOrNot_Node1.left = validBSTOrNot_Node0;
      boolean boolean0 = validBSTOrNot0.isBST(validBSTOrNot_Node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValidBSTOrNot validBSTOrNot0 = new ValidBSTOrNot();
      ValidBSTOrNot.Node validBSTOrNot_Node0 = validBSTOrNot0.new Node(1112);
      boolean boolean0 = validBSTOrNot0.isBSTUtil(validBSTOrNot_Node0, 0, (-1060));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValidBSTOrNot validBSTOrNot0 = new ValidBSTOrNot();
      ValidBSTOrNot.Node validBSTOrNot_Node0 = validBSTOrNot0.new Node(1112);
      boolean boolean0 = validBSTOrNot0.isBST(validBSTOrNot_Node0);
      assertTrue(boolean0);
  }
}
