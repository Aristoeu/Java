/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:03:34 GMT 2022
 */

package com.thealgorithms.datastructures.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.bloomfilter.BloomFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BloomFilter_ESTest extends BloomFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 2773;
      BloomFilter<String> bloomFilter0 = new BloomFilter<String>(2773, 2773);
      bloomFilter0.insert("");
      bloomFilter0.contains("");
      String string0 = "";
      // Undeclared exception!
      bloomFilter0.insert("");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BloomFilter<Object> bloomFilter0 = new BloomFilter<Object>(1, 0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        bloomFilter0.contains(object0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.bloomfilter.BloomFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BloomFilter<Object> bloomFilter0 = new BloomFilter<Object>(2705, 2705);
      Integer integer0 = new Integer(288);
      // Undeclared exception!
      bloomFilter0.insert(integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BloomFilter<Integer> bloomFilter0 = new BloomFilter<Integer>(0, 0);
      Integer integer0 = new Integer(0);
      bloomFilter0.contains(integer0);
      int int0 = 2804;
      BloomFilter<String> bloomFilter1 = new BloomFilter<String>(2804, 0);
      // Undeclared exception!
      try { 
        bloomFilter1.insert("");
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BloomFilter<Object> bloomFilter0 = new BloomFilter<Object>(0, 1374);
      bloomFilter0.insert("8Yd");
      bloomFilter0.insert((Object) null);
      bloomFilter0.contains((Object) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BloomFilter<Integer> bloomFilter0 = new BloomFilter<Integer>(5475, 5475);
      Integer integer0 = new Integer(5475);
      // Undeclared exception!
      bloomFilter0.insert(integer0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = (-1965);
      BloomFilter<String> bloomFilter0 = null;
      try {
        bloomFilter0 = new BloomFilter<String>((-1965), (-1965));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.bloomfilter.BloomFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BloomFilter<Object> bloomFilter0 = new BloomFilter<Object>(1085, 1085);
      String string0 = "";
      bloomFilter0.insert("");
      Object object0 = new Object();
      bloomFilter0.contains(object0);
      Object object1 = new Object();
      bloomFilter0.contains(object1);
      bloomFilter0.contains("");
      BloomFilter<Integer> bloomFilter1 = null;
      try {
        bloomFilter1 = new BloomFilter<Integer>((-274), (-274));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.bloomfilter.BloomFilter", e);
      }
  }
}
