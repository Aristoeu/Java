/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:10:39 GMT 2022
 */

package com.thealgorithms.datastructures.bags;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.bags.Bag;
import java.util.Spliterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Bag_ESTest extends Bag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      Object object0 = new Object();
      bag0.add(object0);
      int int0 = bag0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      bag0.iterator();
      assertEquals(0, bag0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      bag0.add((Object) null);
      // Undeclared exception!
      try { 
        bag0.contains((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.bags.Bag", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bag<Integer> bag0 = new Bag<Integer>();
      Integer integer0 = new Integer(0);
      bag0.add(integer0);
      boolean boolean0 = bag0.contains(integer0);
      assertEquals(1, bag0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      int int0 = bag0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      boolean boolean0 = bag0.isEmpty();
      assertEquals(0, bag0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Bag<String> bag0 = new Bag<String>();
      bag0.add("v");
      boolean boolean0 = bag0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Bag.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Bag<Object> bag0 = new Bag<Object>();
      Object object0 = new Object();
      bag0.add(object0);
      Spliterator<Object> spliterator0 = bag0.spliterator();
      boolean boolean0 = bag0.contains(spliterator0);
      assertEquals(1, bag0.size());
      assertFalse(boolean0);
  }
}
