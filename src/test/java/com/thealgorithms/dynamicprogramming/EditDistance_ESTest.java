/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:36:02 GMT 2022
 */

package com.thealgorithms.dynamicprogramming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.dynamicprogramming.EditDistance;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EditDistance_ESTest extends EditDistance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = EditDistance.editDistance("mokHjh78", "A!D9 %$V#37>=fRK@Z");
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[1];
      intArray1[0] = (-413);
      intArray0[0] = intArray1;
      int int0 = EditDistance.editDistance("", "", intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = EditDistance.editDistance("", "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        EditDistance.minDistance("[", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.dynamicprogramming.EditDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[7][3];
      // Undeclared exception!
      try { 
        EditDistance.editDistance("yQ@.y01gyU", (String) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[][] intArray0 = new int[3][2];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        EditDistance.editDistance(";", "H", intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        EditDistance.editDistance((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.dynamicprogramming.EditDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[][] intArray0 = new int[7][4];
      int[] intArray1 = new int[9];
      intArray0[2] = intArray1;
      intArray0[4] = intArray0[2];
      int int0 = EditDistance.editDistance("n<$", "n<$", intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[3][2];
      int int0 = EditDistance.editDistance(";", "H", intArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[][] intArray0 = new int[2][0];
      int[] intArray1 = new int[5];
      intArray1[1] = 289;
      intArray0[1] = intArray1;
      int int0 = EditDistance.editDistance("y", "y", intArray0);
      assertEquals(289, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[][] intArray0 = new int[3][2];
      int int0 = EditDistance.editDistance(";", "", intArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = EditDistance.minDistance("BNOFIW_d&[pGpY", "-_xDVqsAa");
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("The minimum Edit Distance between \"");
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("The minimum Edit Distance between \"");
      EditDistance.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = EditDistance.minDistance(";", ";");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditDistance editDistance0 = new EditDistance();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        EditDistance.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
