/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:14:23 GMT 2022
 */

package com.thealgorithms.dynamicprogramming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.dynamicprogramming.KadaneAlgorithm;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KadaneAlgorithm_ESTest extends KadaneAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3091;
      boolean boolean0 = KadaneAlgorithm.max_Sum(intArray0, 2624);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[23];
      intArray0[3] = (-4135);
      boolean boolean0 = KadaneAlgorithm.max_Sum(intArray0, (-4135));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        KadaneAlgorithm.max_Sum((int[]) null, 3254);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.dynamicprogramming.KadaneAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        KadaneAlgorithm.max_Sum(intArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.dynamicprogramming.KadaneAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-384);
      boolean boolean0 = KadaneAlgorithm.max_Sum(intArray0, (-384));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-384);
      boolean boolean0 = KadaneAlgorithm.max_Sum(intArray0, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KadaneAlgorithm kadaneAlgorithm0 = new KadaneAlgorithm();
  }
}
