/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:39:40 GMT 2022
 */

package com.thealgorithms.dynamicprogramming;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.dynamicprogramming.Matrix;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Matrix_ESTest extends Matrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Matrix matrix0 = new Matrix(0, 0, 0);
      int int0 = matrix0.row();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Matrix matrix0 = new Matrix(2074, 2074, (-1685));
      int int0 = matrix0.row();
      assertEquals((-1685), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Matrix matrix0 = new Matrix(0, 0, 0);
      int int0 = matrix0.count();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Matrix matrix0 = new Matrix(2074, 2074, (-1685));
      int int0 = matrix0.count();
      assertEquals(2074, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Matrix matrix0 = new Matrix(0, 0, 0);
      int int0 = matrix0.col();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Matrix matrix0 = new Matrix(2074, 2074, (-1685));
      int int0 = matrix0.col();
      assertEquals(2074, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Matrix matrix0 = new Matrix((-1), (-1), 750);
      int int0 = matrix0.col();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Matrix matrix0 = new Matrix((-1), (-1), 750);
      int int0 = matrix0.row();
      assertEquals(750, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Matrix matrix0 = new Matrix((-1), (-1), 750);
      int int0 = matrix0.count();
      assertEquals((-1), int0);
  }
}
