/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:20:51 GMT 2022
 */

package com.thealgorithms.strings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.strings.ReverseString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReverseString_ESTest extends ReverseString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = ReverseString.reverse2("^");
      assertEquals("^", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = ReverseString.reverse("h(TPhLSQoizUo4");
      assertEquals("4oUzioQSLhPT(h", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = ReverseString.reverse("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = ReverseString.reverse2("V(uH2'Ew");
      assertEquals("wE'2Hu(V", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReverseString.reverse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = ReverseString.reverse2("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[12];
      String string0 = ReverseString.reverse2(stringArray0[5]);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ReverseString.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReverseString reverseString0 = new ReverseString();
  }
}
