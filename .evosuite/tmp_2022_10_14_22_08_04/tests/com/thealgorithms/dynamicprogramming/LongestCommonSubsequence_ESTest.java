/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:50:58 GMT 2022
 */

package com.thealgorithms.dynamicprogramming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.dynamicprogramming.LongestCommonSubsequence;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LongestCommonSubsequence_ESTest extends LongestCommonSubsequence_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[][] intArray0 = new int[0][0];
      // Undeclared exception!
      try { 
        LongestCommonSubsequence.lcsString((String) null, "", intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.dynamicprogramming.LongestCommonSubsequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      // Undeclared exception!
      try { 
        LongestCommonSubsequence.lcsString("uvj'E:YJxR", "SdGK(6fWtt", intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.thealgorithms.dynamicprogramming.LongestCommonSubsequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[][] intArray0 = new int[7][6];
      int[] intArray1 = new int[6];
      intArray1[1] = 4390;
      intArray0[0] = intArray1;
      String string0 = LongestCommonSubsequence.lcsString("M", "bIW", intArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[][] intArray0 = new int[12][9];
      String string0 = LongestCommonSubsequence.lcsString("Z2LeEMb44c}RT#3", "Z2LeEMb44c}RT#3", intArray0);
      assertEquals("Z2LeEMb44c}RT#3", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[12][9];
      String string0 = LongestCommonSubsequence.lcsString("f1V\"=L", "&", intArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[3];
      LongestCommonSubsequence.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS("a8", "Z2LeEMb44c}RT#3");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS("Z2LeEMb44c}RT#3", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS("Z2LeEMb44c}RT#3", "Z2LeEMb44c}RT#3");
      assertEquals("Z2LeEMb44c}RT#3", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS("XVTh$w:T%pOhbr", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = LongestCommonSubsequence.getLCS((String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongestCommonSubsequence longestCommonSubsequence0 = new LongestCommonSubsequence();
  }
}
