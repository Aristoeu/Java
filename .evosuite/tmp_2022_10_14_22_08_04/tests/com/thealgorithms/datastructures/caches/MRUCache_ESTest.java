/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:52:19 GMT 2022
 */

package com.thealgorithms.datastructures.caches;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.caches.MRUCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MRUCache_ESTest extends MRUCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MRUCache.Entry<Integer, Object> mRUCache_Entry0 = new MRUCache.Entry<Integer, Object>();
      MRUCache.Entry<Integer, Object> mRUCache_Entry1 = new MRUCache.Entry<Integer, Object>((MRUCache.Entry<Integer, Object>) null, mRUCache_Entry0, (Integer) null, (Object) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MRUCache<Object, Object> mRUCache0 = new MRUCache<Object, Object>(2654);
      mRUCache0.put((Object) null, "iv,:3");
      mRUCache0.put((Object) null, "iv,:3");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MRUCache<Integer, Object> mRUCache0 = null;
      try {
        mRUCache0 = new MRUCache<Integer, Object>(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // capacity must greater than 0!
         //
         verifyException("com.thealgorithms.datastructures.caches.MRUCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MRUCache.Entry<String, String> mRUCache_Entry0 = new MRUCache.Entry<String, String>();
      MRUCache.Entry<Object, Object> mRUCache_Entry1 = new MRUCache.Entry<Object, Object>((MRUCache.Entry<Object, Object>) null, (MRUCache.Entry<Object, Object>) null, (Object) null, mRUCache_Entry0);
      Object object0 = mRUCache_Entry1.getValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MRUCache.Entry<Object, Object> mRUCache_Entry0 = new MRUCache.Entry<Object, Object>();
      MRUCache.Entry<Object, Object> mRUCache_Entry1 = mRUCache_Entry0.getNextEntry();
      assertNull(mRUCache_Entry1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MRUCache.Entry<Integer, Object> mRUCache_Entry0 = new MRUCache.Entry<Integer, Object>();
      MRUCache.Entry<Integer, Object> mRUCache_Entry1 = mRUCache_Entry0.getPreEntry();
      assertNull(mRUCache_Entry1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MRUCache.Entry<Object, String> mRUCache_Entry0 = new MRUCache.Entry<Object, String>();
      mRUCache_Entry0.setValue("X$E$M{=];@[2");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MRUCache.Entry<String, String> mRUCache_Entry0 = new MRUCache.Entry<String, String>();
      mRUCache_Entry0.setKey("/");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MRUCache.Entry<MRUCache.Entry<Object, String>, Integer> mRUCache_Entry0 = new MRUCache.Entry<MRUCache.Entry<Object, String>, Integer>();
      MRUCache.Entry<MRUCache.Entry<Object, String>, Integer> mRUCache_Entry1 = new MRUCache.Entry<MRUCache.Entry<Object, String>, Integer>();
      mRUCache_Entry1.setNextEntry(mRUCache_Entry0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MRUCache<String, String> mRUCache0 = new MRUCache<String, String>();
      mRUCache0.put("VOhFrC?b|9'2yZ_,d", "");
      mRUCache0.put("", "");
      mRUCache0.put((String) null, "");
      mRUCache0.put("", "");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MRUCache<String, String> mRUCache0 = new MRUCache<String, String>();
      String string0 = mRUCache0.get("com.thealgorithms.datastructures.caches.MRUCache");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MRUCache.Entry<Object, String> mRUCache_Entry0 = new MRUCache.Entry<Object, String>();
      MRUCache<Object, MRUCache.Entry<Object, String>> mRUCache0 = new MRUCache<Object, MRUCache.Entry<Object, String>>(1);
      mRUCache0.put("", mRUCache_Entry0);
      // Undeclared exception!
      try { 
        mRUCache0.put(mRUCache_Entry0, mRUCache_Entry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.caches.MRUCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MRUCache<Object, MRUCache.Entry<String, String>> mRUCache0 = null;
      try {
        mRUCache0 = new MRUCache<Object, MRUCache.Entry<String, String>>((-15));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // capacity must greater than 0!
         //
         verifyException("com.thealgorithms.datastructures.caches.MRUCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MRUCache.Entry<Object, Object> mRUCache_Entry0 = new MRUCache.Entry<Object, Object>();
      Object object0 = mRUCache_Entry0.getKey();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MRUCache<String, String> mRUCache0 = new MRUCache<String, String>();
      mRUCache0.put("", "");
      String string0 = mRUCache0.get("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MRUCache<String, String> mRUCache0 = new MRUCache<String, String>();
      mRUCache0.put("", "");
      mRUCache0.put((String) null, "");
      mRUCache0.put("", "");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MRUCache.Entry<MRUCache.Entry<Object, String>, Integer> mRUCache_Entry0 = new MRUCache.Entry<MRUCache.Entry<Object, String>, Integer>();
      MRUCache.Entry<MRUCache.Entry<Object, String>, Integer> mRUCache_Entry1 = new MRUCache.Entry<MRUCache.Entry<Object, String>, Integer>();
      mRUCache_Entry1.setPreEntry(mRUCache_Entry0);
  }
}
