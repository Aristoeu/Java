/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:22:07 GMT 2022
 */

package com.thealgorithms.datastructures.stacks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.stacks.CalculateMaxOfMin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CalculateMaxOfMin_ESTest extends CalculateMaxOfMin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 335;
      int int0 = CalculateMaxOfMin.calculateMaxOfMin(intArray0);
      assertArrayEquals(new int[] {0, 0, 335}, intArray0);
      assertEquals(335, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-1013);
      int int0 = CalculateMaxOfMin.calculateMaxOfMin(intArray0);
      assertEquals((-1013), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        CalculateMaxOfMin.calculateMaxOfMin((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.stacks.CalculateMaxOfMin", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        CalculateMaxOfMin.calculateMaxOfMin(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.thealgorithms.datastructures.stacks.CalculateMaxOfMin", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = CalculateMaxOfMin.calculateMaxOfMin(intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CalculateMaxOfMin calculateMaxOfMin0 = new CalculateMaxOfMin();
  }
}
