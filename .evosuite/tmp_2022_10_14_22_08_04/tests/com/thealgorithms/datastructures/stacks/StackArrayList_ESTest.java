/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:36:44 GMT 2022
 */

package com.thealgorithms.datastructures.stacks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.stacks.StackArrayList;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackArrayList_ESTest extends StackArrayList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push((-920));
      int int0 = stackArrayList0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push(0);
      int int0 = stackArrayList0.pop();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push(1261);
      int int0 = stackArrayList0.pop();
      assertEquals(1261, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push(0);
      int int0 = stackArrayList0.peek();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push(1261);
      int int0 = stackArrayList0.peek();
      assertEquals(1261, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push((-5319));
      int int0 = stackArrayList0.peek();
      assertEquals((-5319), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      boolean boolean0 = stackArrayList0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      // Undeclared exception!
      try { 
        stackArrayList0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.stacks.StackArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push((-1463));
      int int0 = stackArrayList0.pop();
      assertEquals((-1463), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      stackArrayList0.push(0);
      boolean boolean0 = stackArrayList0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      int int0 = stackArrayList0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackArrayList stackArrayList0 = new StackArrayList();
      // Undeclared exception!
      try { 
        stackArrayList0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.stacks.StackArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[4];
      StackArrayList.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }
}
