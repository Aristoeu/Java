/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:06:49 GMT 2022
 */

package com.thealgorithms.datastructures.hashmap.hashing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HashMapLinearProbing_ESTest extends HashMapLinearProbing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 2039;
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2039);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash(2039);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.deleteHash(2039);
      hashMapLinearProbing0.deleteHash(0);
      hashMapLinearProbing0.findHash(2039);
      // Undeclared exception!
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2464);
      int int0 = 1808;
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.deleteHash(2464);
      hashMapLinearProbing0.deleteHash(1808);
      hashMapLinearProbing0.insertHash(1808);
      int int1 = 896;
      hashMapLinearProbing0.deleteHash(896);
      hashMapLinearProbing0.deleteHash(2464);
      hashMapLinearProbing0.checkLoadFactor();
      // Undeclared exception!
      hashMapLinearProbing0.findHash(2464);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 2180;
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2180);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.isEmpty();
      hashMapLinearProbing0.findHash(2);
      hashMapLinearProbing0.deleteHash(2180);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.hashing(2180);
      hashMapLinearProbing0.findHash(2180);
      // Undeclared exception!
      hashMapLinearProbing0.deleteHash(2180);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 2505;
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2505);
      int int1 = (-2103);
      hashMapLinearProbing0.findHash((-2103));
      hashMapLinearProbing0.insertHash(2505);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.insertHash((-2103));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.isEmpty();
      // Undeclared exception!
      hashMapLinearProbing0.displayHashtable();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.isFull();
      // Undeclared exception!
      try { 
        hashMapLinearProbing0.hashing(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.isFull();
      // Undeclared exception!
      try { 
        hashMapLinearProbing0.findHash(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(938);
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      // Undeclared exception!
      try { 
        hashMapLinearProbing0.deleteHash(164);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      // Undeclared exception!
      try { 
        hashMapLinearProbing0.insertHash((-1213));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(294);
      hashMapLinearProbing0.findHash(2803);
      hashMapLinearProbing0.insertHash(294);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash(294);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.findHash(0);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.findHash(2);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.insertHash(3359);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.isEmpty();
      hashMapLinearProbing0.isFull();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1);
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.findHash(1);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.deleteHash(628);
      hashMapLinearProbing0.isEmpty();
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.findHash(1);
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash((-1));
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.findHash((-1));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(34);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1972);
      hashMapLinearProbing0.deleteHash(1);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.insertHash((-475));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.findHash((-475));
      int int0 = new Integer(1972);
      hashMapLinearProbing0.insertHash(1029);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = (-1415);
      HashMapLinearProbing hashMapLinearProbing0 = null;
      try {
        hashMapLinearProbing0 = new HashMapLinearProbing((-1415));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1712);
      hashMapLinearProbing0.deleteHash(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2925);
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.findHash(0);
      hashMapLinearProbing0.deleteHash(296);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.findHash(2925);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1345);
      hashMapLinearProbing0.insertHash(1345);
      hashMapLinearProbing0.insertHash(1211);
      hashMapLinearProbing0.findHash(1);
      hashMapLinearProbing0.hashing(1);
      hashMapLinearProbing0.findHash((-1));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1599);
      hashMapLinearProbing0.findHash((-4781));
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2456);
      hashMapLinearProbing0.insertHash(2456);
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.displayHashtable();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(633);
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.insertHash(633);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      hashMapLinearProbing0.displayHashtable();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1);
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.insertHash(417);
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.deleteHash(0);
      hashMapLinearProbing0.deleteHash(0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(4672);
      hashMapLinearProbing0.insertHash(Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(2744);
      hashMapLinearProbing0.hashing((-1677));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(0);
      hashMapLinearProbing0.checkLoadFactor();
      // Undeclared exception!
      try { 
        hashMapLinearProbing0.findHash(0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.thealgorithms.datastructures.hashmap.hashing.HashMapLinearProbing", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.isEmpty();
      hashMapLinearProbing0.findHash(1);
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash(0);
      hashMapLinearProbing0.deleteHash((-1267));
      hashMapLinearProbing0.insertHash((-3606));
      hashMapLinearProbing0.insertHash(1);
      hashMapLinearProbing0.deleteHash((-3606));
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.hashing((-3606));
      hashMapLinearProbing0.hashing((-1267));
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(1921);
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.isEmpty();
      hashMapLinearProbing0.findHash(0);
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.insertHash(291);
      hashMapLinearProbing0.findHash(0);
      hashMapLinearProbing0.deleteHash(Integer.MIN_VALUE);
      hashMapLinearProbing0.hashing(0);
      hashMapLinearProbing0.deleteHash(1921);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMapLinearProbing hashMapLinearProbing0 = new HashMapLinearProbing(466);
      hashMapLinearProbing0.deleteHash(466);
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.findHash(466);
      hashMapLinearProbing0.findHash((-1));
      hashMapLinearProbing0.isFull();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.findHash((-2557));
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.findHash((-1094));
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.insertHash(1904);
      hashMapLinearProbing0.insertHash(1904);
      hashMapLinearProbing0.insertHash((-1));
      hashMapLinearProbing0.findHash((-3285));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.deleteHash((-2557));
      hashMapLinearProbing0.deleteHash((-1));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.checkLoadFactor();
      hashMapLinearProbing0.hashing(1904);
      hashMapLinearProbing0.deleteHash((-2557));
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.displayHashtable();
      hashMapLinearProbing0.insertHash(0);
      hashMapLinearProbing0.checkLoadFactor();
      assertFalse(hashMapLinearProbing0.isEmpty());
  }
}
