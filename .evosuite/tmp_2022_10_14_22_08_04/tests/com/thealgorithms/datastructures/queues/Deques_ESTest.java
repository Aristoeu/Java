/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:06:24 GMT 2022
 */

package com.thealgorithms.datastructures.queues;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.queues.Deques;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Deques_ESTest extends Deques_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Deques<String> deques0 = new Deques<String>();
      deques0.addFirst("");
      assertFalse(deques0.isEmpty());
      
      deques0.peekLast();
      Deques<Object> deques1 = new Deques<Object>();
      deques1.pollLast();
      deques1.size = (-5310);
      deques0.peekLast();
      deques1.toString();
      deques1.size();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      deques0.addFirst((Object) null);
      deques0.peekLast();
      deques0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      deques0.pollFirst();
      Integer integer0 = new Integer((-2357));
      Integer.compareUnsigned((-2357), (-210));
      Integer.sum((-2357), (-2357));
      deques0.addFirst(integer0);
      Deques<String> deques1 = new Deques<String>();
      deques1.addLast("");
      deques0.peekFirst();
      deques1.isEmpty();
      deques0.peekLast();
      Deques<Integer> deques2 = new Deques<Integer>();
      deques2.size();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      Deques<String> deques1 = new Deques<String>();
      deques1.pollLast();
      deques0.addFirst((Object) null);
      Deques<String> deques2 = new Deques<String>();
      deques2.toString();
      deques2.pollLast();
      deques0.addFirst((Object) null);
      deques0.toString();
      deques2.addLast("VUYe_a?)D");
      deques0.peekFirst();
      Deques<Integer> deques3 = new Deques<Integer>();
      Integer integer0 = new Integer((-2583));
      deques3.addFirst(integer0);
      deques3.pollFirst();
      deques3.toString();
      deques1.pollFirst();
      deques2.size();
      // Undeclared exception!
      try { 
        deques1.peekLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.queues.Deques", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      deques0.addFirst((Object) null);
      deques0.pollLast();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Deques<Integer> deques0 = new Deques<Integer>();
      Integer integer0 = new Integer(82);
      deques0.addFirst(integer0);
      deques0.addLast((Integer) null);
      deques0.pollFirst();
      Deques<String> deques1 = new Deques<String>();
      // Undeclared exception!
      try { 
        deques1.peekFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.queues.Deques", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      deques0.addFirst("");
      deques0.pollFirst();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Deques<String> deques0 = new Deques<String>();
      deques0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      // Undeclared exception!
      try { 
        deques0.peekFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.queues.Deques", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      deques0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      String[] stringArray0 = new String[0];
      Deques.main(stringArray0);
      Deques<Object> deques1 = new Deques<Object>();
      deques0.pollFirst();
      String string0 = "i\"m/DEj5A'";
      int int0 = (-767);
      Deques<Object> deques2 = new Deques<Object>();
      // Undeclared exception!
      try { 
        deques2.peekLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.queues.Deques", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Deques<Object> deques0 = new Deques<Object>();
      Deques<String> deques1 = new Deques<String>();
      deques1.pollLast();
      deques0.addLast((Object) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Deques.main((String[]) null);
      Deques<String> deques0 = new Deques<String>();
      deques0.pollFirst();
      Deques<Object> deques1 = new Deques<Object>();
      // Undeclared exception!
      try { 
        deques1.peekLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.queues.Deques", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Deques<Integer> deques0 = new Deques<Integer>();
      Integer integer0 = new Integer((-2564));
      deques0.addFirst(integer0);
      deques0.pollFirst();
      assertEquals(0, deques0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Deques.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Deques<Integer> deques0 = new Deques<Integer>();
      deques0.isEmpty();
      Deques<Object> deques1 = new Deques<Object>();
      deques0.pollLast();
      deques1.addLast(deques0);
      deques1.peekLast();
      deques1.isEmpty();
      deques1.peekFirst();
      assertEquals(1, deques1.size());
      
      deques0.pollFirst();
      assertEquals(0, deques0.size());
  }
}
