/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:24:14 GMT 2022
 */

package com.thealgorithms.datastructures.graphs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS;
import java.io.IOException;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BipartiteGrapfDFS_ESTest extends BipartiteGrapfDFS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      boolean boolean0 = BipartiteGrapfDFS.isBipartite((-1), arrayList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add(arrayList1);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer0 = new Integer(0);
      arrayList2.add(integer0);
      arrayList0.add(arrayList2);
      Integer integer1 = new Integer(1);
      arrayList1.add(integer1);
      boolean boolean0 = BipartiteGrapfDFS.isBipartite(1, arrayList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add(arrayList1);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer0 = new Integer(42);
      arrayList2.add(integer0);
      arrayList0.add(arrayList2);
      Integer integer1 = new Integer(1);
      arrayList1.add(integer1);
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.isBipartite(1612, arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 42, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[9];
      SystemInUtil.addInputLine("wTtV[' ");
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.main(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"wTtV['\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      SystemInUtil.addInputLine("7");
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.main((String[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.isBipartite(37, (ArrayList<ArrayList<Integer>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.isBipartite((-84), arrayList0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-14));
      arrayList1.add(integer0);
      arrayList0.add(arrayList1);
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.isBipartite(1482, arrayList0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -14
         //
         verifyException("com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      try { 
        BipartiteGrapfDFS.main((String[]) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      String[] stringArray0 = new String[2];
      BipartiteGrapfDFS.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add(arrayList1);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      arrayList0.add(arrayList2);
      Integer integer0 = new Integer(1);
      arrayList1.add(integer0);
      arrayList0.add(arrayList1);
      // Undeclared exception!
      try { 
        BipartiteGrapfDFS.isBipartite(2986, arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 3
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.add(arrayList1);
      Integer integer0 = new Integer(1);
      arrayList1.add(integer0);
      arrayList0.add(arrayList1);
      boolean boolean0 = BipartiteGrapfDFS.isBipartite(2986, arrayList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BipartiteGrapfDFS bipartiteGrapfDFS0 = new BipartiteGrapfDFS();
  }
}
