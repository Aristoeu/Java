/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:12:14 GMT 2022
 */

package com.thealgorithms.datastructures.trees;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.trees.SegmentTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SegmentTree_ESTest extends SegmentTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      segmentTree0.getSum(12, 12);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      segmentTree0.getSum(1, 18);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.update(0, 1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[2];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.update(0, 1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[29];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      segmentTree0.update(12, 18);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[20];
      intArray0[1] = 18;
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      segmentTree0.getSum(1, 1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.getSum(0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.constructTree(intArray0, 0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[20];
      intArray0[2] = (-1755);
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      segmentTree0.constructTree(intArray0, 0, 18, 0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(20, intArray0);
      // Undeclared exception!
      try { 
        segmentTree0.update(20, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("com.thealgorithms.datastructures.trees.SegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      // Undeclared exception!
      try { 
        segmentTree0.constructTree(intArray0, (-1), 18, 954);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.thealgorithms.datastructures.trees.SegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SegmentTree segmentTree0 = null;
      try {
        segmentTree0 = new SegmentTree(1002, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[5];
      SegmentTree segmentTree0 = null;
      try {
        segmentTree0 = new SegmentTree(0, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.SegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[0];
      SegmentTree segmentTree0 = null;
      try {
        segmentTree0 = new SegmentTree((-917), intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.datastructures.trees.SegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      int int0 = segmentTree0.getSum(18, 18);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[7];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      int int0 = segmentTree0.constructTree(intArray0, 0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[7];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      int int0 = segmentTree0.getSum(1, (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[33];
      SegmentTree segmentTree0 = new SegmentTree(6, intArray0);
      int int0 = segmentTree0.getSum(0, 53);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[7];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      int int0 = segmentTree0.getSum((-1), (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[16];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.update(51, 51);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[7];
      SegmentTree segmentTree0 = new SegmentTree(1, intArray0);
      segmentTree0.update((-540), 39);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[20];
      SegmentTree segmentTree0 = new SegmentTree(18, intArray0);
      // Undeclared exception!
      try { 
        segmentTree0.constructTree((int[]) null, 1, 2931, 2931);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.SegmentTree", e);
      }
  }
}
