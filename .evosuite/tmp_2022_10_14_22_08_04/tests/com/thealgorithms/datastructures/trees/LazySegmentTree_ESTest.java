/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:49:51 GMT 2022
 */

package com.thealgorithms.datastructures.trees;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.trees.LazySegmentTree;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LazySegmentTree_ESTest extends LazySegmentTree_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 1;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      int int1 = (-2096);
      int int2 = lazySegmentTree0.getRange((-2096), 72);
      assertEquals(4, intArray0.length);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(0, int2);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 72, 72);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      int int3 = lazySegmentTree0.getRange((-2096), 0);
      assertEquals(4, intArray0.length);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertEquals(0, int3);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      int int4 = lazySegmentTree0.getRange(72, 72);
      assertEquals(4, intArray0.length);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      assertEquals(0, int4);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(4, intArray0.length);
      assertEquals(288, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = null;
      lazySegmentTree_Node0.right = null;
      assertEquals(288, lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.applyUpdate(72);
      assertEquals(4, intArray0.length);
      assertEquals(576, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      
      // Undeclared exception!
      try { 
        lazySegmentTree0.getRange(1, 14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.LazySegmentTree$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-3882);
      intArray0[2] = 1;
      intArray0[3] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      int int1 = (-2096);
      int int2 = lazySegmentTree0.getRange((-2096), 72);
      assertEquals(4, intArray0.length);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, int2);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 72, 72);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      int int3 = lazySegmentTree0.getRange((-2096), 1);
      assertEquals(4, intArray0.length);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(72, int3);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      int int4 = lazySegmentTree0.getRange(72, 72);
      assertEquals(4, intArray0.length);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertEquals(0, int4);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(72, 1895, 0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(4, intArray0.length);
      assertEquals(361, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      lazySegmentTree_Node0.right = null;
      assertEquals(361, lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.applyUpdate(72);
      assertEquals(4, intArray0.length);
      assertEquals(649, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      lazySegmentTree_Node0.shift();
      assertEquals(4, intArray0.length);
      assertEquals(721, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = new LazySegmentTree.Node(0, 0, 1895);
      assertNotNull(lazySegmentTree_Node1);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(1895, lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node1.applyUpdate((-3361));
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(1895, lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = LazySegmentTree.Node.merge(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(2616, lazySegmentTree_Node2.getValue());
      assertEquals(721, lazySegmentTree_Node0.getValue());
      assertEquals(1895, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, 0, 1, 0}, intArray0);
      
      // Undeclared exception!
      try { 
        lazySegmentTree0.updateRange(0, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.LazySegmentTree$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      int int0 = 0;
      intArray0[2] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree0.updateRange((-1), 0, 1296);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      int int1 = lazySegmentTree0.getRange((-1876), (-1876));
      assertEquals(3, intArray0.length);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(3, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.getRight();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree_Node1.left = lazySegmentTree_Node0;
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node1.left.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.right;
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 0, 1101);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree_Node1.applyUpdate(692);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree_Node0.left = lazySegmentTree_Node1;
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertEquals(1384, lazySegmentTree_Node0.left.getValue());
      
      lazySegmentTree_Node2.left = lazySegmentTree_Node0.left;
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertEquals(1384, lazySegmentTree_Node2.left.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree_Node2.getLeft();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node2));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertEquals(1384, lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      int int2 = lazySegmentTree_Node0.getValue();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(3, intArray0.length);
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals(0, int2);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node4 = lazySegmentTree_Node1.getLeft();
      assertSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node4);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node4.getValue());
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      lazySegmentTree_Node2.right = lazySegmentTree_Node0;
      assertEquals(0, lazySegmentTree_Node2.right.getValue());
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      
      int int3 = 0;
      LazySegmentTree.Node lazySegmentTree_Node5 = LazySegmentTree.Node.merge(lazySegmentTree_Node4, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node5);
      assertEquals(3, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node4.getValue());
      assertEquals(0, lazySegmentTree_Node5.getValue());
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(1384, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      int int4 = 2;
      int int5 = 919;
      // Undeclared exception!
      try { 
        lazySegmentTree0.getRange(int4, int5);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-3882);
      intArray0[2] = 1;
      intArray0[3] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      int int0 = lazySegmentTree0.getRange((-2096), 72);
      assertEquals(4, intArray0.length);
      assertEquals((-3881), int0);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 72, 72);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(4, intArray0.length);
      assertEquals((-3593), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.left;
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-3882), lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node0.right = lazySegmentTree_Node1;
      assertEquals((-3593), lazySegmentTree_Node0.getValue());
      assertEquals((-3882), lazySegmentTree_Node1.getValue());
      assertEquals((-3882), lazySegmentTree_Node0.right.getValue());
      
      int int1 = lazySegmentTree0.getRange(72, 72);
      assertEquals(4, intArray0.length);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node0.applyUpdate(0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertEquals((-3593), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node0.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertEquals((-3521), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = LazySegmentTree.Node.merge(lazySegmentTree_Node1, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertEquals((-3521), lazySegmentTree_Node0.getValue());
      assertEquals((-3594), lazySegmentTree_Node1.getValue());
      assertEquals((-7188), lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node3 = LazySegmentTree.Node.merge(lazySegmentTree_Node0.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertEquals((-3521), lazySegmentTree_Node0.getValue());
      assertEquals((-3594), lazySegmentTree_Node1.getValue());
      assertEquals((-7188), lazySegmentTree_Node2.getValue());
      assertEquals((-10782), lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(72, 1895, 0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node4 = LazySegmentTree.Node.merge(lazySegmentTree_Node2, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node4);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertEquals((-14376), lazySegmentTree_Node4.getValue());
      assertEquals((-3521), lazySegmentTree_Node0.getValue());
      assertEquals((-3594), lazySegmentTree_Node1.getValue());
      assertEquals((-7188), lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node0.applyUpdate(1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-3517), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node1.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertEquals((-3517), lazySegmentTree_Node0.getValue());
      assertEquals((-3450), lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node5 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0.right);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node5);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-6967), lazySegmentTree_Node5.getValue());
      assertEquals((-3517), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node5.applyUpdate(72);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-6823), lazySegmentTree_Node5.getValue());
      assertEquals((-3517), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node5.shift();
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-6751), lazySegmentTree_Node5.getValue());
      assertEquals((-3229), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 1, 0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node6 = lazySegmentTree_Node5.getLeft();
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node6, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node6);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-6751), lazySegmentTree_Node5.getValue());
      assertEquals((-6316), lazySegmentTree_Node6.getValue());
      assertEquals((-6316), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, (-2096), 0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree0.updateRange((-3882), (-3882), 0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node6.applyUpdate(0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node6, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertEquals((-6751), lazySegmentTree_Node5.getValue());
      assertEquals((-6316), lazySegmentTree_Node6.getValue());
      assertEquals((-6316), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node7 = lazySegmentTree_Node0.right.getLeft();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node6);
      assertNotNull(lazySegmentTree_Node7);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node6));
      assertEquals((-6316), lazySegmentTree_Node0.getValue());
      assertEquals(362, lazySegmentTree_Node7.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
      
      lazySegmentTree_Node4.applyUpdate(1077);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node7);
      assertEquals(4, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node7));
      assertEquals((-12222), lazySegmentTree_Node4.getValue());
      assertEquals((-6316), lazySegmentTree_Node0.getValue());
      assertEquals((-3158), lazySegmentTree_Node1.getValue());
      assertEquals((-7188), lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0, (-3882), 1, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-1324);
      intArray0[3] = 1650;
      intArray0[4] = (-1);
      intArray0[5] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(6, intArray0.length);
      assertArrayEquals(new int[] {0, 0, (-1324), 1650, (-1), 0}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(0, 2467);
      assertEquals(6, intArray0.length);
      assertEquals(325, int0);
      assertArrayEquals(new int[] {0, 0, (-1324), 1650, (-1), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = (-217);
      intArray0[0] = (-217);
      int int1 = (-414);
      intArray0[1] = (-414);
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(2, intArray0.length);
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = new LazySegmentTree.Node(778, (-217), (-414));
      assertNotNull(lazySegmentTree_Node1);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-414), lazySegmentTree_Node1.getValue());
      
      int int2 = lazySegmentTree0.getRange(778, (-1003));
      assertEquals(2, intArray0.length);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(0, int2);
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      lazySegmentTree_Node0.right = lazySegmentTree_Node1;
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertEquals((-414), lazySegmentTree_Node1.getValue());
      assertEquals((-414), lazySegmentTree_Node0.right.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertEquals((-1262), lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      lazySegmentTree_Node2.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertEquals((-1262), lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      lazySegmentTree_Node0.left = lazySegmentTree_Node2;
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertEquals((-1262), lazySegmentTree_Node2.getValue());
      assertEquals((-1262), lazySegmentTree_Node0.left.getValue());
      
      int int3 = lazySegmentTree_Node0.getValue();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals((-631), int3);
      assertEquals((-631), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      lazySegmentTree_Node0.applyUpdate((-1));
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertEquals((-633), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {(-217), (-414)}, intArray0);
      
      int int4 = (-810);
      int int5 = 1;
      // Undeclared exception!
      try { 
        lazySegmentTree0.updateRange(int4, int5, int1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 2528;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree0.updateRange((-1), (-1), 2528);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(1444, (-1));
      assertEquals(1, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      int int1 = lazySegmentTree0.getRange(2528, (-1));
      assertEquals(1, intArray0.length);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree0.updateRange(1444, (-2023), (-2023));
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(2528, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node0.applyUpdate(952);
      assertEquals(1, intArray0.length);
      assertEquals(3480, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(3480, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node1.right = lazySegmentTree_Node0;
      assertEquals(3480, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertEquals(3480, lazySegmentTree_Node1.right.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertEquals(3480, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node2.right = lazySegmentTree_Node1;
      assertEquals(3480, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertEquals(6960, lazySegmentTree_Node2.right.getValue());
      
      lazySegmentTree0.updateRange(0, 2528, (-1));
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node1.left = lazySegmentTree_Node0;
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertEquals(3479, lazySegmentTree_Node1.left.getValue());
      
      lazySegmentTree_Node0.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node0.right = lazySegmentTree_Node1;
      assertEquals(6960, lazySegmentTree_Node0.right.getValue());
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node3 = LazySegmentTree.Node.merge(lazySegmentTree_Node2, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertEquals(13920, lazySegmentTree_Node3.getValue());
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node1.right = lazySegmentTree_Node3;
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertEquals(13920, lazySegmentTree_Node1.right.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node4 = LazySegmentTree.Node.merge(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node4);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertEquals(10439, lazySegmentTree_Node4.getValue());
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      int int2 = lazySegmentTree_Node1.getValue();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertEquals(1, intArray0.length);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertEquals(6960, int2);
      assertEquals(3479, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node0.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertEquals(4430, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node2.right.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2.right, lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node0));
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(8862, lazySegmentTree_Node1.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertEquals(8862, lazySegmentTree_Node2.right.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node5 = lazySegmentTree0.getRoot();
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node5);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertEquals(5381, lazySegmentTree_Node5.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node6 = LazySegmentTree.Node.merge(lazySegmentTree_Node5, lazySegmentTree_Node2.right);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2.right, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2.right, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node6);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.right.equals((Object)lazySegmentTree_Node0));
      assertEquals(5381, lazySegmentTree_Node5.getValue());
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(14243, lazySegmentTree_Node6.getValue());
      assertEquals(8862, lazySegmentTree_Node1.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertEquals(8862, lazySegmentTree_Node2.right.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node7 = lazySegmentTree0.getRoot();
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node6);
      assertSame(lazySegmentTree_Node7, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node7, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node7);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node3));
      assertEquals(5381, lazySegmentTree_Node7.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      lazySegmentTree_Node2.applyUpdate(0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node8 = LazySegmentTree.Node.merge(lazySegmentTree_Node4, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node6);
      assertSame(lazySegmentTree_Node7, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node7, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node7, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node8, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node8);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node7.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node8.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertEquals(10439, lazySegmentTree_Node4.getValue());
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(5381, lazySegmentTree_Node7.getValue());
      assertEquals(15820, lazySegmentTree_Node8.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      int int3 = lazySegmentTree_Node1.right.getValue();
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node6);
      assertSame(lazySegmentTree_Node1.right, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(14871, int3);
      assertEquals(14871, lazySegmentTree_Node3.getValue());
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(8862, lazySegmentTree_Node1.getValue());
      assertEquals(14871, lazySegmentTree_Node1.right.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node9 = lazySegmentTree0.getRoot();
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node6);
      assertSame(lazySegmentTree_Node9, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node8);
      assertSame(lazySegmentTree_Node9, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node9, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node9, lazySegmentTree_Node7);
      assertNotNull(lazySegmentTree_Node9);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node9.equals((Object)lazySegmentTree_Node3));
      assertEquals(5381, lazySegmentTree_Node9.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node10 = lazySegmentTree_Node4.getRight();
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node9);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node8);
      assertSame(lazySegmentTree_Node10, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node10, lazySegmentTree_Node7);
      assertSame(lazySegmentTree_Node10, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node10, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node10, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node10);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node9));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node9));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node10.equals((Object)lazySegmentTree_Node1));
      assertEquals(10439, lazySegmentTree_Node4.getValue());
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(6960, lazySegmentTree_Node2.getValue());
      assertEquals(5381, lazySegmentTree_Node10.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node11 = LazySegmentTree.Node.merge(lazySegmentTree_Node1.left, lazySegmentTree_Node1.right);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node11);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node9);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node11);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node11);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node9);
      assertSame(lazySegmentTree_Node1.right, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1.right, lazySegmentTree_Node7);
      assertSame(lazySegmentTree_Node1.left, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node1.left, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node11);
      assertSame(lazySegmentTree_Node1.left, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node1.left, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node1.left, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node1.left, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node9);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node7);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node8);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node10);
      assertNotSame(lazySegmentTree_Node11, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node11);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node9));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node10));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node9));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node10));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.right.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.left.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node9));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node6));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node7));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node8));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node10));
      assertFalse(lazySegmentTree_Node11.equals((Object)lazySegmentTree_Node3));
      assertEquals(5381, lazySegmentTree_Node0.getValue());
      assertEquals(8862, lazySegmentTree_Node1.getValue());
      assertEquals(14871, lazySegmentTree_Node1.right.getValue());
      assertEquals(5381, lazySegmentTree_Node1.left.getValue());
      assertEquals(20252, lazySegmentTree_Node11.getValue());
      assertArrayEquals(new int[] {2528}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(0, 0, (-123));
      assertNotNull(lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.right = null;
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, (LazySegmentTree.Node) null);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node0.applyUpdate((-123));
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node1.shift();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node1.applyUpdate(1896);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.getLeft();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNull(lazySegmentTree_Node2);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      int[] intArray0 = new int[6];
      intArray0[0] = (-123);
      intArray0[1] = (-2204);
      intArray0[2] = 1896;
      intArray0[3] = 0;
      intArray0[4] = 1896;
      intArray0[5] = 1896;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(6, intArray0.length);
      assertArrayEquals(new int[] {(-123), (-2204), 1896, 0, 1896, 1896}, intArray0);
      
      lazySegmentTree0.updateRange(0, 0, 0);
      assertEquals(6, intArray0.length);
      assertArrayEquals(new int[] {(-123), (-2204), 1896, 0, 1896, 1896}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-742);
      intArray0[1] = (-1572);
      intArray0[2] = (-2464);
      intArray0[3] = (-1);
      intArray0[4] = 3200;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(5, intArray0.length);
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      int int0 = lazySegmentTree0.getRange((-1), (-423));
      assertEquals(5, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      int int1 = lazySegmentTree0.getRange((-1486), 0);
      assertEquals(5, intArray0.length);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.getRight();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(5, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertEquals(735, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      lazySegmentTree_Node1.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(5, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertEquals(735, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      lazySegmentTree_Node1.applyUpdate(1614);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(5, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertEquals(5577, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      lazySegmentTree_Node1.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(5, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertEquals(7191, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
      
      int int2 = lazySegmentTree_Node1.getValue();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(5, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(7191, int2);
      assertEquals((-1579), lazySegmentTree_Node0.getValue());
      assertEquals(7191, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-742), (-1572), (-2464), (-1), 3200}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(1465, 1465, 1465);
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node1 = new LazySegmentTree.Node(1465, 1465, 1465);
      assertNotNull(lazySegmentTree_Node1);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(1465, lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = new LazySegmentTree.Node(1465, 1465, 1465);
      assertNotNull(lazySegmentTree_Node2);
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals(1465, lazySegmentTree_Node2.getValue());
      
      lazySegmentTree_Node1.left = lazySegmentTree_Node2;
      assertEquals(1465, lazySegmentTree_Node1.getValue());
      assertEquals(1465, lazySegmentTree_Node2.getValue());
      assertEquals(1465, lazySegmentTree_Node1.left.getValue());
      
      lazySegmentTree_Node0.left = lazySegmentTree_Node1;
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(1465, lazySegmentTree_Node1.getValue());
      assertEquals(1465, lazySegmentTree_Node0.left.getValue());
      
      lazySegmentTree_Node0.applyUpdate(1465);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree_Node1.getLeft();
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node3);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertEquals(1465, lazySegmentTree_Node1.getValue());
      assertEquals(1465, lazySegmentTree_Node3.getValue());
      
      lazySegmentTree_Node0.left.left = lazySegmentTree_Node3;
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(1465, lazySegmentTree_Node1.getValue());
      assertEquals(1465, lazySegmentTree_Node3.getValue());
      assertEquals(1465, lazySegmentTree_Node0.left.left.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node4 = lazySegmentTree_Node0.getLeft();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node4);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(1465, lazySegmentTree_Node4.getValue());
      
      lazySegmentTree_Node4.applyUpdate(1465);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(1465, lazySegmentTree_Node4.getValue());
      
      int[] intArray0 = new int[4];
      intArray0[0] = 1465;
      intArray0[1] = 1465;
      intArray0[2] = 1465;
      intArray0[3] = 1465;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {1465, 1465, 1465, 1465}, intArray0);
      
      int int0 = lazySegmentTree0.getRange((-1137), 2);
      assertEquals(4, intArray0.length);
      assertEquals(2930, int0);
      assertArrayEquals(new int[] {1465, 1465, 1465, 1465}, intArray0);
      
      lazySegmentTree_Node4.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(2930, lazySegmentTree_Node4.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node5 = LazySegmentTree.Node.merge(lazySegmentTree_Node0.left, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0.left, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0.left, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node0.left, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0.left, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node0.left, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0.left, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node5);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.left.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.left.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node0.left.equals((Object)lazySegmentTree_Node2));
      assertEquals(1465, lazySegmentTree_Node0.getValue());
      assertEquals(2930, lazySegmentTree_Node1.getValue());
      assertEquals(4395, lazySegmentTree_Node5.getValue());
      assertEquals(2930, lazySegmentTree_Node0.left.getValue());
      
      lazySegmentTree_Node3.applyUpdate((-1));
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node5);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node5));
      assertEquals(2930, lazySegmentTree_Node1.getValue());
      assertEquals(1465, lazySegmentTree_Node3.getValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(420, 420, 420);
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(420, lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.left;
      assertNull(lazySegmentTree_Node1);
      
      lazySegmentTree_Node0.applyUpdate(2436);
      assertEquals(420, lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.left = null;
      assertEquals(420, lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.shift();
      assertEquals(420, lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node0.getRight();
      assertNull(lazySegmentTree_Node2);
      assertEquals(420, lazySegmentTree_Node0.getValue());
      
      int[] intArray0 = new int[8];
      intArray0[0] = 2436;
      intArray0[1] = 2436;
      intArray0[2] = 2436;
      intArray0[3] = 420;
      intArray0[4] = 2436;
      intArray0[5] = 2436;
      intArray0[6] = 420;
      intArray0[7] = 420;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(8, intArray0.length);
      assertArrayEquals(new int[] {2436, 2436, 2436, 420, 2436, 2436, 420, 420}, intArray0);
      
      lazySegmentTree0.updateRange(2436, 2436, 0);
      assertEquals(8, intArray0.length);
      assertArrayEquals(new int[] {2436, 2436, 2436, 420, 2436, 2436, 420, 420}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(0, 0);
      assertEquals(1, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree0.updateRange(2782, (-1), 367);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node0.applyUpdate(0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node0.right = lazySegmentTree_Node1;
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node0.right.getValue());
      
      lazySegmentTree0.updateRange(1, 1, 0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node1.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree0.getRoot();
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree_Node0.right.left;
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node4 = LazySegmentTree.Node.merge(lazySegmentTree_Node3, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node0.right, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node4);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node4, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node4);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node4.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node0.right.getValue());
      assertEquals(0, lazySegmentTree_Node3.getValue());
      assertEquals(0, lazySegmentTree_Node4.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node0.shift();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node5 = lazySegmentTree_Node2.getRight();
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node5);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertEquals(0, lazySegmentTree_Node5.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree0.updateRange(2782, 2782, 367);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node6 = LazySegmentTree.Node.merge(lazySegmentTree_Node5, lazySegmentTree_Node0.right);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node6, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node0.right, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node0.right, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node0.right, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node6);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node5);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node6);
      assertSame(lazySegmentTree_Node5, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node4);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node5, lazySegmentTree_Node3);
      assertNotNull(lazySegmentTree_Node6);
      assertEquals(1, intArray0.length);
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node6.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node3));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node0.right.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node5));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node4));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node5.equals((Object)lazySegmentTree_Node3));
      assertEquals(0, lazySegmentTree_Node6.getValue());
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertEquals(0, lazySegmentTree_Node0.right.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertEquals(0, lazySegmentTree_Node5.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree0.updateRange(2, (-1), 0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3129;
      intArray0[1] = (-318);
      intArray0[2] = (-1);
      intArray0[3] = (-945);
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new int[] {3129, (-318), (-1), (-945)}, intArray0);
      
      int int0 = lazySegmentTree0.getRange((-493), (-945));
      assertEquals(4, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {3129, (-318), (-1), (-945)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LazySegmentTree lazySegmentTree0 = null;
      try {
        lazySegmentTree0 = new LazySegmentTree((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.LazySegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-805306368);
      intArray0[1] = 2;
      intArray0[2] = (-4165);
      intArray0[3] = (-1370);
      intArray0[4] = (-635);
      intArray0[5] = 1324;
      intArray0[6] = 2;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(7, intArray0.length);
      assertArrayEquals(new int[] {(-805306368), 2, (-4165), (-1370), (-635), 1324, 2}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(1, 2);
      assertEquals(7, intArray0.length);
      assertEquals(2, int0);
      assertArrayEquals(new int[] {(-805306368), 2, (-4165), (-1370), (-635), 1324, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {(-1), (-1)}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(2, intArray0.length);
      assertEquals((-2), lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {(-1), (-1)}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.left;
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-1), lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-1), (-1)}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.getRight();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNull(lazySegmentTree_Node2);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-2), lazySegmentTree_Node0.getValue());
      assertEquals((-1), lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-1), (-1)}, intArray0);
      
      lazySegmentTree_Node1.shift();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals(2, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-2), lazySegmentTree_Node0.getValue());
      assertEquals((-1), lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {(-1), (-1)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(0, 146, 146);
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(146, lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.applyUpdate(146);
      assertEquals(21462, lazySegmentTree_Node0.getValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = 0;
      intArray0[3] = 1;
      intArray0[4] = 1486;
      intArray0[5] = 1176;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(6, intArray0.length);
      assertArrayEquals(new int[] {0, (-1), 0, 1, 1486, 1176}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(6, intArray0.length);
      assertEquals(2662, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, (-1), 0, 1, 1486, 1176}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(6, intArray0.length);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals(2662, lazySegmentTree_Node0.getValue());
      assertEquals(5324, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0, (-1), 0, 1, 1486, 1176}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.getLeft();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(6, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals(2662, lazySegmentTree_Node0.getValue());
      assertEquals(5324, lazySegmentTree_Node1.getValue());
      assertEquals(2662, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0, (-1), 0, 1, 1486, 1176}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree_Node2.getRight();
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node3);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(6, intArray0.length);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node3.equals((Object)lazySegmentTree_Node2));
      assertEquals(2662, lazySegmentTree_Node0.getValue());
      assertEquals(5324, lazySegmentTree_Node1.getValue());
      assertEquals(2662, lazySegmentTree_Node2.getValue());
      assertEquals(2663, lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0, (-1), 0, 1, 1486, 1176}, intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.getRight();
      assertNull(lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = LazySegmentTree.Node.merge((LazySegmentTree.Node) null, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 0, 0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node0.left = lazySegmentTree_Node2;
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertEquals(0, lazySegmentTree_Node0.left.getValue());
      
      lazySegmentTree0.updateRange(0, (-1), (-1));
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      lazySegmentTree_Node2.shift();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(0, 0);
      assertEquals(1, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree_Node0.getLeft();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node3);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertEquals(0, lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {0}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(0, 0);
      assertEquals(1, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree0.getRoot();
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node1.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      int int1 = lazySegmentTree0.getRange(2, 0);
      assertEquals(1, intArray0.length);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree0.getRoot();
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertNotNull(lazySegmentTree_Node2);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node2.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node3 = lazySegmentTree0.getRoot();
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node2);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node3, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node3);
      assertEquals(1, intArray0.length);
      assertEquals(0, lazySegmentTree_Node3.getValue());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-2520);
      intArray0[3] = 2;
      intArray0[4] = 1;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {0, 0, (-2520), 2, 1}, intArray0);
      
      lazySegmentTree0.updateRange(1, 1384, 1);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {0, 0, (-2520), 2, 1}, intArray0);
      
      lazySegmentTree0.updateRange((-1), 0, 0);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {0, 0, (-2520), 2, 1}, intArray0);
      
      lazySegmentTree0.updateRange((-268), (-2486), (-268));
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {0, 0, (-2520), 2, 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      LazySegmentTree lazySegmentTree0 = null;
      try {
        lazySegmentTree0 = new LazySegmentTree(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.datastructures.trees.LazySegmentTree", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node((-396), (-396), (-396));
      assertNotNull(lazySegmentTree_Node0);
      assertEquals((-396), lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertEquals((-396), lazySegmentTree_Node0.getValue());
      assertEquals((-792), lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.getRight();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node2);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals((-396), lazySegmentTree_Node0.getValue());
      assertEquals((-792), lazySegmentTree_Node1.getValue());
      assertEquals((-396), lazySegmentTree_Node2.getValue());
      
      int int0 = lazySegmentTree_Node2.getValue();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node2);
      assertNotSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotSame(lazySegmentTree_Node2, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node2, lazySegmentTree_Node0);
      assertFalse(lazySegmentTree_Node0.equals((Object)lazySegmentTree_Node1));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node2));
      assertFalse(lazySegmentTree_Node1.equals((Object)lazySegmentTree_Node0));
      assertFalse(lazySegmentTree_Node2.equals((Object)lazySegmentTree_Node1));
      assertEquals((-396), int0);
      assertEquals((-396), lazySegmentTree_Node0.getValue());
      assertEquals((-792), lazySegmentTree_Node1.getValue());
      assertEquals((-396), lazySegmentTree_Node2.getValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-48);
      intArray0[1] = 0;
      intArray0[2] = (-2152);
      intArray0[3] = (-107);
      intArray0[4] = 0;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {(-48), 0, (-2152), (-107), 0}, intArray0);
      
      lazySegmentTree0.updateRange(0, 2, (-218));
      assertEquals(5, intArray0.length);
      assertArrayEquals(new int[] {(-48), 0, (-2152), (-107), 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 1694;
      intArray0[2] = 1;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {0, 1694, 1}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(0, 1694);
      assertEquals(3, intArray0.length);
      assertEquals(1695, int0);
      assertArrayEquals(new int[] {0, 1694, 1}, intArray0);
      
      lazySegmentTree0.updateRange(1694, 0, (-1));
      assertEquals(3, intArray0.length);
      assertArrayEquals(new int[] {0, 1694, 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 2;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(2, intArray0.length);
      assertArrayEquals(new int[] {0, 2}, intArray0);
      
      int int0 = lazySegmentTree0.getRange(2, (-3325));
      assertEquals(2, intArray0.length);
      assertEquals(0, int0);
      assertArrayEquals(new int[] {0, 2}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(2, intArray0.length);
      assertEquals(2, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {0, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 3269;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      assertNotNull(lazySegmentTree0);
      assertEquals(1, intArray0.length);
      assertArrayEquals(new int[] {3269}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      assertNotNull(lazySegmentTree_Node0);
      assertEquals(1, intArray0.length);
      assertEquals(3269, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {3269}, intArray0);
      
      LazySegmentTree.Node lazySegmentTree_Node1 = lazySegmentTree_Node0.getLeft();
      assertNull(lazySegmentTree_Node1);
      assertEquals(1, intArray0.length);
      assertEquals(3269, lazySegmentTree_Node0.getValue());
      assertArrayEquals(new int[] {3269}, intArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(0, 0, (-123));
      assertNotNull(lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node0.right = null;
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, (LazySegmentTree.Node) null);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNotNull(lazySegmentTree_Node1);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node0.applyUpdate((-123));
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      
      lazySegmentTree_Node1.shift();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node1.left = null;
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      lazySegmentTree_Node1.applyUpdate(1896);
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
      
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree_Node1.getLeft();
      assertSame(lazySegmentTree_Node0, lazySegmentTree_Node1);
      assertSame(lazySegmentTree_Node1, lazySegmentTree_Node0);
      assertNull(lazySegmentTree_Node2);
      assertEquals((-123), lazySegmentTree_Node0.getValue());
      assertEquals((-123), lazySegmentTree_Node1.getValue());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LazySegmentTree.Node lazySegmentTree_Node0 = new LazySegmentTree.Node(0, 0, 0);
      int[] intArray0 = new int[9];
      intArray0[3] = 0;
      intArray0[3] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 2747;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      lazySegmentTree_Node0.getRight();
      lazySegmentTree0.getRoot();
      lazySegmentTree0.updateRange(3661, 121, 0);
      lazySegmentTree0.updateRange((-3361), 0, 0);
      lazySegmentTree0.getRange(0, 0);
      lazySegmentTree_Node0.right = lazySegmentTree_Node0;
      LazySegmentTree.Node lazySegmentTree_Node1 = LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      LazySegmentTree.Node.merge(lazySegmentTree_Node0, lazySegmentTree_Node0);
      lazySegmentTree_Node0.applyUpdate((-3361));
      lazySegmentTree_Node1.left = lazySegmentTree_Node0;
      lazySegmentTree_Node0.shift();
      lazySegmentTree_Node1.shift();
      lazySegmentTree_Node1.applyUpdate(1);
      assertEquals((-3361), lazySegmentTree_Node0.getValue());
      
      lazySegmentTree0.getRoot();
      LazySegmentTree.Node lazySegmentTree_Node2 = lazySegmentTree0.getRoot();
      assertEquals(2747, lazySegmentTree_Node2.getValue());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      LazySegmentTree lazySegmentTree0 = new LazySegmentTree(intArray0);
      int int0 = (-2096);
      lazySegmentTree0.getRange((-2096), 72);
      lazySegmentTree0.updateRange(0, 72, 72);
      lazySegmentTree0.getRange((-2096), 1);
      lazySegmentTree0.getRange(72, 72);
      LazySegmentTree.Node lazySegmentTree_Node0 = lazySegmentTree0.getRoot();
      lazySegmentTree_Node0.right = null;
      lazySegmentTree_Node0.applyUpdate(72);
      LazySegmentTree.Node.merge((LazySegmentTree.Node) null, (LazySegmentTree.Node) null);
      // Undeclared exception!
      try { 
        lazySegmentTree0.updateRange(0, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.trees.LazySegmentTree$Node", e);
      }
  }
}
