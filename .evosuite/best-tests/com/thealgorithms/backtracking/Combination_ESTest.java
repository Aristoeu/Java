/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:43:42 GMT 2022
 */

package com.thealgorithms.backtracking;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.backtracking.Combination;
import java.util.List;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Combination_ESTest extends Combination_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer(1920);
      integerArray0[0] = integer0;
      integerArray0[1] = integerArray0[0];
      integerArray0[2] = integerArray0[0];
      integerArray0[3] = integerArray0[0];
      int int0 = 3;
      integerArray0[4] = integerArray0[0];
      integerArray0[5] = integerArray0[0];
      integerArray0[6] = integerArray0[0];
      integerArray0[7] = integerArray0[6];
      Combination.combination(integerArray0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      // Undeclared exception!
      try { 
        Combination.combination(objectArray0, (-1522));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      integerArray0[1] = (Integer) int0;
      integerArray0[2] = integerArray0[0];
      Combination.combination((Object[]) integerArray0, 1248);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      int int1 = 1;
      integerArray0[1] = (Integer) int0;
      integerArray0[2] = integerArray0[0];
      List<TreeSet<Integer>> list0 = Combination.combination(integerArray0, int1);
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      int int0 = 0;
      List<TreeSet<Integer>> list0 = Combination.combination(integerArray0, int0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer[] integerArray0 = new Integer[3];
      int int0 = 1;
      // Undeclared exception!
      try { 
        Combination.combination(integerArray0, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ComparableTimSort", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Combination combination0 = new Combination();
  }
}
