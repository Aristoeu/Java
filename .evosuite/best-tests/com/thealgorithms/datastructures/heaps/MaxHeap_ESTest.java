/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 03:59:13 GMT 2022
 */

package com.thealgorithms.datastructures.heaps;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.heaps.HeapElement;
import com.thealgorithms.datastructures.heaps.MaxHeap;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MaxHeap_ESTest extends MaxHeap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.deleteElement(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.getElement(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      HeapElement heapElement0 = new HeapElement(0);
      // Undeclared exception!
      try { 
        maxHeap0.insertElement(heapElement0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MaxHeap maxHeap0 = null;
      try {
        maxHeap0 = new MaxHeap((List<HeapElement>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.insertElement((HeapElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.deleteElement(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.deleteElement((-1401));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.getElement(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      // Undeclared exception!
      try { 
        maxHeap0.getElement((-3950));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      linkedList0.add((HeapElement) null);
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      HeapElement heapElement0 = new HeapElement((-0.5224442966406773));
      linkedList0.add(heapElement0);
      MaxHeap maxHeap0 = null;
      try {
        maxHeap0 = new MaxHeap(linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index out of heap range
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<HeapElement> linkedList0 = new LinkedList<HeapElement>();
      MaxHeap maxHeap0 = new MaxHeap(linkedList0);
      try { 
        maxHeap0.getElement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Heap is empty. Error retrieving element
         //
         verifyException("com.thealgorithms.datastructures.heaps.MaxHeap", e);
      }
  }
}
