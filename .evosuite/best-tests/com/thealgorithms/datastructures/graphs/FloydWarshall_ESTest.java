/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:10:42 GMT 2022
 */

package com.thealgorithms.datastructures.graphs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.graphs.FloydWarshall;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FloydWarshall_ESTest extends FloydWarshall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloydWarshall floydWarshall0 = new FloydWarshall(3);
      int[][] intArray0 = new int[7][7];
      int[] intArray1 = new int[5];
      intArray1[1] = (-1073);
      intArray0[1] = intArray1;
      floydWarshall0.floydwarshall(intArray0);
      assertEquals(7, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        FloydWarshall.main((String[]) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SystemInUtil.addInputLine("RWto*9^T~m}.YE");
      // Undeclared exception!
      try { 
        FloydWarshall.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SystemInUtil.addInputLine("-2");
      // Undeclared exception!
      try { 
        FloydWarshall.main((String[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.FloydWarshall", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloydWarshall floydWarshall0 = new FloydWarshall(1);
      // Undeclared exception!
      try { 
        floydWarshall0.floydwarshall((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.FloydWarshall", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloydWarshall floydWarshall0 = new FloydWarshall(1368);
      int[][] intArray0 = new int[7][7];
      // Undeclared exception!
      try { 
        floydWarshall0.floydwarshall(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.thealgorithms.datastructures.graphs.FloydWarshall", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SystemInUtil.addInputLine("2");
      SystemInUtil.addInputLine("2");
      SystemInUtil.addInputLine("2");
      SystemInUtil.addInputLine("2");
      SystemInUtil.addInputLine("2");
      FloydWarshall.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FloydWarshall floydWarshall0 = new FloydWarshall(2);
      int[][] intArray0 = new int[3][7];
      int[] intArray1 = new int[10];
      intArray1[1] = 2;
      intArray0[1] = intArray1;
      floydWarshall0.floydwarshall(intArray0);
      assertEquals(3, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FloydWarshall floydWarshall0 = null;
      try {
        floydWarshall0 = new FloydWarshall((-1389));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.graphs.FloydWarshall", e);
      }
  }
}
