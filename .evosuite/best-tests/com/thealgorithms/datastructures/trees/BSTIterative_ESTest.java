/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 03:31:10 GMT 2022
 */

package com.thealgorithms.datastructures.trees;

import org.junit.Test;
import static org.junit.Assert.*;
import com.thealgorithms.datastructures.trees.BSTIterative;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BSTIterative_ESTest extends BSTIterative_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-3034));
      boolean boolean0 = bSTIterative0.find(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-73));
      boolean boolean0 = bSTIterative0.find((-73));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(2);
      boolean boolean0 = bSTIterative0.find((-67));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(2);
      bSTIterative0.add(0);
      bSTIterative0.remove(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(2);
      bSTIterative0.remove((-434));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(2);
      bSTIterative0.add(0);
      bSTIterative0.preorder();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(2);
      bSTIterative0.add(490);
      bSTIterative0.preorder();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.preorder();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(0);
      bSTIterative0.add((-1));
      bSTIterative0.postorder();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.postorder();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(1722);
      bSTIterative0.add(490);
      bSTIterative0.inorder();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.inorder();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-32));
      bSTIterative0.add(1722);
      bSTIterative0.remove(1722);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-32));
      bSTIterative0.add(1722);
      bSTIterative0.add(490);
      bSTIterative0.add((-3061));
      bSTIterative0.add(42);
      bSTIterative0.remove((-32));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-32));
      bSTIterative0.add(1722);
      bSTIterative0.add((-3061));
      bSTIterative0.remove((-32));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add(1722);
      bSTIterative0.add(490);
      bSTIterative0.remove(1722);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-32));
      bSTIterative0.add(1722);
      bSTIterative0.remove((-32));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-32));
      bSTIterative0.add((-32));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[2];
      BSTIterative.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BSTIterative bSTIterative0 = new BSTIterative();
      bSTIterative0.add((-28));
      bSTIterative0.add(348);
      bSTIterative0.postorder();
  }
}
