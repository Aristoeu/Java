/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 06:35:48 GMT 2022
 */

package com.thealgorithms.datastructures.lists;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.lists.MergeSortedArrayList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MergeSortedArrayList_ESTest extends MergeSortedArrayList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      // Undeclared exception!
      MergeSortedArrayList.merge(linkedList0, linkedList1, linkedList0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":dpE3`LqV=dT?qI";
      MergeSortedArrayList.main(stringArray0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedList0);
      Integer integer0 = new Integer(0);
      linkedList1.add(integer0);
      Integer integer1 = new Integer(0);
      linkedList1.add(integer1);
      Integer integer2 = new Integer((-1));
      linkedList0.add(integer2);
      linkedList1.offer(integer0);
      // Undeclared exception!
      MergeSortedArrayList.merge(linkedList1, linkedList0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MergeSortedArrayList mergeSortedArrayList0 = new MergeSortedArrayList();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      // Undeclared exception!
      MergeSortedArrayList.merge(linkedList0, linkedList0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      MergeSortedArrayList.main(stringArray0);
      MergeSortedArrayList mergeSortedArrayList0 = new MergeSortedArrayList();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.add((Integer) null);
      // Undeclared exception!
      try { 
        MergeSortedArrayList.merge(linkedList0, linkedList0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.lists.MergeSortedArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1444);
      Integer.getInteger("lBz&sdl~I\"", integer0);
      linkedList1.add(integer0);
      MergeSortedArrayList.merge(linkedList0, linkedList0, linkedList1);
      Integer integer1 = linkedList1.pollLast();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList2.offerLast(integer1);
      MergeSortedArrayList.merge(linkedList0, linkedList0, linkedList2);
      MergeSortedArrayList.merge(linkedList1, linkedList2, linkedList1);
      MergeSortedArrayList mergeSortedArrayList0 = new MergeSortedArrayList();
      LinkedList<Integer> linkedList3 = new LinkedList<Integer>();
      MergeSortedArrayList.merge(linkedList1, linkedList3, linkedList0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "lBz&sdl~I\"";
      stringArray0[1] = "lBz&sdl~I\"";
      stringArray0[2] = "lBz&sdl~I\"";
      stringArray0[3] = "lBz&sdl~I\"";
      stringArray0[4] = "[";
      stringArray0[5] = "lBz&sdl~I\"";
      stringArray0[6] = "lBz&sdl~I\"";
      stringArray0[7] = "lBz&sdl~I\"";
      stringArray0[8] = "lBz&sdl~I\"";
      MergeSortedArrayList.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      MergeSortedArrayList.merge(linkedList0, linkedList0, linkedList0);
      assertEquals(0, linkedList0.size());
  }
}
