/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:17:48 GMT 2022
 */

package com.thealgorithms.datastructures.stacks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.datastructures.stacks.NodeStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NodeStack_ESTest extends NodeStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      String[] stringArray0 = new String[1];
      NodeStack.main(stringArray0);
      int int0 = nodeStack0.size();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeStack<Integer> nodeStack0 = new NodeStack<Integer>();
      nodeStack0.push((Integer) null);
      Integer integer0 = new Integer(23);
      nodeStack0.push(integer0);
      nodeStack0.pop();
      assertFalse(nodeStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeStack<Integer> nodeStack0 = new NodeStack<Integer>();
      nodeStack0.push((Integer) null);
      nodeStack0.peek();
      assertEquals(1, nodeStack0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      Object object0 = new Object();
      nodeStack0.push(object0);
      nodeStack0.peek();
      assertEquals(1, nodeStack0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      nodeStack0.push((Object) null);
      // Undeclared exception!
      try { 
        nodeStack0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      nodeStack0.push((Object) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        NodeStack.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodeStack<Integer> nodeStack0 = new NodeStack<Integer>();
      nodeStack0.print();
      assertTrue(nodeStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      boolean boolean0 = nodeStack0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      String[] stringArray0 = new String[0];
      NodeStack.main(stringArray0);
      nodeStack0.isEmpty();
      assertEquals(4, nodeStack0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeStack<Integer> nodeStack0 = new NodeStack<Integer>();
      nodeStack0.push((Integer) null);
      nodeStack0.push((Integer) null);
      assertEquals(2, nodeStack0.size());
      
      nodeStack0.pop();
      assertEquals(1, nodeStack0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      // Undeclared exception!
      try { 
        nodeStack0.peek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.stacks.NodeStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NodeStack<String> nodeStack0 = new NodeStack<String>();
      int int0 = nodeStack0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NodeStack<Object> nodeStack0 = new NodeStack<Object>();
      Object object0 = new Object();
      nodeStack0.push(object0);
      NodeStack<String> nodeStack1 = new NodeStack<String>();
      // Undeclared exception!
      try { 
        nodeStack1.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.datastructures.stacks.NodeStack", e);
      }
  }
}
