/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 07:13:35 GMT 2022
 */

package com.thealgorithms.strings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.strings.HammingDistance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HammingDistance_ESTest extends HammingDistance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        HammingDistance.calculateHammingDistance("'.F~g2F", "gUG56'7BD?vK$B");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // String lengths must be equal
         //
         verifyException("com.thealgorithms.strings.HammingDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        HammingDistance.calculateHammingDistance("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.strings.HammingDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = HammingDistance.calculateHammingDistance("M]SBNt", "M]SBNt");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = HammingDistance.calculateHammingDistance("O#Cb-^[UL8!qIuA", "gUGA6'7BDk?vK$B");
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        HammingDistance.calculateHammingDistance("String lengths must be equal", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // String lengths must be equal
         //
         verifyException("com.thealgorithms.strings.HammingDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HammingDistance hammingDistance0 = new HammingDistance();
  }
}
