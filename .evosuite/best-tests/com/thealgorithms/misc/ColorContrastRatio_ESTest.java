/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 04:59:16 GMT 2022
 */

package com.thealgorithms.misc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.misc.ColorContrastRatio;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorContrastRatio_ESTest extends ColorContrastRatio_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      Color color0 = Color.BLACK;
      double double0 = colorContrastRatio0.getRelativeLuminance(color0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      double double0 = colorContrastRatio0.getColor(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      // Undeclared exception!
      try { 
        colorContrastRatio0.getRelativeLuminance((Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.misc.ColorContrastRatio", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      // Undeclared exception!
      try { 
        colorContrastRatio0.getContrastRatio((Color) null, (Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.misc.ColorContrastRatio", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      double double0 = colorContrastRatio0.getColor((-780));
      assertEquals((-0.23675104716809323), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      double double0 = colorContrastRatio0.getColor(226);
      assertEquals(0.7605245046752924, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      Color color0 = Color.MAGENTA;
      double double0 = colorContrastRatio0.getRelativeLuminance(color0);
      assertEquals(0.2848, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      Color color0 = Color.MAGENTA;
      Color color1 = Color.lightGray;
      double double0 = colorContrastRatio0.getContrastRatio(color1, color0);
      assertEquals(1.7237608294677813, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[2];
      ColorContrastRatio.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Color color0 = new Color((-376509174));
      ColorContrastRatio colorContrastRatio0 = new ColorContrastRatio();
      double double0 = colorContrastRatio0.getContrastRatio(color0, color0);
      assertEquals(1.0, double0, 0.01);
  }
}
