/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 15 05:09:17 GMT 2022
 */

package com.thealgorithms.dynamicprogramming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LongestIncreasingSubsequence_ESTest extends LongestIncreasingSubsequence_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[1] = 1861;
      intArray0[4] = 2058;
      intArray0[5] = 2270;
      LongestIncreasingSubsequence.findLISLen(intArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        LongestIncreasingSubsequence.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SystemInUtil.addInputLine("^]Ko70<lpRNx7m_*j");
      // Undeclared exception!
      try { 
        LongestIncreasingSubsequence.main((String[]) null);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongestIncreasingSubsequence.findLISLen((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        LongestIncreasingSubsequence.findLISLen(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[22];
      intArray0[6] = (-418);
      intArray0[4] = (-418);
      intArray0[8] = (-418);
      int int0 = LongestIncreasingSubsequence.findLISLen(intArray0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[12];
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      SystemInUtil.addInputLine("6");
      LongestIncreasingSubsequence.main(stringArray0);
      assertEquals(12, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      String[] stringArray0 = new String[11];
      // Undeclared exception!
      try { 
        LongestIncreasingSubsequence.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LongestIncreasingSubsequence longestIncreasingSubsequence0 = new LongestIncreasingSubsequence();
  }
}
