package disjointsets;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = ' ';
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable11);
        int int13 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        int int18 = serializableNode15.rank;
        java.io.Serializable serializable19 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        serializableNode21.rank = (byte) 100;
        java.lang.Class<?> wildcardClass25 = serializableNode21.getClass();
        serializableNode15.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode15.parent;
        java.io.Serializable serializable28 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode32.rank = (byte) 100;
        serializableNode32.data = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode41.parent;
        serializableNode41.rank = (byte) 10;
        int int49 = serializableNode41.rank;
        java.lang.Class<?> wildcardClass50 = serializableNode41.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        serializableNode38.data = wildcardClass50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode38.parent;
        serializableNode30.parent = serializableNode54;
        serializableNode12.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        int int60 = serializableNode58.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode58.parent = serializableNode62;
        serializableNode58.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        serializableNode67.data = (short) 100;
        serializableNode58.parent = serializableNode67;
        java.io.Serializable serializable73 = serializableNode67.data;
        int int74 = serializableNode67.rank;
        serializableNode67.rank = 10;
        java.io.Serializable serializable77 = serializableNode67.data;
        serializableNode67.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable82 = serializableNode81.data;
        int int83 = serializableNode81.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode81.parent = serializableNode85;
        serializableNode67.parent = serializableNode85;
        serializableNode12.parent = serializableNode67;
        int int89 = serializableNode12.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(serializable11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializable28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + (short) 100 + "'", serializable73, (short) 100);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + (short) 100 + "'", serializable77, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode32.parent = serializableNode36;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode26.parent = serializableNode39;
        serializableNode24.parent = serializableNode26;
        serializableNode12.parent = serializableNode26;
        java.io.Serializable serializable43 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        serializableNode45.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode50 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode45);
        java.lang.Class<?> wildcardClass51 = serializableNodeNode50.getClass();
        serializableNode26.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode53 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode26.parent;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode54);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode32.rank = 0;
        serializableNode32.data = 100;
        serializableNode26.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        serializableNode32.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode48.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode57.parent;
        serializableNode52.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        serializableNode48.parent = serializableNode61;
        serializableNode32.parent = serializableNode48;
        serializableNode19.parent = serializableNode32;
        serializableNode32.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int69 = serializableNode68.rank;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode72.parent;
        java.io.Serializable serializable75 = serializableNode72.data;
        java.io.Serializable serializable76 = serializableNode72.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int79 = serializableNode78.rank;
        int int80 = serializableNode78.rank;
        java.io.Serializable serializable81 = serializableNode78.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode78.parent;
        java.lang.Class<?> wildcardClass83 = serializableNode82.getClass();
        serializableNode72.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode72.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        serializableNode32.data = wildcardClass86;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + serializable81 + "' != '" + 10L + "'", serializable81, 10L);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        serializableNode5.rank = '#';
        java.io.Serializable serializable13 = null;
        serializableNode5.data = serializable13;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        serializableNode19.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode19.parent;
        serializableNode10.parent = serializableNode19;
        java.lang.Class<?> wildcardClass34 = serializableNode19.getClass();
        serializableNode1.data = wildcardClass34;
        java.io.Serializable serializable36 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode1.parent;
        serializableNode37.rank = 35;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        serializableNode10.rank = (byte) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        java.lang.Class<?> wildcardClass50 = serializableNode48.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode11.parent;
        serializableNode11.rank = (byte) 10;
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        serializableNode25.parent = serializableNode30;
        serializableNode25.data = true;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode41.parent = serializableNode45;
        serializableNode41.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        serializableNode50.data = (short) 100;
        serializableNode41.parent = serializableNode50;
        java.io.Serializable serializable56 = serializableNode50.data;
        serializableNode50.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode50.parent;
        java.lang.Class<?> wildcardClass60 = serializableNode50.getClass();
        serializableNode39.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode39.parent;
        serializableNode1.parent = serializableNode62;
        serializableNode1.rank = 'a';
        serializableNode1.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + (short) 100 + "'", serializable56, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(serializableNode62);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        java.io.Serializable serializable20 = serializableNode18.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10.0d + "'", serializable19, 10.0d);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10.0d + "'", serializable20, 10.0d);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        int int15 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        serializableNode21.data = (byte) -1;
        int int27 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode21.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode1.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        int int33 = serializableNode30.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + (byte) -1 + "'", serializable29, (byte) -1);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        int int32 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode34.parent = serializableNode39;
        serializableNode34.data = true;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        int int48 = serializableNode47.rank;
        serializableNode1.parent = serializableNode47;
        int int50 = serializableNode47.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.data = ' ';
        serializableNode6.rank = (byte) 10;
        serializableNode6.rank = (byte) 10;
        int int22 = serializableNode6.rank;
        int int23 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable20 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        int int43 = serializableNode40.rank;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        serializableNode46.rank = (byte) 100;
        java.lang.Class<?> wildcardClass50 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass50;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        serializableNode56.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        serializableNode56.parent = serializableNode69;
        serializableNode53.parent = serializableNode56;
        serializableNode56.rank = (byte) -1;
        serializableNode34.parent = serializableNode56;
        java.lang.Class<?> wildcardClass75 = serializableNode56.getClass();
        serializableNode4.data = wildcardClass75;
        java.io.Serializable serializable77 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode78.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(serializable77);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertNotNull(serializable80);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode42.rank = (byte) 0;
        serializableNode42.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode50.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode55.parent = serializableNode68;
        serializableNode68.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        serializableNode42.parent = serializableNode72;
        serializableNode13.parent = serializableNode72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode72.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable84 = serializableNode83.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode83.parent;
        serializableNode81.parent = serializableNode85;
        int int87 = serializableNode81.rank;
        serializableNode81.rank = 'a';
        java.lang.Class<?> wildcardClass90 = serializableNode81.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass90);
        serializableNode75.data = wildcardClass90;
        int int93 = serializableNode75.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        int int32 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        int int46 = serializableNode44.rank;
        serializableNode44.rank = 'a';
        java.lang.Class<?> wildcardClass49 = serializableNode44.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode38.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode52 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode38);
        serializableNode35.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode55.parent;
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        java.io.Serializable serializable62 = serializableNode59.data;
        java.io.Serializable serializable63 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.lang.Class<?> wildcardClass70 = serializableNode69.getClass();
        serializableNode59.data = wildcardClass70;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode59.parent;
        java.io.Serializable serializable73 = serializableNode72.data;
        serializableNode35.data = serializable73;
        serializableNode33.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int80 = serializableNode79.rank;
        int int81 = serializableNode79.rank;
        java.io.Serializable serializable82 = serializableNode79.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable85 = serializableNode84.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = serializableNode84.parent;
        serializableNode79.parent = serializableNode84;
        java.lang.Class<?> wildcardClass88 = serializableNode79.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode89 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass88);
        serializableNode77.data = wildcardClass88;
        java.io.Serializable serializable91 = serializableNode77.data;
        serializableNode33.data = serializable91;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10.0f + "'", serializable36, 10.0f);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializable73);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertNotNull(serializableNode86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(serializable91);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        serializableNode13.parent = serializableNode20;
        int int22 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass28);
        serializableNode13.data = wildcardClass28;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        java.io.Serializable serializable30 = serializableNode1.data;
        java.lang.Class<?> wildcardClass31 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        serializableNode8.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = null;
        serializableNode23.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode35.parent = serializableNode39;
        serializableNode39.rank = 0;
        serializableNode39.data = 100;
        serializableNode33.parent = serializableNode39;
        serializableNode39.rank = (byte) 0;
        int int48 = serializableNode39.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode54.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        serializableNode57.parent = serializableNode60;
        serializableNode57.rank = 0;
        int int64 = serializableNode57.rank;
        serializableNode39.parent = serializableNode57;
        serializableNode23.parent = serializableNode39;
        serializableNode23.data = 1.0f;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10L;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode13);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        java.lang.Class<?> wildcardClass44 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass44);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode51.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        int int56 = serializableNode55.rank;
        serializableNode45.parent = serializableNode55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode45.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode58);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        serializableNode6.rank = (byte) 10;
        int int14 = serializableNode6.rank;
        serializableNode2.parent = serializableNode6;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode18.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode18.parent = serializableNode22;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode6.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode33.parent = serializableNode37;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (byte) 0;
        serializableNode37.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode45.parent;
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        int int59 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode50.parent = serializableNode63;
        serializableNode63.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        serializableNode37.parent = serializableNode67;
        serializableNode6.parent = serializableNode37;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode67);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        int int23 = serializableNode20.rank;
        java.io.Serializable serializable24 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        serializableNode26.rank = (byte) 100;
        java.lang.Class<?> wildcardClass30 = serializableNode26.getClass();
        serializableNode20.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode20.parent;
        java.io.Serializable serializable33 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode20.parent;
        int int35 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        serializableNode37.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        serializableNode50.parent = serializableNode57;
        int int62 = serializableNode50.rank;
        java.io.Serializable serializable63 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        serializableNode50.parent = serializableNode69;
        serializableNode44.parent = serializableNode50;
        java.lang.Class<?> wildcardClass76 = serializableNode50.getClass();
        serializableNode34.data = wildcardClass76;
        serializableNode18.data = wildcardClass76;
        java.io.Serializable serializable79 = serializableNode18.data;
        java.lang.Class<?> wildcardClass80 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializable33);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializable79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        java.io.Serializable serializable49 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode51.parent;
        serializableNode52.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode56.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        serializableNode52.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode52.parent;
        serializableNode52.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable73 = serializableNode72.data;
        int int74 = serializableNode72.rank;
        serializableNode72.rank = 'a';
        java.lang.Class<?> wildcardClass77 = serializableNode72.getClass();
        serializableNode52.data = wildcardClass77;
        serializableNode37.data = wildcardClass77;
        java.lang.Class<?> wildcardClass80 = serializableNode37.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass80);
        serializableNode81.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        serializableNode29.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode46.parent;
        serializableNode46.rank = (byte) 10;
        int int54 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode46.parent = serializableNode56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int60 = serializableNode59.rank;
        int int61 = serializableNode59.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int64 = serializableNode63.rank;
        int int65 = serializableNode63.rank;
        java.io.Serializable serializable66 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode63.parent;
        java.io.Serializable serializable69 = serializableNode68.data;
        int int70 = serializableNode68.rank;
        java.io.Serializable serializable71 = serializableNode68.data;
        serializableNode59.parent = serializableNode68;
        serializableNode56.parent = serializableNode59;
        serializableNode29.parent = serializableNode59;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode59.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass28 = serializableNode27.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        serializableNode1.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        serializableNode45.parent = serializableNode49;
        int int51 = serializableNode49.rank;
        serializableNode39.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode54.parent;
        serializableNode39.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        int int61 = serializableNode58.rank;
        serializableNode39.parent = serializableNode58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode72.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode73.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable77 = serializableNode76.data;
        int int78 = serializableNode76.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode76.parent = serializableNode80;
        serializableNode76.data = '#';
        serializableNode74.parent = serializableNode76;
        serializableNode63.parent = serializableNode76;
        serializableNode31.parent = serializableNode76;
        serializableNode76.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode12.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        java.lang.Class<?> wildcardClass31 = serializableNode30.getClass();
        serializableNode12.data = wildcardClass31;
        serializableNode12.rank = (-1);
        java.io.Serializable serializable35 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode12.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializable35);
        org.junit.Assert.assertNotNull(serializableNode36);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode1.data;
        int int13 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10.0d + "'", serializable12, 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode11.parent = serializableNode13;
        serializableNode4.parent = serializableNode13;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode23.rank = (byte) 100;
        serializableNode23.data = 'a';
        java.lang.Class<?> wildcardClass28 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        int int30 = serializableNode29.rank;
        java.io.Serializable serializable31 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = null;
        serializableNode29.parent = serializableNode32;
        serializableNode1.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode29.parent;
        int int36 = serializableNode29.rank;
        java.io.Serializable serializable37 = serializableNode29.data;
        int int38 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        serializableNode40.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode48.rank = (byte) 100;
        serializableNode40.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode53.parent = serializableNode63;
        serializableNode40.parent = serializableNode53;
        java.io.Serializable serializable66 = serializableNode53.data;
        int int67 = serializableNode53.rank;
        java.lang.Class<?> wildcardClass68 = serializableNode53.getClass();
        serializableNode29.data = wildcardClass68;
        java.io.Serializable serializable70 = serializableNode29.data;
        java.lang.Class<?> wildcardClass71 = serializableNode29.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializable37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(serializable70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        int int21 = serializableNode5.rank;
        int int22 = serializableNode5.rank;
        serializableNode5.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        int int28 = serializableNode26.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode26.parent = serializableNode30;
        serializableNode26.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        serializableNode35.data = (short) 100;
        serializableNode26.parent = serializableNode35;
        java.io.Serializable serializable41 = serializableNode35.data;
        int int42 = serializableNode35.rank;
        serializableNode35.rank = 10;
        java.io.Serializable serializable45 = serializableNode35.data;
        serializableNode35.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode49.parent = serializableNode53;
        serializableNode35.parent = serializableNode53;
        serializableNode5.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable65 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        serializableNode62.parent = serializableNode66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        serializableNode69.rank = (byte) 1;
        java.lang.Class<?> wildcardClass75 = serializableNode69.getClass();
        serializableNode62.data = wildcardClass75;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode62.parent;
        java.lang.Class<?> wildcardClass79 = serializableNode78.getClass();
        serializableNode5.data = wildcardClass79;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + (short) 100 + "'", serializable41, (short) 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + (short) 100 + "'", serializable45, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        serializableNode33.rank = 'a';
        java.lang.Class<?> wildcardClass38 = serializableNode33.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        serializableNode47.parent = serializableNode51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode47.parent = serializableNode54;
        int int59 = serializableNode47.rank;
        serializableNode47.rank = 100;
        serializableNode41.parent = serializableNode47;
        serializableNode1.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode1.parent;
        int int65 = serializableNode1.rank;
        int int66 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(serializableNode67);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        java.io.Serializable serializable34 = serializableNode32.data;
        serializableNode32.rank = (byte) 1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass27);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode12.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass37);
        serializableNode12.data = wildcardClass37;
        serializableNode6.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        serializableNode42.rank = (byte) 100;
        serializableNode42.data = 10.0f;
        serializableNode6.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode42.parent;
        java.lang.Class<?> wildcardClass50 = serializableNode49.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass50);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode51.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode52);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        serializableNode10.rank = (byte) 10;
        serializableNode10.data = 10L;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode21.parent = serializableNode25;
        serializableNode21.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (short) 100;
        serializableNode21.parent = serializableNode30;
        java.io.Serializable serializable36 = serializableNode30.data;
        int int37 = serializableNode30.rank;
        serializableNode30.rank = 10;
        java.io.Serializable serializable40 = serializableNode30.data;
        java.lang.Class<?> wildcardClass41 = serializable40.getClass();
        serializableNode10.data = serializable40;
        serializableNode10.rank = (short) 100;
        serializableNode6.parent = serializableNode10;
        java.io.Serializable serializable46 = serializableNode6.data;
        serializableNode6.rank = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + (short) 100 + "'", serializable36, (short) 100);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + (short) 100 + "'", serializable40, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        org.junit.Assert.assertNotNull(serializableNode2);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        serializableNode16.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode16.parent;
        serializableNode16.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        java.lang.Class<?> wildcardClass31 = serializableNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        int int34 = serializableNode32.rank;
        int int35 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode26.parent = serializableNode37;
        serializableNode26.rank = (byte) 10;
        serializableNode1.parent = serializableNode26;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        int int13 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        int int31 = serializableNode19.rank;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode13.parent = serializableNode19;
        serializableNode1.parent = serializableNode13;
        serializableNode1.rank = (short) 10;
        serializableNode1.rank = (byte) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        java.io.Serializable serializable56 = serializableNode47.data;
        int int57 = serializableNode47.rank;
        java.io.Serializable serializable58 = serializableNode47.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        java.io.Serializable serializable8 = serializableNode1.data;
        serializableNode1.rank = '#';
        int int11 = serializableNode1.rank;
        int int12 = serializableNode1.rank;
        int int13 = serializableNode1.rank;
        int int14 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 35 + "'", int12 == 35);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 35 + "'", int13 == 35);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 35 + "'", int14 == 35);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        int int6 = serializableNode3.rank;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode10.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode10.parent;
        serializableNode31.rank = 97;
        int int34 = serializableNode31.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode19.parent;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode5.data = serializable32;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + true + "'", serializable17, true);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializable32);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode5.parent;
        int int23 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) true);
        int int2 = serializableNode1.rank;
        java.io.Serializable serializable3 = serializableNode1.data;
        int int4 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + true + "'", serializable3, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        serializableNode8.rank = (short) -1;
        int int12 = serializableNode8.rank;
        serializableNode3.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode19.parent;
        int int23 = serializableNode19.rank;
        serializableNode3.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        serializableNode17.rank = 100;
        int int23 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode29.data;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode39.getClass();
        serializableNode29.data = wildcardClass40;
        java.io.Serializable serializable42 = serializableNode29.data;
        java.io.Serializable serializable43 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        int int48 = serializableNode45.rank;
        java.io.Serializable serializable49 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode51.parent;
        serializableNode51.rank = (byte) 100;
        java.lang.Class<?> wildcardClass55 = serializableNode51.getClass();
        serializableNode45.data = wildcardClass55;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass55);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass55);
        serializableNode29.data = wildcardClass55;
        java.lang.Class<?> wildcardClass60 = serializableNode29.getClass();
        serializableNode17.data = wildcardClass60;
        java.lang.Class<?> wildcardClass62 = serializableNode17.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializable42);
        org.junit.Assert.assertNotNull(serializable43);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode17.parent = serializableNode22;
        serializableNode17.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        serializableNode31.rank = (short) -1;
        int int35 = serializableNode31.rank;
        serializableNode17.parent = serializableNode31;
        java.io.Serializable serializable37 = serializableNode31.data;
        serializableNode31.rank = 52;
        serializableNode9.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode9.parent;
        java.io.Serializable serializable42 = serializableNode41.data;
        java.lang.Class<?> wildcardClass43 = serializable42.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        serializableNode1.rank = 35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode29.parent = serializableNode33;
        int int35 = serializableNode33.rank;
        serializableNode33.data = (-1);
        int int38 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        serializableNode40.rank = (byte) 10;
        serializableNode40.data = 10L;
        serializableNode33.parent = serializableNode40;
        serializableNode40.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode40.parent;
        serializableNode1.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode53.parent;
        java.lang.Class<?> wildcardClass56 = serializableNode53.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode18.rank = (byte) 100;
        serializableNode18.data = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode27.parent;
        serializableNode27.rank = (byte) 10;
        int int35 = serializableNode27.rank;
        java.lang.Class<?> wildcardClass36 = serializableNode27.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass36);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass36);
        serializableNode24.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode24.parent;
        serializableNode16.parent = serializableNode40;
        int int42 = serializableNode40.rank;
        int int43 = serializableNode40.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable52 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode51.parent;
        serializableNode49.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        serializableNode49.parent = serializableNode56;
        int int61 = serializableNode49.rank;
        java.io.Serializable serializable62 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        serializableNode49.parent = serializableNode66;
        int int68 = serializableNode66.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        serializableNode70.rank = (byte) 1;
        int int76 = serializableNode70.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable80 = serializableNode79.data;
        int int81 = serializableNode79.rank;
        serializableNode79.rank = 'a';
        java.lang.Class<?> wildcardClass84 = serializableNode79.getClass();
        serializableNode70.data = wildcardClass84;
        java.lang.Class<?> wildcardClass86 = serializableNode70.getClass();
        serializableNode66.data = wildcardClass86;
        serializableNode66.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = serializableNode66.parent;
        serializableNode40.parent = serializableNode90;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(serializableNode90);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable9 = serializableNode1.data;
        java.io.Serializable serializable10 = serializableNode1.data;
        int int11 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode13.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        serializableNode22.data = (short) 100;
        serializableNode13.parent = serializableNode22;
        java.io.Serializable serializable28 = serializableNode22.data;
        int int29 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = (short) -1;
        serializableNode32.rank = (short) -1;
        java.io.Serializable serializable39 = serializableNode32.data;
        int int40 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode32.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        java.io.Serializable serializable51 = serializableNode50.data;
        int int52 = serializableNode50.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode60.parent = serializableNode64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        serializableNode60.parent = serializableNode67;
        int int72 = serializableNode60.rank;
        java.io.Serializable serializable73 = serializableNode60.data;
        serializableNode54.parent = serializableNode60;
        serializableNode42.parent = serializableNode54;
        java.lang.Class<?> wildcardClass76 = serializableNode42.getClass();
        serializableNode22.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode78.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        serializableNode1.data = serializable80;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10.0f + "'", serializable9, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10.0f + "'", serializable10, 10.0f);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (short) 100 + "'", serializable28, (short) 100);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertNotNull(serializable80);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode1.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass27);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode12.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass37);
        serializableNode12.data = wildcardClass37;
        serializableNode6.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        serializableNode42.rank = (byte) 100;
        serializableNode42.data = 10.0f;
        serializableNode6.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode42.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10.0f + "'", serializable50, 10.0f);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode17.data = wildcardClass20;
        int int22 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode1.data = wildcardClass26;
        int int28 = serializableNode1.rank;
        int int29 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        serializableNode31.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        serializableNode40.rank = (short) -1;
        serializableNode40.rank = (short) -1;
        java.io.Serializable serializable47 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        serializableNode49.rank = (short) -1;
        serializableNode49.rank = (short) -1;
        java.io.Serializable serializable56 = serializableNode49.data;
        serializableNode40.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int60 = serializableNode59.rank;
        int int61 = serializableNode59.rank;
        java.io.Serializable serializable62 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode59.parent;
        java.io.Serializable serializable64 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode63.parent;
        java.io.Serializable serializable66 = serializableNode63.data;
        java.io.Serializable serializable67 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        java.lang.Class<?> wildcardClass74 = serializableNode73.getClass();
        serializableNode63.data = wildcardClass74;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode63.parent;
        java.io.Serializable serializable77 = serializableNode76.data;
        serializableNode49.data = serializable77;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable77);
        java.io.Serializable serializable80 = serializableNode79.data;
        java.lang.Class<?> wildcardClass81 = serializableNode79.getClass();
        serializableNode38.data = wildcardClass81;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass81);
        serializableNode1.data = wildcardClass81;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass81);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertNotNull(serializable77);
        org.junit.Assert.assertNotNull(serializable80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 0;
        serializableNode14.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        serializableNode21.rank = 'a';
        java.lang.Class<?> wildcardClass26 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass26);
        serializableNode14.data = wildcardClass26;
        int int29 = serializableNode14.rank;
        serializableNode14.rank = 97;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode9.rank = (short) 0;
        java.io.Serializable serializable12 = serializableNode9.data;
        java.io.Serializable serializable13 = serializableNode9.data;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        java.io.Serializable serializable23 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        int int29 = serializableNode26.rank;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        serializableNode32.rank = (byte) 100;
        java.lang.Class<?> wildcardClass36 = serializableNode32.getClass();
        serializableNode26.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode44.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        serializableNode44.parent = serializableNode51;
        serializableNode26.parent = serializableNode44;
        serializableNode24.parent = serializableNode26;
        serializableNode26.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        java.io.Serializable serializable68 = serializableNode65.data;
        java.io.Serializable serializable69 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode71.parent;
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode65.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode65.parent;
        serializableNode78.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode78.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode78.parent;
        serializableNode26.parent = serializableNode78;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode78.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable87 = serializableNode86.data;
        serializableNode86.rank = (short) 10;
        java.lang.Class<?> wildcardClass90 = serializableNode86.getClass();
        serializableNode84.data = wildcardClass90;
        serializableNode22.data = wildcardClass90;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertEquals("'" + serializable87 + "' != '" + 10L + "'", serializable87, 10L);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass3 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass3);
        java.lang.Class<?> wildcardClass6 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        serializableNode17.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 10.0f;
        serializableNode1.rank = ' ';
        serializableNode1.rank = (short) -1;
        int int11 = serializableNode1.rank;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode21.parent = serializableNode23;
        int int30 = serializableNode21.rank;
        serializableNode10.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        serializableNode33.rank = (byte) 1;
        serializableNode33.data = 10.0d;
        java.lang.Class<?> wildcardClass41 = serializableNode33.getClass();
        serializableNode21.data = wildcardClass41;
        serializableNode8.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        serializableNode49.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode49.parent;
        java.io.Serializable serializable53 = serializableNode49.data;
        serializableNode45.parent = serializableNode49;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        serializableNode5.data = (byte) -1;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode17.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        serializableNode33.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode29.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        int int43 = serializableNode40.rank;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode46.parent;
        serializableNode46.rank = (byte) 100;
        java.lang.Class<?> wildcardClass50 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass50;
        serializableNode37.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable64 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode63.parent;
        serializableNode58.parent = serializableNode63;
        serializableNode58.data = true;
        serializableNode54.parent = serializableNode58;
        serializableNode40.parent = serializableNode58;
        serializableNode17.parent = serializableNode40;
        int int72 = serializableNode17.rank;
        serializableNode12.parent = serializableNode17;
        int int74 = serializableNode17.rank;
        java.io.Serializable serializable75 = serializableNode17.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode3.parent;
        java.lang.Class<?> wildcardClass5 = serializableNode3.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + (byte) 0 + "'", serializable2, (byte) 0);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode17.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode28.parent;
        serializableNode28.rank = (byte) 10;
        int int36 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass43);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass43);
        serializableNode28.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        serializableNode48.rank = 'a';
        java.lang.Class<?> wildcardClass53 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass53);
        serializableNode28.data = wildcardClass53;
        serializableNode22.data = wildcardClass53;
        serializableNode11.data = wildcardClass53;
        int int58 = serializableNode11.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        serializableNode15.data = (short) 1;
        int int18 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode20.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        serializableNode20.parent = serializableNode24;
        serializableNode15.parent = serializableNode24;
        int int29 = serializableNode15.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        java.io.Serializable serializable22 = serializableNode16.data;
        java.io.Serializable serializable23 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass28 = serializableNode27.getClass();
        serializableNode25.data = wildcardClass28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        serializableNode16.data = wildcardClass28;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode16.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        int int31 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode5.parent = serializableNode35;
        int int37 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        int int13 = serializableNode12.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode9.data;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode9.data = wildcardClass20;
        serializableNode3.data = wildcardClass20;
        serializableNode1.data = wildcardClass20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable25);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable25);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        java.io.Serializable serializable20 = serializableNode17.data;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode27.getClass();
        serializableNode17.data = wildcardClass28;
        java.lang.Class<?> wildcardClass30 = serializableNode17.getClass();
        serializableNode11.data = wildcardClass30;
        serializableNode9.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        java.io.Serializable serializable36 = serializableNode34.data;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        java.io.Serializable serializable44 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        java.io.Serializable serializable55 = serializableNode52.data;
        java.io.Serializable serializable56 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.lang.Class<?> wildcardClass63 = serializableNode62.getClass();
        serializableNode52.data = wildcardClass63;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode52.parent;
        serializableNode43.parent = serializableNode52;
        java.lang.Class<?> wildcardClass67 = serializableNode52.getClass();
        serializableNode34.data = wildcardClass67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        serializableNode9.data = wildcardClass67;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode26.parent = serializableNode31;
        serializableNode26.data = true;
        serializableNode22.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode22.parent;
        serializableNode10.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        int int44 = serializableNode42.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode42.parent = serializableNode46;
        serializableNode42.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        serializableNode51.data = (short) 100;
        serializableNode42.parent = serializableNode51;
        java.io.Serializable serializable57 = serializableNode51.data;
        int int58 = serializableNode51.rank;
        serializableNode51.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode51.parent;
        int int62 = serializableNode61.rank;
        serializableNode10.parent = serializableNode61;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + (short) 100 + "'", serializable57, (short) 100);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.rank = (byte) 1;
        int int19 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode24.rank = (short) -1;
        java.lang.Class<?> wildcardClass28 = serializableNode24.getClass();
        serializableNode13.data = wildcardClass28;
        serializableNode10.data = wildcardClass28;
        serializableNode1.data = wildcardClass28;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        int int19 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass20 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode27.parent = serializableNode32;
        serializableNode27.data = true;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = null;
        serializableNode27.parent = serializableNode39;
        serializableNode21.parent = serializableNode27;
        serializableNode21.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode21.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode44);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        int int20 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode19.parent = serializableNode24;
        int int26 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        serializableNode28.rank = (short) -1;
        serializableNode28.rank = (short) -1;
        serializableNode19.parent = serializableNode28;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass11 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode5.data = wildcardClass27;
        java.lang.Class<?> wildcardClass29 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode3.rank;
        serializableNode3.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode3.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int4 = serializableNode3.rank;
        int int5 = serializableNode3.rank;
        java.io.Serializable serializable6 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        serializableNode3.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode16.parent = serializableNode23;
        int int28 = serializableNode16.rank;
        java.io.Serializable serializable29 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        serializableNode16.parent = serializableNode35;
        serializableNode10.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode47.parent = serializableNode52;
        serializableNode47.data = true;
        serializableNode43.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode47.parent;
        serializableNode16.parent = serializableNode47;
        java.io.Serializable serializable61 = serializableNode47.data;
        serializableNode1.parent = serializableNode47;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + true + "'", serializable61, true);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        serializableNode38.rank = (byte) 1;
        java.lang.Class<?> wildcardClass44 = serializableNode38.getClass();
        serializableNode31.data = wildcardClass44;
        java.io.Serializable serializable46 = serializableNode31.data;
        serializableNode22.data = serializable46;
        int int48 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        int int53 = serializableNode50.rank;
        java.io.Serializable serializable54 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode56.parent;
        serializableNode56.rank = (byte) 100;
        java.lang.Class<?> wildcardClass60 = serializableNode56.getClass();
        serializableNode50.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass65 = serializableNode64.getClass();
        serializableNode62.data = wildcardClass65;
        int int67 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable77 = serializableNode76.data;
        int int78 = serializableNode76.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode76.parent = serializableNode80;
        serializableNode74.parent = serializableNode76;
        int int83 = serializableNode74.rank;
        java.lang.Class<?> wildcardClass84 = serializableNode74.getClass();
        serializableNode62.data = wildcardClass84;
        serializableNode22.parent = serializableNode62;
        int int87 = serializableNode22.rank;
        int int88 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode11 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode10);
        serializableNode10.rank = (byte) 1;
        java.io.Serializable serializable14 = serializableNode10.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode19.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        serializableNode1.data = wildcardClass15;
        serializableNode1.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode1.parent;
        int int21 = serializableNode20.rank;
        java.io.Serializable serializable22 = serializableNode20.data;
        serializableNode20.rank = (byte) 0;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertNotNull(serializable22);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        serializableNode17.parent = serializableNode22;
        serializableNode17.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        serializableNode31.rank = (short) -1;
        int int35 = serializableNode31.rank;
        serializableNode17.parent = serializableNode31;
        java.io.Serializable serializable37 = serializableNode31.data;
        serializableNode31.rank = 52;
        serializableNode9.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        serializableNode47.parent = serializableNode51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode47.parent = serializableNode54;
        java.io.Serializable serializable59 = serializableNode47.data;
        serializableNode41.parent = serializableNode47;
        java.lang.Class<?> wildcardClass61 = serializableNode47.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        java.io.Serializable serializable17 = serializableNode2.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        serializableNode19.rank = (short) -1;
        java.io.Serializable serializable24 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        serializableNode28.rank = (short) -1;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        serializableNode19.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.lang.Class<?> wildcardClass53 = serializableNode48.getClass();
        serializableNode42.data = wildcardClass53;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass53);
        serializableNode19.data = wildcardClass53;
        serializableNode2.data = wildcardClass53;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (byte) 0;
        java.io.Serializable serializable23 = serializableNode18.data;
        int int24 = serializableNode18.rank;
        serializableNode18.rank = 0;
        int int27 = serializableNode18.rank;
        serializableNode1.parent = serializableNode18;
        java.io.Serializable serializable29 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        serializableNode33.rank = (byte) 1;
        int int39 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode33.parent;
        serializableNode33.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        java.lang.Class<?> wildcardClass47 = serializableNode46.getClass();
        serializableNode30.data = wildcardClass47;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        int int20 = serializableNode14.rank;
        serializableNode14.rank = 'a';
        java.lang.Class<?> wildcardClass23 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode1.parent;
        serializableNode1.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        int int62 = serializableNode52.rank;
        serializableNode40.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode52.parent;
        java.io.Serializable serializable66 = serializableNode52.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        serializableNode18.rank = 97;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        serializableNode17.rank = (short) -1;
        java.io.Serializable serializable24 = serializableNode17.data;
        int int25 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode17.parent = serializableNode27;
        java.lang.Class<?> wildcardClass29 = serializableNode27.getClass();
        serializableNode1.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass29);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode24.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode36.rank = (byte) 1;
        int int42 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        java.io.Serializable serializable47 = serializableNode45.data;
        java.lang.Class<?> wildcardClass48 = serializable47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass48);
        serializableNode36.parent = serializableNode49;
        serializableNode24.parent = serializableNode36;
        java.lang.Class<?> wildcardClass52 = serializableNode36.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass2 = charSequenceNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode3);
        int int5 = serializableNode3.rank;
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        serializableNode4.data = 0.0f;
        serializableNode4.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        int int17 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode21.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        int int29 = serializableNode28.rank;
        serializableNode18.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode32.parent = serializableNode36;
        serializableNode32.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (short) 100;
        serializableNode32.parent = serializableNode41;
        java.io.Serializable serializable47 = serializableNode41.data;
        int int48 = serializableNode41.rank;
        serializableNode41.rank = 10;
        java.io.Serializable serializable51 = serializableNode41.data;
        serializableNode41.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode41.parent;
        java.lang.Class<?> wildcardClass55 = serializableNode54.getClass();
        serializableNode28.data = wildcardClass55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode28.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode28.getClass();
        serializableNode4.data = wildcardClass58;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) 100 + "'", serializable47, (short) 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + (short) 100 + "'", serializable51, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode12.rank = (byte) 100;
        serializableNode12.data = 'a';
        java.lang.Class<?> wildcardClass17 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass17);
        serializableNode19.rank = 0;
        int int22 = serializableNode19.rank;
        serializableNode9.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        int int31 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        serializableNode32.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode47.rank = (byte) 100;
        java.lang.Class<?> wildcardClass51 = serializableNode47.getClass();
        serializableNode41.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode41.parent;
        java.io.Serializable serializable54 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode41.parent;
        serializableNode32.parent = serializableNode55;
        int int57 = serializableNode55.rank;
        serializableNode9.parent = serializableNode55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode9.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializable54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode37.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode41.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        serializableNode37.parent = serializableNode50;
        serializableNode34.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode59 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode54);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = 'a';
        java.lang.Class<?> wildcardClass72 = serializableNode67.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        serializableNode61.data = wildcardClass72;
        serializableNode54.data = wildcardClass72;
        serializableNode37.data = wildcardClass72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode37.parent;
        int int78 = serializableNode37.rank;
        serializableNode18.parent = serializableNode37;
        java.lang.Class<?> wildcardClass80 = serializableNode37.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass80);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = null;
        serializableNode16.parent = serializableNode18;
        serializableNode16.rank = (short) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        serializableNode6.rank = 0;
        int int17 = serializableNode6.rank;
        int int18 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = (byte) 10;
        int int21 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        int int29 = serializableNode27.rank;
        serializableNode1.parent = serializableNode27;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        int int31 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode5.parent = serializableNode35;
        int int37 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = null;
        serializableNode5.parent = serializableNode39;
        int int41 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        serializableNode9.data = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode18.parent = serializableNode23;
        serializableNode18.data = true;
        serializableNode18.rank = 0;
        int int31 = serializableNode18.rank;
        int int32 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        int int37 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        serializableNode18.parent = serializableNode38;
        serializableNode9.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        serializableNode46.parent = serializableNode50;
        int int52 = serializableNode50.rank;
        serializableNode50.rank = (byte) 0;
        serializableNode50.rank = (byte) 1;
        int int57 = serializableNode50.rank;
        java.io.Serializable serializable58 = serializableNode50.data;
        serializableNode9.parent = serializableNode50;
        java.lang.Class<?> wildcardClass60 = serializableNode50.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode5.parent;
        int int7 = serializableNode5.rank;
        int int8 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode11.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode24.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        serializableNode24.parent = serializableNode31;
        int int36 = serializableNode24.rank;
        java.io.Serializable serializable37 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        serializableNode24.parent = serializableNode43;
        serializableNode18.parent = serializableNode24;
        serializableNode24.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.io.Serializable serializable58 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode60 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode59);
        int int61 = serializableNode59.rank;
        serializableNode24.parent = serializableNode59;
        serializableNode5.parent = serializableNode59;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode59.parent;
        java.io.Serializable serializable65 = serializableNode64.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = 100.0d;
        int int21 = serializableNode10.rank;
        int int22 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        serializableNode12.data = (short) 1;
        int int15 = serializableNode12.rank;
        serializableNode12.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        serializableNode7.rank = (byte) 10;
        int int15 = serializableNode7.rank;
        int int16 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode7.parent;
        serializableNode1.parent = serializableNode7;
        java.lang.Class<?> wildcardClass21 = serializableNode1.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int18 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode17.getClass();
        serializableNode1.data = wildcardClass19;
        serializableNode1.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode1.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode8.parent;
        java.io.Serializable serializable18 = serializableNode8.data;
        java.lang.Class<?> wildcardClass19 = serializable18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10.0d + "'", serializable18, 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        java.io.Serializable serializable27 = serializableNode9.data;
        java.io.Serializable serializable28 = serializableNode9.data;
        java.io.Serializable serializable29 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode9.parent;
        java.io.Serializable serializable31 = serializableNode9.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + (-1) + "'", serializable27, (-1));
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (-1) + "'", serializable28, (-1));
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + (-1) + "'", serializable29, (-1));
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + (-1) + "'", serializable31, (-1));
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        java.io.Serializable serializable14 = serializableNode11.data;
        java.io.Serializable serializable15 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode21.getClass();
        serializableNode11.data = wildcardClass22;
        serializableNode1.parent = serializableNode11;
        java.lang.Class<?> wildcardClass25 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass25);
        serializableNode26.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        java.io.Serializable serializable22 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode15.parent;
        serializableNode23.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass8);
        int int10 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        serializableNode5.rank = (byte) -1;
        java.io.Serializable serializable24 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable24);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        serializableNode27.rank = (short) -1;
        serializableNode27.rank = (short) -1;
        int int34 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode40.parent = serializableNode44;
        int int46 = serializableNode40.rank;
        serializableNode40.rank = 'a';
        java.lang.Class<?> wildcardClass49 = serializableNode40.getClass();
        serializableNode27.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode27.parent;
        serializableNode27.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode27.parent;
        int int55 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode27.parent;
        serializableNode25.parent = serializableNode56;
        serializableNode25.rank = '4';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializable24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 97 + "'", int55 == 97);
        org.junit.Assert.assertNotNull(serializableNode56);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        int int56 = serializableNode54.rank;
        serializableNode44.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode44.parent = serializableNode59;
        serializableNode59.rank = (short) -1;
        serializableNode21.parent = serializableNode59;
        java.lang.Class<?> wildcardClass65 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        serializableNode12.rank = (byte) 0;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        serializableNode30.parent = serializableNode33;
        serializableNode30.rank = 0;
        int int37 = serializableNode30.rank;
        serializableNode12.parent = serializableNode30;
        java.io.Serializable serializable39 = serializableNode12.data;
        serializableNode12.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 100 + "'", serializable39, 100);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode29.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        serializableNode33.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        serializableNode29.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode29.parent;
        serializableNode29.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        serializableNode48.rank = (byte) 1;
        int int54 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode48.parent;
        serializableNode48.rank = (byte) 0;
        java.io.Serializable serializable58 = serializableNode48.data;
        serializableNode48.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        java.io.Serializable serializable65 = serializableNode64.data;
        serializableNode64.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        int int69 = serializableNode68.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode70.parent;
        java.lang.Class<?> wildcardClass72 = serializableNode70.getClass();
        serializableNode48.data = wildcardClass72;
        serializableNode29.data = wildcardClass72;
        serializableNode20.parent = serializableNode29;
        java.lang.Class<?> wildcardClass76 = serializableNode29.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        serializableNode13.parent = serializableNode20;
        java.io.Serializable serializable22 = serializableNode13.data;
        java.io.Serializable serializable23 = serializableNode13.data;
        int int24 = serializableNode13.rank;
        int int25 = serializableNode13.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializable22);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        int int26 = serializableNode25.rank;
        java.io.Serializable serializable27 = serializableNode25.data;
        serializableNode10.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode10.parent;
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = null;
        serializableNode5.parent = serializableNode17;
        serializableNode5.rank = (byte) -1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        serializableNode10.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode20.parent = serializableNode30;
        int int34 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        serializableNode36.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode44.rank = (byte) 100;
        serializableNode36.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        java.io.Serializable serializable54 = serializableNode53.data;
        int int55 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode57.parent;
        serializableNode36.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        serializableNode65.parent = serializableNode69;
        int int71 = serializableNode69.rank;
        serializableNode69.rank = (byte) 0;
        serializableNode69.rank = (byte) 1;
        int int76 = serializableNode69.rank;
        java.io.Serializable serializable77 = serializableNode69.data;
        serializableNode36.parent = serializableNode69;
        java.lang.Class<?> wildcardClass79 = serializableNode36.getClass();
        serializableNode30.data = wildcardClass79;
        serializableNode10.data = wildcardClass79;
        serializableNode10.rank = (short) 100;
        serializableNode10.rank = 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        serializableNode1.data = wildcardClass15;
        serializableNode1.rank = '#';
        java.io.Serializable serializable20 = serializableNode1.data;
        java.io.Serializable serializable21 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable21);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        serializableNode29.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode29.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode51.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        serializableNode44.parent = serializableNode56;
        int int59 = serializableNode56.rank;
        java.lang.Class<?> wildcardClass60 = serializableNode56.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass60);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        serializableNode1.rank = 0;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.data = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode13.data;
        java.io.Serializable serializable17 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode13.data = wildcardClass24;
        java.lang.Class<?> wildcardClass26 = serializableNode13.getClass();
        serializableNode7.data = wildcardClass26;
        serializableNode1.parent = serializableNode7;
        serializableNode7.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        int int33 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode35.parent = serializableNode40;
        serializableNode35.data = true;
        serializableNode31.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode31.parent;
        serializableNode47.rank = 35;
        serializableNode29.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode52.parent;
        serializableNode53.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode57.parent;
        serializableNode57.rank = (byte) 10;
        int int65 = serializableNode57.rank;
        serializableNode53.parent = serializableNode57;
        serializableNode57.rank = 1;
        java.io.Serializable serializable69 = serializableNode57.data;
        serializableNode29.parent = serializableNode57;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        serializableNode16.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode16);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode7.parent;
        serializableNode10.rank = 97;
        java.lang.Class<?> wildcardClass13 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass13);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) -1;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode10.parent;
        int int42 = serializableNode41.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        serializableNode1.parent = serializableNode20;
        int int22 = serializableNode20.rank;
        int int23 = serializableNode20.rank;
        serializableNode20.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        int int19 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode10.parent = serializableNode23;
        serializableNode3.parent = serializableNode10;
        serializableNode3.rank = (byte) -1;
        java.io.Serializable serializable28 = serializableNode3.data;
        java.lang.Class<?> wildcardClass29 = serializable28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable28);
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        int int9 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode20.parent = serializableNode28;
        serializableNode10.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode32.parent = serializableNode36;
        serializableNode32.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (short) 100;
        serializableNode32.parent = serializableNode41;
        java.io.Serializable serializable47 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode49.parent;
        serializableNode41.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        int int53 = serializableNode52.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode10.parent = serializableNode52;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializable11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) 100 + "'", serializable47, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(serializableNode54);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        serializableNode25.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode21.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass33 = serializableNode31.getClass();
        serializableNode1.data = wildcardClass33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        serializableNode36.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        int int49 = serializableNode46.rank;
        java.io.Serializable serializable50 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode52.parent;
        serializableNode52.rank = (byte) 100;
        java.lang.Class<?> wildcardClass56 = serializableNode52.getClass();
        serializableNode46.data = wildcardClass56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass61 = serializableNode60.getClass();
        serializableNode58.data = wildcardClass61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable71 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode70.parent;
        serializableNode68.parent = serializableNode72;
        int int74 = serializableNode72.rank;
        serializableNode72.data = (-1);
        int int77 = serializableNode72.rank;
        serializableNode58.parent = serializableNode72;
        serializableNode72.rank = '#';
        serializableNode72.rank = 'a';
        serializableNode72.rank = (byte) 100;
        java.lang.Class<?> wildcardClass85 = serializableNode72.getClass();
        serializableNode43.data = wildcardClass85;
        serializableNode1.data = wildcardClass85;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        serializableNode5.rank = (-1);
        java.io.Serializable serializable25 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        serializableNode39.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode46.rank = (byte) 1;
        java.lang.Class<?> wildcardClass52 = serializableNode46.getClass();
        serializableNode39.data = wildcardClass52;
        java.io.Serializable serializable54 = serializableNode39.data;
        java.io.Serializable serializable55 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode57.parent;
        int int60 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode62.parent = serializableNode66;
        serializableNode66.data = 0.0d;
        serializableNode57.parent = serializableNode66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode57.parent;
        serializableNode57.rank = (short) 0;
        serializableNode39.parent = serializableNode57;
        serializableNode33.parent = serializableNode39;
        int int76 = serializableNode33.rank;
        serializableNode5.parent = serializableNode33;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializable54);
        org.junit.Assert.assertNotNull(serializable55);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        serializableNode4.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode4.parent;
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(serializableNode7);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        serializableNode22.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode26.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        serializableNode22.parent = serializableNode35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode22.parent;
        serializableNode22.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        serializableNode41.rank = (byte) 1;
        int int47 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode41.parent;
        serializableNode41.rank = (byte) 0;
        java.io.Serializable serializable51 = serializableNode41.data;
        serializableNode41.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        serializableNode57.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        int int62 = serializableNode61.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode63.parent;
        java.lang.Class<?> wildcardClass65 = serializableNode63.getClass();
        serializableNode41.data = wildcardClass65;
        serializableNode22.data = wildcardClass65;
        serializableNode22.rank = 97;
        serializableNode6.parent = serializableNode22;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        serializableNode8.rank = (byte) -1;
        serializableNode8.rank = 35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode24.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        serializableNode35.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        int int49 = serializableNode46.rank;
        java.io.Serializable serializable50 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode52.parent;
        serializableNode52.rank = (byte) 100;
        java.lang.Class<?> wildcardClass56 = serializableNode52.getClass();
        serializableNode46.data = wildcardClass56;
        serializableNode42.data = wildcardClass56;
        serializableNode35.data = wildcardClass56;
        serializableNode33.data = wildcardClass56;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass56);
        serializableNode8.data = wildcardClass56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass56);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode69.parent;
        java.lang.Class<?> wildcardClass73 = serializableNode72.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass73);
        int int75 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode74.parent;
        java.io.Serializable serializable77 = serializableNode76.data;
        serializableNode63.parent = serializableNode76;
        java.io.Serializable serializable79 = serializableNode63.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertNotNull(serializable77);
        org.junit.Assert.assertNotNull(serializable79);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        int int33 = serializableNode21.rank;
        serializableNode21.rank = 100;
        serializableNode15.parent = serializableNode21;
        java.lang.Class<?> wildcardClass37 = serializableNode15.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass37);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode23.data;
        java.io.Serializable serializable27 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode23.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode23.parent;
        serializableNode14.parent = serializableNode23;
        java.lang.Class<?> wildcardClass38 = serializableNode23.getClass();
        serializableNode8.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        java.io.Serializable serializable41 = serializableNode40.data;
        java.lang.Class<?> wildcardClass42 = serializable41.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        serializableNode18.rank = (short) -1;
        java.io.Serializable serializable25 = serializableNode18.data;
        int int26 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode18.parent;
        serializableNode13.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode30.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        serializableNode40.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode45 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode40);
        java.io.Serializable serializable46 = serializableNode40.data;
        java.lang.Class<?> wildcardClass47 = serializableNode40.getClass();
        serializableNode35.data = wildcardClass47;
        serializableNode18.data = wildcardClass47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode50.parent;
        serializableNode5.parent = serializableNode50;
        serializableNode5.rank = 1;
        serializableNode5.rank = 35;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializable6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        int int4 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode15.parent = serializableNode28;
        serializableNode8.parent = serializableNode15;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable32 = serializableNode15.data;
        java.io.Serializable serializable33 = serializableNode15.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode24.parent;
        int int30 = serializableNode29.rank;
        serializableNode17.parent = serializableNode29;
        serializableNode17.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode26.parent = serializableNode31;
        serializableNode26.data = true;
        serializableNode22.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode22.parent;
        serializableNode10.parent = serializableNode22;
        int int41 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        int int54 = serializableNode45.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        serializableNode56.rank = (byte) 1;
        serializableNode56.data = 10.0d;
        java.lang.Class<?> wildcardClass64 = serializableNode56.getClass();
        serializableNode45.data = wildcardClass64;
        java.io.Serializable serializable66 = serializableNode45.data;
        serializableNode43.data = serializable66;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable66);
        java.lang.Class<?> wildcardClass69 = serializableNode68.getClass();
        serializableNode22.data = wildcardClass69;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(serializable66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        serializableNode7.rank = (byte) 10;
        int int15 = serializableNode7.rank;
        int int16 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode7.parent;
        serializableNode1.parent = serializableNode7;
        java.lang.Class<?> wildcardClass21 = serializableNode7.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        int int29 = serializableNode26.rank;
        serializableNode7.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        int int46 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode44.parent = serializableNode48;
        serializableNode44.data = '#';
        serializableNode42.parent = serializableNode44;
        serializableNode31.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode31.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode54);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode12.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        serializableNode25.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        serializableNode25.parent = serializableNode32;
        int int37 = serializableNode25.rank;
        java.io.Serializable serializable38 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.io.Serializable serializable45 = serializableNode44.data;
        int int46 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        serializableNode25.parent = serializableNode44;
        serializableNode19.parent = serializableNode25;
        java.lang.Class<?> wildcardClass51 = serializableNode19.getClass();
        serializableNode10.data = wildcardClass51;
        java.io.Serializable serializable53 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        serializableNode55.rank = (byte) 1;
        serializableNode55.data = 10.0d;
        serializableNode55.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode55.parent;
        serializableNode10.parent = serializableNode55;
        java.lang.Class<?> wildcardClass67 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializable53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int4 = serializableNode3.rank;
        int int5 = serializableNode3.rank;
        java.io.Serializable serializable6 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode10.parent = serializableNode14;
        serializableNode8.parent = serializableNode10;
        serializableNode1.parent = serializableNode10;
        serializableNode1.rank = (-1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode28 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode27);
        serializableNode1.parent = serializableNode27;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode12.data;
        java.io.Serializable serializable18 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode21.rank = (byte) 1;
        serializableNode21.data = 10.0d;
        serializableNode21.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode34.rank = (byte) 100;
        serializableNode34.data = 'a';
        java.lang.Class<?> wildcardClass39 = serializableNode34.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        serializableNode32.parent = serializableNode40;
        java.lang.Class<?> wildcardClass42 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass42);
        serializableNode19.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode10.parent = serializableNode15;
        int int19 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass20 = serializableNode10.getClass();
        serializableNode8.data = wildcardClass20;
        java.lang.Class<?> wildcardClass22 = serializableNode8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode22.rank = (byte) 100;
        serializableNode22.data = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        int int29 = serializableNode28.rank;
        serializableNode28.rank = 1;
        int int32 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode28.parent;
        serializableNode20.parent = serializableNode33;
        int int35 = serializableNode20.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        int int23 = serializableNode12.rank;
        int int24 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass25 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass25);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        serializableNode8.rank = (short) -1;
        int int12 = serializableNode8.rank;
        serializableNode3.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode19.parent;
        int int23 = serializableNode19.rank;
        serializableNode3.parent = serializableNode19;
        serializableNode19.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode19.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = null;
        serializableNode5.parent = serializableNode17;
        java.io.Serializable serializable19 = serializableNode5.data;
        java.io.Serializable serializable20 = serializableNode5.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + true + "'", serializable19, true);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + true + "'", serializable20, true);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        int int19 = serializableNode13.rank;
        java.lang.Class<?> wildcardClass20 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass20);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        serializableNode1.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        java.io.Serializable serializable31 = serializableNode28.data;
        java.io.Serializable serializable32 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass39 = serializableNode38.getClass();
        serializableNode28.data = wildcardClass39;
        java.io.Serializable serializable41 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode28.parent;
        serializableNode1.parent = serializableNode28;
        int int45 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        serializableNode18.data = (byte) -1;
        serializableNode18.rank = (byte) 0;
        int int23 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode28.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        serializableNode28.parent = serializableNode41;
        serializableNode12.parent = serializableNode28;
        serializableNode28.rank = 'a';
        serializableNode28.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        serializableNode25.rank = 'a';
        java.lang.Class<?> wildcardClass30 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass30);
        serializableNode19.data = wildcardClass30;
        serializableNode5.data = wildcardClass30;
        serializableNode5.data = 97;
        java.io.Serializable serializable36 = null;
        serializableNode5.data = serializable36;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        serializableNode18.data = (byte) -1;
        java.io.Serializable serializable21 = null;
        serializableNode18.data = serializable21;
        serializableNode18.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.data = (-1);
        int int39 = serializableNode34.rank;
        serializableNode34.data = 97;
        java.lang.Class<?> wildcardClass42 = serializableNode34.getClass();
        serializableNode18.data = wildcardClass42;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        serializableNode14.rank = 32;
        java.lang.Class<?> wildcardClass35 = serializableNode14.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        int int29 = serializableNode27.rank;
        serializableNode27.rank = (byte) 0;
        serializableNode27.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode35.parent = serializableNode40;
        serializableNode35.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        serializableNode49.rank = (short) -1;
        int int53 = serializableNode49.rank;
        serializableNode35.parent = serializableNode49;
        java.io.Serializable serializable55 = serializableNode49.data;
        serializableNode49.rank = 52;
        serializableNode27.parent = serializableNode49;
        serializableNode13.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode27.parent;
        serializableNode6.parent = serializableNode60;
        java.lang.Class<?> wildcardClass62 = serializableNode60.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + "" + "'", serializable5, "");
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        serializableNode5.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode23.getClass();
        serializableNode17.data = wildcardClass28;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        int int32 = serializableNode31.rank;
        java.lang.Class<?> wildcardClass33 = serializableNode31.getClass();
        serializableNode5.data = wildcardClass33;
        int int35 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        java.io.Serializable serializable34 = serializableNode21.data;
        serializableNode5.parent = serializableNode21;
        java.io.Serializable serializable36 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable36);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable36);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertNotNull(serializableNode39);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        serializableNode15.parent = serializableNode22;
        int int27 = serializableNode15.rank;
        java.io.Serializable serializable28 = serializableNode15.data;
        serializableNode9.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode15.parent;
        java.io.Serializable serializable31 = serializableNode15.data;
        java.lang.Class<?> wildcardClass32 = serializable31.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        int int13 = serializableNode1.rank;
        java.io.Serializable serializable14 = serializableNode1.data;
        int int15 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        int int19 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode17.parent = serializableNode21;
        serializableNode17.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.data = (short) 100;
        serializableNode17.parent = serializableNode26;
        java.io.Serializable serializable32 = serializableNode26.data;
        serializableNode26.rank = (short) 1;
        serializableNode26.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        int int41 = serializableNode38.rank;
        java.io.Serializable serializable42 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        serializableNode44.rank = (byte) 100;
        java.lang.Class<?> wildcardClass48 = serializableNode44.getClass();
        serializableNode38.data = wildcardClass48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass53 = serializableNode52.getClass();
        serializableNode50.data = wildcardClass53;
        int int55 = serializableNode50.rank;
        int int56 = serializableNode50.rank;
        serializableNode26.parent = serializableNode50;
        int int58 = serializableNode50.rank;
        java.io.Serializable serializable59 = serializableNode50.data;
        serializableNode1.data = serializable59;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + (short) 100 + "'", serializable32, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializable59);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        int int26 = serializableNode25.rank;
        java.io.Serializable serializable27 = serializableNode25.data;
        serializableNode10.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode37.rank = (short) -1;
        int int41 = serializableNode37.rank;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        int int52 = serializableNode48.rank;
        serializableNode32.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode48.parent;
        serializableNode10.parent = serializableNode48;
        serializableNode10.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int60 = serializableNode59.rank;
        int int61 = serializableNode59.rank;
        java.io.Serializable serializable62 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode59.parent;
        java.io.Serializable serializable64 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode63.parent;
        java.io.Serializable serializable66 = serializableNode63.data;
        java.io.Serializable serializable67 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        java.lang.Class<?> wildcardClass74 = serializableNode73.getClass();
        serializableNode63.data = wildcardClass74;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode63.parent;
        java.io.Serializable serializable77 = serializableNode76.data;
        java.lang.Class<?> wildcardClass78 = serializable77.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass78);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass78);
        serializableNode10.data = wildcardClass78;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertNotNull(serializable77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        int int22 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode23.getClass();
        serializableNode1.data = wildcardClass25;
        java.io.Serializable serializable27 = serializableNode1.data;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializable27);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        serializableNode12.rank = (byte) 0;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        serializableNode30.parent = serializableNode33;
        serializableNode30.rank = 0;
        int int37 = serializableNode30.rank;
        serializableNode12.parent = serializableNode30;
        serializableNode12.rank = (short) 10;
        serializableNode12.rank = (byte) 100;
        int int43 = serializableNode12.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        serializableNode20.parent = serializableNode22;
        int int29 = serializableNode20.rank;
        serializableNode20.data = ' ';
        serializableNode13.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode42.rank = (byte) 0;
        serializableNode42.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode50.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        int int64 = serializableNode62.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode65.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode55.parent = serializableNode68;
        serializableNode68.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        serializableNode42.parent = serializableNode72;
        serializableNode13.parent = serializableNode72;
        java.lang.Class<?> wildcardClass75 = serializableNode72.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        serializableNode11.rank = (short) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable5 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode4.parent;
        int int7 = serializableNode4.rank;
        java.io.Serializable serializable8 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode10.rank = (byte) 100;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        serializableNode4.data = wildcardClass14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode4.parent;
        java.io.Serializable serializable17 = serializableNode4.data;
        serializableNode1.data = serializable17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode1.parent;
        java.io.Serializable serializable20 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializable17);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode13.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode18.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode42.data = (-1);
        int int47 = serializableNode42.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode49.parent;
        serializableNode49.rank = (byte) 10;
        serializableNode49.data = 10L;
        serializableNode42.parent = serializableNode49;
        serializableNode31.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode31.parent;
        serializableNode5.parent = serializableNode61;
        java.lang.Class<?> wildcardClass63 = serializableNode61.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass22);
        serializableNode7.data = wildcardClass22;
        java.io.Serializable serializable25 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode26 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        int int27 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        serializableNode22.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        serializableNode27.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        serializableNode69.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        serializableNode65.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable77 = serializableNode76.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode76.parent;
        int int79 = serializableNode76.rank;
        java.io.Serializable serializable80 = serializableNode76.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode82.parent;
        serializableNode82.rank = (byte) 100;
        java.lang.Class<?> wildcardClass86 = serializableNode82.getClass();
        serializableNode76.data = wildcardClass86;
        serializableNode73.parent = serializableNode76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass91 = serializableNode90.getClass();
        serializableNode76.data = wildcardClass91;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass91);
        serializableNode17.data = wildcardClass91;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass91);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        serializableNode3.rank = (-1);
        int int9 = serializableNode3.rank;
        serializableNode3.rank = 1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode8.parent;
        int int27 = serializableNode26.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        int int29 = serializableNode26.rank;
        java.lang.Class<?> wildcardClass30 = serializableNode26.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        java.lang.Class<?> wildcardClass15 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = serializableNode16.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode11.rank = (byte) 100;
        serializableNode11.data = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode24.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        serializableNode31.rank = (byte) 1;
        java.lang.Class<?> wildcardClass37 = serializableNode31.getClass();
        serializableNode24.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode24.parent;
        serializableNode24.rank = 100;
        serializableNode18.parent = serializableNode24;
        int int43 = serializableNode18.rank;
        serializableNode7.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        serializableNode48.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        int int53 = serializableNode52.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode57.parent;
        int int60 = serializableNode57.rank;
        java.io.Serializable serializable61 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode63.parent;
        serializableNode63.rank = (byte) 100;
        java.lang.Class<?> wildcardClass67 = serializableNode63.getClass();
        serializableNode57.data = wildcardClass67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode57.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass72 = serializableNode71.getClass();
        serializableNode69.data = wildcardClass72;
        serializableNode69.rank = (short) 100;
        serializableNode54.parent = serializableNode69;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode77.parent;
        java.io.Serializable serializable79 = serializableNode77.data;
        serializableNode18.data = serializable79;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertNotNull(serializable79);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode19.parent;
        java.io.Serializable serializable50 = serializableNode19.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        serializableNode14.rank = (byte) 1;
        int int20 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode14.parent;
        serializableNode14.rank = (byte) 0;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        java.io.Serializable serializable26 = serializableNode14.data;
        java.lang.Class<?> wildcardClass27 = serializableNode14.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        int int29 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode23.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        java.lang.Class<?> wildcardClass32 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        serializableNode5.data = wildcardClass32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        serializableNode38.rank = (short) 0;
        java.io.Serializable serializable51 = serializableNode38.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode21.data = (byte) 1;
        serializableNode21.rank = (short) 1;
        java.io.Serializable serializable29 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode21.parent;
        serializableNode21.rank = 52;
        int int33 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        java.io.Serializable serializable42 = serializableNode39.data;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        java.lang.Class<?> wildcardClass50 = serializableNode49.getClass();
        serializableNode39.data = wildcardClass50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode39.parent;
        serializableNode52.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode52.parent;
        int int56 = serializableNode52.rank;
        int int57 = serializableNode52.rank;
        serializableNode21.parent = serializableNode52;
        serializableNode5.parent = serializableNode21;
        serializableNode21.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + (byte) 1 + "'", serializable29, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 97 + "'", int56 == 97);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 97 + "'", int57 == 97);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode19.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode37.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        serializableNode5.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass21 = serializableNode15.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        serializableNode12.data = wildcardClass21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable14);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode23.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode27.parent;
        serializableNode27.rank = (byte) 10;
        int int35 = serializableNode27.rank;
        serializableNode23.parent = serializableNode27;
        int int37 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode39.parent = serializableNode44;
        int int48 = serializableNode39.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode39.parent;
        int int50 = serializableNode39.rank;
        serializableNode23.parent = serializableNode39;
        java.io.Serializable serializable52 = serializableNode23.data;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode64.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        serializableNode71.rank = (byte) 1;
        java.lang.Class<?> wildcardClass77 = serializableNode71.getClass();
        serializableNode64.data = wildcardClass77;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode64.parent;
        serializableNode64.rank = 100;
        java.lang.Class<?> wildcardClass82 = serializableNode64.getClass();
        serializableNode57.data = wildcardClass82;
        java.io.Serializable serializable84 = serializableNode57.data;
        java.lang.Class<?> wildcardClass85 = serializable84.getClass();
        serializableNode19.data = wildcardClass85;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(serializable84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable66 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode65.parent;
        serializableNode60.parent = serializableNode65;
        java.lang.Class<?> wildcardClass69 = serializableNode60.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass69);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        serializableNode14.parent = serializableNode71;
        java.io.Serializable serializable73 = serializableNode14.data;
        int int74 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int77 = serializableNode76.rank;
        int int78 = serializableNode76.rank;
        serializableNode76.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode76.parent;
        serializableNode81.rank = (byte) 0;
        java.lang.Class<?> wildcardClass84 = serializableNode81.getClass();
        serializableNode14.data = wildcardClass84;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = (byte) 10;
        int int21 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = null;
        serializableNode1.parent = serializableNode22;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode35.parent = serializableNode39;
        serializableNode35.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode35.parent = serializableNode44;
        java.io.Serializable serializable50 = serializableNode44.data;
        int int51 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        serializableNode54.rank = (short) -1;
        java.io.Serializable serializable61 = serializableNode54.data;
        int int62 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode54.parent;
        serializableNode52.parent = serializableNode63;
        java.lang.Class<?> wildcardClass65 = serializableNode52.getClass();
        serializableNode32.data = wildcardClass65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass65);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + (short) 100 + "'", serializable50, (short) 100);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.io.Serializable serializable19 = serializableNode16.data;
        java.io.Serializable serializable20 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode16.data = wildcardClass27;
        java.lang.Class<?> wildcardClass29 = serializableNode16.getClass();
        serializableNode10.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        int int38 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode10.parent = serializableNode42;
        serializableNode8.parent = serializableNode42;
        int int45 = serializableNode42.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode7.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode16.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode30 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode16);
        serializableNode13.parent = serializableNode16;
        java.io.Serializable serializable32 = serializableNode16.data;
        serializableNode7.data = serializable32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10.0f + "'", serializable14, 10.0f);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        int int44 = serializableNode34.rank;
        java.io.Serializable serializable45 = serializableNode34.data;
        java.lang.Class<?> wildcardClass46 = serializable45.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        serializableNode5.rank = (byte) 100;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 'a' + "'", serializable4, 'a');
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 'a' + "'", serializable6, 'a');
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        serializableNode11.rank = (short) -1;
        java.io.Serializable serializable18 = serializableNode11.data;
        serializableNode11.data = (byte) 0;
        serializableNode11.rank = 0;
        int int23 = serializableNode11.rank;
        serializableNode9.parent = serializableNode11;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode33.parent = serializableNode37;
        int int39 = serializableNode37.rank;
        serializableNode27.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        serializableNode27.parent = serializableNode42;
        serializableNode42.rank = (short) -1;
        java.io.Serializable serializable47 = serializableNode42.data;
        serializableNode5.parent = serializableNode42;
        java.io.Serializable serializable49 = serializableNode5.data;
        int int50 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) -1 + "'", serializable47, (short) -1);
        org.junit.Assert.assertNotNull(serializable49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode3.parent;
        int int6 = serializableNode3.rank;
        java.io.Serializable serializable7 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) 100;
        java.lang.Class<?> wildcardClass13 = serializableNode9.getClass();
        serializableNode3.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        serializableNode21.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        serializableNode21.parent = serializableNode28;
        serializableNode3.parent = serializableNode21;
        serializableNode1.parent = serializableNode3;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode36.rank = (byte) 10;
        java.io.Serializable serializable39 = serializableNode36.data;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        int int27 = serializableNode16.rank;
        serializableNode16.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode31.parent;
        int int37 = serializableNode36.rank;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode16.parent = serializableNode39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        java.io.Serializable serializable49 = serializableNode46.data;
        java.io.Serializable serializable50 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.lang.Class<?> wildcardClass57 = serializableNode56.getClass();
        serializableNode46.data = wildcardClass57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        java.io.Serializable serializable64 = serializableNode63.data;
        serializableNode63.rank = (short) -1;
        java.lang.Class<?> wildcardClass67 = serializableNode63.getClass();
        serializableNode59.data = wildcardClass67;
        java.lang.Class<?> wildcardClass69 = serializableNode59.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass69);
        java.io.Serializable serializable71 = serializableNode70.data;
        java.io.Serializable serializable72 = serializableNode70.data;
        serializableNode16.data = serializable72;
        java.io.Serializable serializable74 = serializableNode16.data;
        java.lang.Class<?> wildcardClass75 = serializableNode16.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(serializable71);
        org.junit.Assert.assertNotNull(serializable72);
        org.junit.Assert.assertNotNull(serializable74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        java.io.Serializable serializable27 = serializableNode14.data;
        int int28 = serializableNode14.rank;
        java.lang.Class<?> wildcardClass29 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = 'a';
        int int37 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode32.parent;
        serializableNode30.parent = serializableNode38;
        serializableNode30.rank = 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 97 + "'", int37 == 97);
        org.junit.Assert.assertNotNull(serializableNode38);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        int int17 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        java.lang.Class<?> wildcardClass19 = serializableNode18.getClass();
        serializableNode1.data = wildcardClass19;
        serializableNode1.data = 100L;
        serializableNode1.rank = 1;
        java.lang.Class<?> wildcardClass25 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass25);
        int int27 = serializableNode26.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        java.io.Serializable serializable35 = serializableNode32.data;
        java.io.Serializable serializable36 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode42.getClass();
        serializableNode32.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        serializableNode49.rank = (short) -1;
        java.lang.Class<?> wildcardClass53 = serializableNode49.getClass();
        serializableNode45.data = wildcardClass53;
        serializableNode45.rank = 1;
        serializableNode22.parent = serializableNode45;
        int int58 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode26.parent = serializableNode30;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (-1);
        int int35 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        serializableNode37.data = 10L;
        serializableNode30.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int52 = serializableNode51.rank;
        int int53 = serializableNode51.rank;
        java.io.Serializable serializable54 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode51.parent;
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        java.io.Serializable serializable58 = serializableNode55.data;
        java.io.Serializable serializable59 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        java.lang.Class<?> wildcardClass66 = serializableNode65.getClass();
        serializableNode55.data = wildcardClass66;
        serializableNode19.parent = serializableNode55;
        int int69 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode19.parent;
        serializableNode70.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode70.parent;
        int int74 = serializableNode73.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        serializableNode10.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode34.data = wildcardClass37;
        int int39 = serializableNode34.rank;
        int int40 = serializableNode34.rank;
        serializableNode10.parent = serializableNode34;
        int int42 = serializableNode34.rank;
        java.io.Serializable serializable43 = serializableNode34.data;
        java.io.Serializable serializable44 = serializableNode34.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(serializable43);
        org.junit.Assert.assertNotNull(serializable44);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        int int13 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode14.parent;
        int int16 = serializableNode14.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        int int5 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode2.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(serializableNode6);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        serializableNode1.data = (short) 1;
        int int25 = serializableNode1.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        java.io.Serializable serializable26 = null;
        serializableNode17.data = serializable26;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 100;
        serializableNode14.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode35.rank = (byte) 100;
        java.lang.Class<?> wildcardClass39 = serializableNode35.getClass();
        serializableNode29.data = wildcardClass39;
        serializableNode25.data = wildcardClass39;
        serializableNode18.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode53.parent;
        serializableNode48.parent = serializableNode53;
        java.io.Serializable serializable64 = serializableNode48.data;
        serializableNode18.parent = serializableNode48;
        serializableNode6.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode6.parent;
        serializableNode67.rank = 35;
        serializableNode67.rank = (short) 0;
        java.lang.Class<?> wildcardClass72 = serializableNode67.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        int int20 = serializableNode17.rank;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        serializableNode23.rank = (byte) 100;
        java.lang.Class<?> wildcardClass27 = serializableNode23.getClass();
        serializableNode17.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass32 = serializableNode31.getClass();
        serializableNode29.data = wildcardClass32;
        serializableNode29.rank = (short) 100;
        java.io.Serializable serializable36 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable36);
        serializableNode15.data = serializable36;
        serializableNode15.rank = 32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializable36);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        serializableNode14.parent = serializableNode19;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        java.io.Serializable serializable26 = serializableNode14.data;
        java.lang.Class<?> wildcardClass27 = serializableNode14.getClass();
        serializableNode1.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        serializableNode8.parent = serializableNode23;
        int int25 = serializableNode8.rank;
        serializableNode8.rank = (short) 100;
        int int28 = serializableNode8.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode8.parent;
        int int27 = serializableNode26.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        java.io.Serializable serializable37 = serializableNode34.data;
        java.io.Serializable serializable38 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        serializableNode34.data = wildcardClass45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass48 = serializableNode34.getClass();
        serializableNode26.data = wildcardClass48;
        java.io.Serializable serializable50 = serializableNode26.data;
        java.io.Serializable serializable51 = serializableNode26.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializable50);
        org.junit.Assert.assertNotNull(serializable51);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass11 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode14.parent;
        serializableNode12.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode30.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        int int48 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode39.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        java.io.Serializable serializable58 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode59.parent = serializableNode63;
        int int65 = serializableNode63.rank;
        serializableNode63.data = (-1);
        int int68 = serializableNode63.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode70.parent;
        serializableNode70.rank = (byte) 10;
        serializableNode70.data = 10L;
        serializableNode63.parent = serializableNode70;
        serializableNode52.parent = serializableNode70;
        serializableNode30.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode52.parent;
        java.lang.Class<?> wildcardClass84 = serializableNode83.getClass();
        serializableNode25.data = wildcardClass84;
        java.io.Serializable serializable86 = serializableNode25.data;
        java.io.Serializable serializable87 = serializableNode25.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(serializable86);
        org.junit.Assert.assertNotNull(serializable87);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode37.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode41.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        serializableNode37.parent = serializableNode50;
        serializableNode34.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode59 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode54);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = 'a';
        java.lang.Class<?> wildcardClass72 = serializableNode67.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        serializableNode61.data = wildcardClass72;
        serializableNode54.data = wildcardClass72;
        serializableNode37.data = wildcardClass72;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode37.parent;
        int int78 = serializableNode37.rank;
        serializableNode18.parent = serializableNode37;
        serializableNode18.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode18.parent;
        java.io.Serializable serializable83 = serializableNode18.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        serializableNode38.rank = (short) -1;
        serializableNode28.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode38.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        serializableNode6.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = null;
        serializableNode9.parent = serializableNode11;
        int int13 = serializableNode9.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode5.parent = serializableNode22;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable4 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + "" + "'", serializable4, "");
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.rank = (byte) 1;
        int int19 = serializableNode13.rank;
        serializableNode13.rank = '#';
        java.io.Serializable serializable22 = serializableNode13.data;
        serializableNode13.rank = 0;
        serializableNode10.parent = serializableNode13;
        int int26 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode10.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass33 = serializableNode10.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass11);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        serializableNode17.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode21.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        serializableNode17.parent = serializableNode30;
        serializableNode14.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode39 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        serializableNode47.rank = 'a';
        java.lang.Class<?> wildcardClass52 = serializableNode47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode41.data = wildcardClass52;
        serializableNode34.data = wildcardClass52;
        serializableNode17.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        serializableNode65.rank = (byte) 1;
        serializableNode65.data = 10.0d;
        serializableNode63.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode63.parent;
        int int75 = serializableNode63.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        java.io.Serializable serializable82 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode81.parent;
        java.io.Serializable serializable84 = serializableNode81.data;
        java.io.Serializable serializable85 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int88 = serializableNode87.rank;
        int int89 = serializableNode87.rank;
        java.io.Serializable serializable90 = serializableNode87.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = serializableNode87.parent;
        java.lang.Class<?> wildcardClass92 = serializableNode91.getClass();
        serializableNode81.data = wildcardClass92;
        java.io.Serializable serializable94 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable94);
        serializableNode63.parent = serializableNode95;
        serializableNode17.parent = serializableNode95;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode98 = serializableNode95.parent;
        java.lang.Class<?> wildcardClass99 = serializableNode95.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + serializable90 + "' != '" + 10L + "'", serializable90, 10L);
        org.junit.Assert.assertNotNull(serializableNode91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(serializable94);
        org.junit.Assert.assertNotNull(serializableNode98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        int int13 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode16.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode20.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode16.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode16.parent;
        serializableNode16.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        serializableNode43.rank = 'a';
        java.lang.Class<?> wildcardClass48 = serializableNode43.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass48);
        serializableNode37.data = wildcardClass48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        serializableNode57.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        serializableNode57.parent = serializableNode64;
        int int69 = serializableNode57.rank;
        serializableNode57.rank = 100;
        serializableNode51.parent = serializableNode57;
        java.lang.Class<?> wildcardClass73 = serializableNode51.getClass();
        serializableNode1.data = wildcardClass73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        serializableNode77.rank = (byte) 1;
        int int83 = serializableNode77.rank;
        int int84 = serializableNode77.rank;
        java.io.Serializable serializable85 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        java.lang.Class<?> wildcardClass88 = serializableNode87.getClass();
        serializableNode77.data = wildcardClass88;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass88);
        serializableNode75.parent = serializableNode90;
        int int92 = serializableNode75.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertEquals("'" + serializable85 + "' != '" + 10L + "'", serializable85, 10L);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        java.io.Serializable serializable14 = serializableNode11.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode13.rank = 0;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode19.parent = serializableNode23;
        serializableNode19.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        serializableNode28.data = (short) 100;
        serializableNode19.parent = serializableNode28;
        java.io.Serializable serializable34 = serializableNode28.data;
        int int35 = serializableNode28.rank;
        serializableNode28.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode28.parent;
        int int39 = serializableNode38.rank;
        serializableNode1.parent = serializableNode38;
        int int41 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10.0f + "'", serializable16, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + (short) 100 + "'", serializable34, (short) 100);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode30.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass35);
        serializableNode1.data = wildcardClass35;
        serializableNode1.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        int int45 = serializableNode42.rank;
        java.io.Serializable serializable46 = serializableNode42.data;
        java.io.Serializable serializable47 = serializableNode42.data;
        int int48 = serializableNode42.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        serializableNode50.parent = serializableNode55;
        java.lang.Class<?> wildcardClass59 = serializableNode50.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass59);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass59);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int64 = serializableNode63.rank;
        int int65 = serializableNode63.rank;
        java.io.Serializable serializable66 = serializableNode63.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode63.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable70 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode69.parent;
        serializableNode67.parent = serializableNode71;
        int int73 = serializableNode67.rank;
        serializableNode67.rank = 'a';
        java.lang.Class<?> wildcardClass76 = serializableNode67.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode61.data = wildcardClass76;
        serializableNode42.data = wildcardClass76;
        serializableNode1.parent = serializableNode42;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode6.parent;
        serializableNode18.data = (byte) -1;
        int int21 = serializableNode18.rank;
        java.io.Serializable serializable22 = serializableNode18.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + (byte) -1 + "'", serializable22, (byte) -1);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode8.parent;
        serializableNode8.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode8.parent;
        int int22 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode24.parent = serializableNode28;
        serializableNode24.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        serializableNode33.data = (short) 100;
        serializableNode24.parent = serializableNode33;
        java.io.Serializable serializable39 = serializableNode33.data;
        serializableNode33.rank = (short) 1;
        int int42 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        serializableNode48.data = (byte) -1;
        serializableNode33.parent = serializableNode48;
        serializableNode8.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode57.rank = (byte) 100;
        serializableNode57.data = 'a';
        java.lang.Class<?> wildcardClass62 = serializableNode57.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass62);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass62);
        serializableNode64.rank = 0;
        java.lang.Class<?> wildcardClass67 = serializableNode64.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        serializableNode8.data = wildcardClass67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass67);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + (short) 100 + "'", serializable39, (short) 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        int int32 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode36.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        serializableNode40.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        serializableNode36.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        int int55 = serializableNode52.rank;
        java.io.Serializable serializable56 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        serializableNode58.rank = (byte) 100;
        java.lang.Class<?> wildcardClass62 = serializableNode58.getClass();
        serializableNode52.data = wildcardClass62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode52.parent;
        java.io.Serializable serializable65 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode52.parent;
        serializableNode36.parent = serializableNode66;
        serializableNode33.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable77 = serializableNode76.data;
        int int78 = serializableNode76.rank;
        serializableNode76.rank = 'a';
        java.lang.Class<?> wildcardClass81 = serializableNode76.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass81);
        serializableNode70.data = wildcardClass81;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode84.parent;
        serializableNode36.parent = serializableNode85;
        java.lang.Class<?> wildcardClass87 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass87);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializable65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(serializableNode84);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        serializableNode31.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode15.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        serializableNode15.parent = serializableNode22;
        int int27 = serializableNode15.rank;
        java.io.Serializable serializable28 = serializableNode15.data;
        serializableNode9.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass31 = serializableNode30.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode34.parent;
        serializableNode35.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode39.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        serializableNode35.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode35.parent;
        serializableNode50.rank = ' ';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode59 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode54);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int63 = serializableNode62.rank;
        java.lang.Class<?> wildcardClass64 = serializableNode62.getClass();
        serializableNode54.data = wildcardClass64;
        serializableNode50.parent = serializableNode54;
        serializableNode32.parent = serializableNode54;
        java.io.Serializable serializable68 = serializableNode32.data;
        int int69 = serializableNode32.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(serializable68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode1.parent = serializableNode24;
        java.io.Serializable serializable28 = serializableNode24.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode1.parent = serializableNode11;
        int int13 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode16.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode20.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode16.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode16.parent;
        serializableNode16.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        int int45 = serializableNode43.rank;
        serializableNode43.rank = 'a';
        java.lang.Class<?> wildcardClass48 = serializableNode43.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass48);
        serializableNode37.data = wildcardClass48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        serializableNode57.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        serializableNode57.parent = serializableNode64;
        int int69 = serializableNode57.rank;
        serializableNode57.rank = 100;
        serializableNode51.parent = serializableNode57;
        java.lang.Class<?> wildcardClass73 = serializableNode51.getClass();
        serializableNode1.data = wildcardClass73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        java.lang.Class<?> wildcardClass17 = serializableNode9.getClass();
        serializableNode5.data = wildcardClass17;
        serializableNode5.data = 100.0d;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode26.data;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode26.data = wildcardClass37;
        serializableNode26.rank = 97;
        serializableNode26.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode26.parent;
        int int44 = serializableNode43.rank;
        serializableNode5.parent = serializableNode43;
        java.lang.Class<?> wildcardClass46 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        int int21 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        java.io.Serializable serializable39 = serializableNode36.data;
        java.io.Serializable serializable40 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        java.lang.Class<?> wildcardClass47 = serializableNode46.getClass();
        serializableNode36.data = wildcardClass47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode36.parent;
        serializableNode27.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        java.io.Serializable serializable59 = serializableNode56.data;
        java.io.Serializable serializable60 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int63 = serializableNode62.rank;
        int int64 = serializableNode62.rank;
        java.io.Serializable serializable65 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode62.parent;
        java.lang.Class<?> wildcardClass67 = serializableNode66.getClass();
        serializableNode56.data = wildcardClass67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        java.io.Serializable serializable74 = serializableNode73.data;
        serializableNode73.rank = (short) -1;
        java.lang.Class<?> wildcardClass77 = serializableNode73.getClass();
        serializableNode69.data = wildcardClass77;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass77);
        serializableNode27.parent = serializableNode79;
        int int81 = serializableNode27.rank;
        int int82 = serializableNode27.rank;
        serializableNode10.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(serializableNode84);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        int int28 = serializableNode25.rank;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode31.rank = (byte) 100;
        java.lang.Class<?> wildcardClass35 = serializableNode31.getClass();
        serializableNode25.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode25.parent;
        java.io.Serializable serializable38 = serializableNode25.data;
        serializableNode22.data = serializable38;
        serializableNode6.parent = serializableNode22;
        java.io.Serializable serializable41 = serializableNode22.data;
        java.lang.Class<?> wildcardClass42 = serializableNode22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10.0f + "'", serializable23, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        int int9 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode11.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        serializableNode11.parent = serializableNode15;
        java.io.Serializable serializable19 = serializableNode11.data;
        java.io.Serializable serializable20 = serializableNode11.data;
        java.lang.Class<?> wildcardClass21 = serializable20.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable20);
        serializableNode8.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode29.data;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode39.getClass();
        serializableNode29.data = wildcardClass40;
        serializableNode29.rank = 97;
        serializableNode29.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode29.parent;
        int int47 = serializableNode46.rank;
        java.io.Serializable serializable48 = serializableNode46.data;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode8.data = serializable49;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10.0f + "'", serializable19, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10.0f + "'", serializable20, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(serializable48);
        org.junit.Assert.assertNotNull(serializable49);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        int int62 = serializableNode52.rank;
        serializableNode40.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        int int68 = serializableNode66.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode66.parent = serializableNode70;
        java.lang.Class<?> wildcardClass72 = serializableNode70.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass72);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode73.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode75.parent;
        serializableNode52.parent = serializableNode75;
        java.lang.Class<?> wildcardClass78 = serializableNode52.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        int int6 = serializableNode1.rank;
        serializableNode1.rank = (short) 10;
        java.io.Serializable serializable9 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        java.io.Serializable serializable8 = serializableNode1.data;
        serializableNode1.rank = (short) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode32.rank = 52;
        serializableNode32.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode42.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable56 = serializableNode55.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode55.parent;
        serializableNode53.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        java.io.Serializable serializable63 = serializableNode60.data;
        serializableNode60.rank = (byte) 1;
        java.lang.Class<?> wildcardClass66 = serializableNode60.getClass();
        serializableNode53.data = wildcardClass66;
        serializableNode53.rank = 'a';
        int int70 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode53.parent;
        serializableNode46.parent = serializableNode71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        int int74 = serializableNode71.rank;
        serializableNode32.parent = serializableNode71;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        int int21 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass22 = serializableNode17.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass22);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        int int16 = serializableNode13.rank;
        java.io.Serializable serializable17 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode19.rank = (byte) 100;
        java.lang.Class<?> wildcardClass23 = serializableNode19.getClass();
        serializableNode13.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode13.parent;
        serializableNode1.parent = serializableNode25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode29.parent;
        serializableNode29.rank = (byte) 10;
        int int37 = serializableNode29.rank;
        java.lang.Class<?> wildcardClass38 = serializableNode29.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode1.parent = serializableNode40;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        java.io.Serializable serializable45 = serializableNode19.data;
        java.lang.Class<?> wildcardClass46 = serializableNode19.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 1 + "'", serializable45, 1);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        java.io.Serializable serializable2 = serializableNode1.data;
        java.io.Serializable serializable3 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 100L + "'", serializable2, 100L);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 100L + "'", serializable3, 100L);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        serializableNode9.rank = (byte) 10;
        int int17 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass18 = serializableNode9.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        int int29 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        int int36 = serializableNode33.rank;
        java.io.Serializable serializable37 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode39.parent;
        serializableNode39.rank = (byte) 100;
        java.lang.Class<?> wildcardClass43 = serializableNode39.getClass();
        serializableNode33.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass48 = serializableNode47.getClass();
        serializableNode45.data = wildcardClass48;
        serializableNode45.rank = (short) 100;
        serializableNode30.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode53.parent;
        serializableNode53.rank = (byte) -1;
        java.io.Serializable serializable57 = serializableNode53.data;
        serializableNode5.data = serializable57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass60 = serializableNode5.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializable57);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        serializableNode61.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        serializableNode57.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable69 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        int int71 = serializableNode68.rank;
        java.io.Serializable serializable72 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        serializableNode74.rank = (byte) 100;
        java.lang.Class<?> wildcardClass78 = serializableNode74.getClass();
        serializableNode68.data = wildcardClass78;
        serializableNode65.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass83 = serializableNode82.getClass();
        serializableNode68.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        serializableNode38.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int89 = serializableNode88.rank;
        int int90 = serializableNode88.rank;
        java.io.Serializable serializable91 = serializableNode88.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable94 = serializableNode93.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = serializableNode93.parent;
        serializableNode88.parent = serializableNode93;
        java.lang.Class<?> wildcardClass97 = serializableNode88.getClass();
        serializableNode38.data = wildcardClass97;
        int int99 = serializableNode38.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertEquals("'" + serializable91 + "' != '" + 10L + "'", serializable91, 10L);
        org.junit.Assert.assertEquals("'" + serializable94 + "' != '" + 10L + "'", serializable94, 10L);
        org.junit.Assert.assertNotNull(serializableNode95);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = null;
        serializableNode10.parent = serializableNode17;
        serializableNode10.rank = 32;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode12 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode7.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        java.lang.Class<?> wildcardClass15 = serializableNode13.getClass();
        serializableNode1.data = wildcardClass15;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode20.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode24.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        serializableNode20.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        serializableNode16.data = wildcardClass38;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        java.io.Serializable serializable16 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode25.parent = serializableNode29;
        serializableNode29.rank = 0;
        serializableNode29.data = 100;
        serializableNode23.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode42 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode37);
        serializableNode29.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        serializableNode54.rank = (short) -1;
        java.io.Serializable serializable61 = serializableNode54.data;
        int int62 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode54.parent;
        serializableNode49.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode49.parent;
        java.lang.Class<?> wildcardClass66 = serializableNode65.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass66);
        serializableNode29.parent = serializableNode67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable76 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode75.parent;
        serializableNode70.parent = serializableNode75;
        serializableNode70.data = true;
        serializableNode70.rank = 0;
        int int83 = serializableNode70.rank;
        serializableNode67.parent = serializableNode70;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int87 = serializableNode86.rank;
        int int88 = serializableNode86.rank;
        java.io.Serializable serializable89 = serializableNode86.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = serializableNode86.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = serializableNode86.parent;
        java.lang.Class<?> wildcardClass92 = serializableNode86.getClass();
        serializableNode70.data = wildcardClass92;
        serializableNode11.data = wildcardClass92;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode95 = serializableNode11.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + serializable89 + "' != '" + 10L + "'", serializable89, 10L);
        org.junit.Assert.assertNotNull(serializableNode90);
        org.junit.Assert.assertNotNull(serializableNode91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(serializableNode95);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable9 = serializableNode1.data;
        java.io.Serializable serializable10 = serializableNode1.data;
        int int11 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        serializableNode16.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        int int21 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass31 = serializableNode25.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass31);
        int int33 = serializableNode32.rank;
        serializableNode22.parent = serializableNode32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable37 = serializableNode36.data;
        int int38 = serializableNode36.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode36.parent = serializableNode40;
        serializableNode36.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        serializableNode45.data = (short) 100;
        serializableNode36.parent = serializableNode45;
        java.io.Serializable serializable51 = serializableNode45.data;
        int int52 = serializableNode45.rank;
        serializableNode45.rank = 10;
        java.io.Serializable serializable55 = serializableNode45.data;
        serializableNode45.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode45.parent;
        java.lang.Class<?> wildcardClass59 = serializableNode58.getClass();
        serializableNode32.data = wildcardClass59;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode32.parent;
        serializableNode12.parent = serializableNode61;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10.0f + "'", serializable9, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10.0f + "'", serializable10, 10.0f);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + (short) 100 + "'", serializable51, (short) 100);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + (short) 100 + "'", serializable55, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(serializableNode61);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode23.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode27.parent;
        serializableNode27.rank = (byte) 10;
        int int35 = serializableNode27.rank;
        serializableNode23.parent = serializableNode27;
        int int37 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode44.parent;
        serializableNode39.parent = serializableNode44;
        int int48 = serializableNode39.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode39.parent;
        int int50 = serializableNode39.rank;
        serializableNode23.parent = serializableNode39;
        java.io.Serializable serializable52 = serializableNode23.data;
        serializableNode19.parent = serializableNode23;
        java.io.Serializable serializable54 = serializableNode19.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializable54);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode14 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        serializableNode6.parent = serializableNode9;
        serializableNode6.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        java.io.Serializable serializable28 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode47.rank = (byte) 100;
        java.lang.Class<?> wildcardClass51 = serializableNode47.getClass();
        serializableNode41.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode41.parent;
        java.io.Serializable serializable54 = serializableNode41.data;
        serializableNode39.data = serializable54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        java.io.Serializable serializable64 = serializableNode61.data;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode67.parent;
        java.lang.Class<?> wildcardClass72 = serializableNode71.getClass();
        serializableNode61.data = wildcardClass72;
        serializableNode61.rank = 97;
        java.lang.Class<?> wildcardClass76 = serializableNode61.getClass();
        serializableNode39.data = wildcardClass76;
        serializableNode26.data = wildcardClass76;
        serializableNode6.parent = serializableNode26;
        java.io.Serializable serializable80 = serializableNode26.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializable54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializable80);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        int int9 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.lang.Class<?> wildcardClass29 = serializableNode28.getClass();
        serializableNode5.data = wildcardClass29;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        serializableNode22.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        int int28 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        serializableNode18.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode26.data;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode26.data = wildcardClass37;
        java.io.Serializable serializable39 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable39);
        serializableNode40.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        java.io.Serializable serializable51 = serializableNode48.data;
        java.io.Serializable serializable52 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode54.parent;
        java.lang.Class<?> wildcardClass59 = serializableNode58.getClass();
        serializableNode48.data = wildcardClass59;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode48.parent;
        serializableNode61.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode61.parent;
        serializableNode40.parent = serializableNode61;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        serializableNode67.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode72 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode67);
        java.lang.Class<?> wildcardClass73 = serializableNode67.getClass();
        serializableNode40.data = wildcardClass73;
        serializableNode18.data = wildcardClass73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass73);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializable39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode16.parent = serializableNode21;
        serializableNode16.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        serializableNode30.rank = (short) -1;
        int int34 = serializableNode30.rank;
        serializableNode16.parent = serializableNode30;
        serializableNode16.rank = (byte) 10;
        serializableNode10.parent = serializableNode16;
        java.lang.Class<?> wildcardClass39 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode34.parent;
        java.lang.Class<?> wildcardClass45 = serializableNode44.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        serializableNode4.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode12.rank = (byte) 100;
        serializableNode4.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        serializableNode17.rank = (short) -1;
        java.io.Serializable serializable24 = serializableNode17.data;
        int int25 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode17.parent = serializableNode27;
        serializableNode4.parent = serializableNode17;
        java.io.Serializable serializable30 = serializableNode17.data;
        int int31 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass32 = serializableNode17.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        serializableNode35.rank = 'a';
        int int40 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode35.parent;
        serializableNode33.parent = serializableNode41;
        serializableNode1.parent = serializableNode41;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 97 + "'", int40 == 97);
        org.junit.Assert.assertNotNull(serializableNode41);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        java.io.Serializable serializable36 = serializableNode9.data;
        serializableNode9.rank = ' ';
        int int39 = serializableNode9.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode12.parent = serializableNode20;
        int int26 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass27 = serializableNode12.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        int int22 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode33.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        serializableNode40.rank = (byte) 1;
        java.lang.Class<?> wildcardClass46 = serializableNode40.getClass();
        serializableNode33.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode33.parent;
        serializableNode33.rank = 100;
        java.lang.Class<?> wildcardClass51 = serializableNode33.getClass();
        serializableNode26.data = wildcardClass51;
        java.io.Serializable serializable53 = serializableNode26.data;
        serializableNode5.data = serializable53;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializable53);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass4 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass4);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = null;
        serializableNode5.parent = serializableNode7;
        serializableNode5.rank = (byte) 100;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(serializable6);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        java.io.Serializable serializable27 = serializableNode9.data;
        java.io.Serializable serializable28 = serializableNode9.data;
        int int29 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable37 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        serializableNode31.parent = serializableNode36;
        int int40 = serializableNode31.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode31.parent;
        java.io.Serializable serializable42 = null;
        serializableNode41.data = serializable42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        serializableNode45.data = (byte) 1;
        int int51 = serializableNode45.rank;
        int int52 = serializableNode45.rank;
        java.lang.Class<?> wildcardClass53 = serializableNode45.getClass();
        serializableNode41.data = wildcardClass53;
        serializableNode9.data = wildcardClass53;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + (-1) + "'", serializable27, (-1));
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (-1) + "'", serializable28, (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        serializableNode1.data = 10;
        serializableNode1.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode23 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode18);
        java.lang.Class<?> wildcardClass24 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        serializableNode1.data = wildcardClass24;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode6.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        serializableNode10.rank = (byte) 10;
        serializableNode10.data = 10L;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode21.parent = serializableNode25;
        serializableNode21.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        serializableNode30.data = (short) 100;
        serializableNode21.parent = serializableNode30;
        java.io.Serializable serializable36 = serializableNode30.data;
        int int37 = serializableNode30.rank;
        serializableNode30.rank = 10;
        java.io.Serializable serializable40 = serializableNode30.data;
        java.lang.Class<?> wildcardClass41 = serializable40.getClass();
        serializableNode10.data = serializable40;
        serializableNode10.rank = (short) 100;
        serializableNode6.parent = serializableNode10;
        java.io.Serializable serializable46 = serializableNode6.data;
        java.io.Serializable serializable47 = serializableNode6.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + (short) 100 + "'", serializable36, (short) 100);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + (short) 100 + "'", serializable40, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode11.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode11.parent = serializableNode24;
        serializableNode8.parent = serializableNode11;
        int int27 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode8.parent;
        serializableNode28.rank = (short) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode16 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode11);
        java.io.Serializable serializable17 = serializableNode11.data;
        java.lang.Class<?> wildcardClass18 = serializableNode11.getClass();
        serializableNode6.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        serializableNode24.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        serializableNode28.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode24.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode39.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass40);
        serializableNode21.data = wildcardClass40;
        java.io.Serializable serializable43 = serializableNode21.data;
        java.lang.Class<?> wildcardClass44 = serializable43.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializable43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        java.lang.Class<?> wildcardClass28 = serializableNode18.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        java.io.Serializable serializable30 = null;
        serializableNode29.data = serializable30;
        int int32 = serializableNode29.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        java.io.Serializable serializable10 = serializableNode8.data;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        java.io.Serializable serializable29 = serializableNode26.data;
        java.io.Serializable serializable30 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass37 = serializableNode36.getClass();
        serializableNode26.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode26.parent;
        serializableNode17.parent = serializableNode26;
        java.lang.Class<?> wildcardClass41 = serializableNode26.getClass();
        serializableNode8.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        serializableNode1.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode46.parent;
        java.io.Serializable serializable52 = serializableNode51.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode54.parent;
        java.io.Serializable serializable59 = serializableNode58.data;
        int int60 = serializableNode58.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode51.parent = serializableNode64;
        serializableNode64.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode64);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int72 = serializableNode71.rank;
        java.lang.Class<?> wildcardClass73 = serializableNode71.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass73);
        java.io.Serializable serializable75 = serializableNode74.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable75);
        java.lang.Class<?> wildcardClass77 = serializable75.getClass();
        serializableNode64.data = wildcardClass77;
        serializableNode1.data = wildcardClass77;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(serializable75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        serializableNode10.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        java.lang.Class<?> wildcardClass23 = serializableNode17.getClass();
        serializableNode10.data = wildcardClass23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode10.parent;
        serializableNode10.rank = 100;
        java.lang.Class<?> wildcardClass28 = serializableNode10.getClass();
        serializableNode3.data = wildcardClass28;
        java.io.Serializable serializable30 = serializableNode3.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable30);
        java.io.Serializable serializable32 = serializableNode31.data;
        java.io.Serializable serializable33 = serializableNode31.data;
        serializableNode31.rank = (short) 10;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializable30);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertNotNull(serializable33);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        serializableNode8.rank = 'a';
        java.lang.Class<?> wildcardClass13 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode15.rank = ' ';
        java.io.Serializable serializable18 = serializableNode15.data;
        serializableNode6.data = serializable18;
        java.io.Serializable serializable20 = serializableNode6.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        java.io.Serializable serializable35 = serializableNode22.data;
        serializableNode20.data = serializable35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        java.io.Serializable serializable45 = serializableNode42.data;
        java.io.Serializable serializable46 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.lang.Class<?> wildcardClass53 = serializableNode52.getClass();
        serializableNode42.data = wildcardClass53;
        serializableNode42.rank = 97;
        java.lang.Class<?> wildcardClass57 = serializableNode42.getClass();
        serializableNode20.data = wildcardClass57;
        serializableNode7.data = wildcardClass57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        serializableNode61.parent = serializableNode66;
        int int70 = serializableNode61.rank;
        java.lang.Class<?> wildcardClass71 = serializableNode61.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass71);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass71);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int76 = serializableNode75.rank;
        int int77 = serializableNode75.rank;
        java.io.Serializable serializable78 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode75.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = serializableNode75.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable83 = serializableNode82.data;
        int int84 = serializableNode82.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode82.parent = serializableNode86;
        serializableNode80.parent = serializableNode82;
        int int89 = serializableNode80.rank;
        serializableNode80.data = ' ';
        serializableNode73.parent = serializableNode80;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = serializableNode80.parent;
        serializableNode7.parent = serializableNode80;
        serializableNode80.rank = 32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializable35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertNotNull(serializableNode80);
        org.junit.Assert.assertEquals("'" + serializable83 + "' != '" + 10L + "'", serializable83, 10L);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(serializableNode93);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        serializableNode16.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        int int20 = serializableNode10.rank;
        serializableNode10.rank = (byte) 10;
        java.lang.Class<?> wildcardClass23 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        serializableNode4.rank = 52;
        int int22 = serializableNode4.rank;
        java.lang.Class<?> wildcardClass23 = serializableNode4.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        serializableNode1.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        serializableNode19.rank = 'a';
        int int24 = serializableNode19.rank;
        java.lang.Class<?> wildcardClass25 = serializableNode19.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass25);
        serializableNode1.parent = serializableNode26;
        java.io.Serializable serializable28 = serializableNode1.data;
        serializableNode1.rank = (-1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializable28);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode10.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        serializableNode19.rank = 10;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        serializableNode19.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode19.parent;
        serializableNode10.parent = serializableNode19;
        java.lang.Class<?> wildcardClass34 = serializableNode19.getClass();
        serializableNode1.data = wildcardClass34;
        java.io.Serializable serializable36 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass27);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode12.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass37);
        serializableNode12.data = wildcardClass37;
        java.io.Serializable serializable40 = serializableNode12.data;
        serializableNode12.rank = 100;
        serializableNode1.parent = serializableNode12;
        int int44 = serializableNode12.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializable40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode10.parent;
        int int21 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        java.lang.Class<?> wildcardClass27 = serializable26.getClass();
        serializableNode22.data = wildcardClass27;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 'a' + "'", serializable26, 'a');
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        java.io.Serializable serializable17 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode5.parent = serializableNode20;
        serializableNode20.rank = (-1);
        java.io.Serializable serializable25 = serializableNode20.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 10 + "'", serializable21, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (byte) 10 + "'", serializable25, (byte) 10);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        serializableNode9.rank = (byte) 1;
        serializableNode9.data = 10.0d;
        serializableNode9.rank = (byte) 100;
        serializableNode9.rank = (byte) 10;
        serializableNode9.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode38.parent;
        serializableNode36.parent = serializableNode40;
        int int42 = serializableNode40.rank;
        serializableNode30.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode30.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        int int52 = serializableNode49.rank;
        serializableNode30.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        serializableNode55.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable67 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode66.parent;
        int int69 = serializableNode66.rank;
        java.io.Serializable serializable70 = serializableNode66.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode72.parent;
        serializableNode72.rank = (byte) 100;
        java.lang.Class<?> wildcardClass76 = serializableNode72.getClass();
        serializableNode66.data = wildcardClass76;
        serializableNode62.data = wildcardClass76;
        serializableNode55.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode49.data = wildcardClass76;
        serializableNode9.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode1.data = wildcardClass76;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        int int28 = serializableNode25.rank;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode31.rank = (byte) 100;
        java.lang.Class<?> wildcardClass35 = serializableNode31.getClass();
        serializableNode25.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode25.parent;
        java.io.Serializable serializable38 = serializableNode25.data;
        serializableNode22.data = serializable38;
        serializableNode6.parent = serializableNode22;
        java.io.Serializable serializable41 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode22.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10.0f + "'", serializable23, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertNotNull(serializable41);
        org.junit.Assert.assertNotNull(serializableNode42);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode14.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode27);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>> strComparableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Comparable<java.lang.String>>((java.lang.Comparable<java.lang.String>) "");
        java.lang.Class<?> wildcardClass2 = strComparableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass12 = serializableNode10.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode5 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10.0f + "'", serializable4, 10.0f);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        int int32 = serializableNode29.rank;
        serializableNode29.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode44.parent = serializableNode48;
        int int50 = serializableNode48.rank;
        serializableNode48.rank = (byte) 0;
        serializableNode48.rank = (byte) 1;
        int int55 = serializableNode48.rank;
        java.lang.Class<?> wildcardClass56 = serializableNode48.getClass();
        serializableNode37.data = wildcardClass56;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        int int18 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode20.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        serializableNode20.data = wildcardClass42;
        serializableNode6.data = wildcardClass42;
        java.io.Serializable serializable46 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        int int54 = serializableNode52.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode56.parent;
        int int58 = serializableNode57.rank;
        serializableNode57.rank = 97;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) true);
        java.lang.Class<?> wildcardClass63 = objNode62.getClass();
        serializableNode57.data = wildcardClass63;
        serializableNode6.parent = serializableNode57;
        java.lang.Class<?> wildcardClass66 = serializableNode6.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode5.parent = serializableNode12;
        int int17 = serializableNode5.rank;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        serializableNode5.parent = serializableNode24;
        serializableNode24.rank = 100;
        java.lang.Class<?> wildcardClass32 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass32);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass32);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode13.parent;
        serializableNode13.rank = (byte) 10;
        int int21 = serializableNode13.rank;
        serializableNode9.parent = serializableNode13;
        serializableNode13.rank = 1;
        int int25 = serializableNode13.rank;
        serializableNode1.parent = serializableNode13;
        serializableNode1.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        serializableNode1.rank = '4';
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode1.parent;
        serializableNode1.rank = 35;
        serializableNode1.rank = 0;
        int int26 = serializableNode1.rank;
        java.io.Serializable serializable27 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        serializableNode17.data = 10.0d;
        java.lang.Class<?> wildcardClass25 = serializableNode17.getClass();
        serializableNode13.data = wildcardClass25;
        serializableNode3.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode3.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode15.data;
        java.io.Serializable serializable19 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode15.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        java.lang.Class<?> wildcardClass36 = serializableNode32.getClass();
        serializableNode28.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable45 = serializableNode44.data;
        int int46 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode44.parent = serializableNode48;
        serializableNode48.data = 0.0d;
        serializableNode39.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode39.parent;
        serializableNode28.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        serializableNode56.data = (byte) 1;
        int int62 = serializableNode56.rank;
        int int63 = serializableNode56.rank;
        java.lang.Class<?> wildcardClass64 = serializableNode56.getClass();
        serializableNode53.data = wildcardClass64;
        serializableNode8.data = wildcardClass64;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.data = true;
        serializableNode1.rank = 0;
        int int14 = serializableNode1.rank;
        int int15 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable18 = serializableNode17.data;
        int int19 = serializableNode17.rank;
        int int20 = serializableNode17.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        serializableNode1.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode24.parent = serializableNode29;
        int int33 = serializableNode24.rank;
        java.lang.Class<?> wildcardClass34 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode37.parent;
        serializableNode37.rank = (byte) 10;
        int int45 = serializableNode37.rank;
        int int46 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode37.parent;
        serializableNode35.parent = serializableNode48;
        java.io.Serializable serializable50 = serializableNode35.data;
        serializableNode21.data = serializable50;
        java.lang.Class<?> wildcardClass52 = serializable50.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass52);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializable50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode14.parent;
        serializableNode59.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(serializableNode59);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        serializableNode19.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode36 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode19.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        java.io.Serializable serializable20 = serializableNode10.data;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode10.parent;
        serializableNode10.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode40.parent = serializableNode44;
        int int46 = serializableNode44.rank;
        serializableNode34.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode49.parent;
        serializableNode34.parent = serializableNode49;
        serializableNode49.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode49.parent;
        serializableNode10.parent = serializableNode54;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode54);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode11.parent = serializableNode13;
        serializableNode4.parent = serializableNode13;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode23.rank = (byte) 100;
        serializableNode23.data = 'a';
        java.lang.Class<?> wildcardClass28 = serializableNode23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        int int30 = serializableNode29.rank;
        java.io.Serializable serializable31 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = null;
        serializableNode29.parent = serializableNode32;
        serializableNode1.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode29.parent;
        int int36 = serializableNode29.rank;
        java.io.Serializable serializable37 = serializableNode29.data;
        int int38 = serializableNode29.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode40.parent;
        serializableNode40.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode48.rank = (byte) 100;
        serializableNode40.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode53.parent = serializableNode63;
        serializableNode40.parent = serializableNode53;
        java.io.Serializable serializable66 = serializableNode53.data;
        int int67 = serializableNode53.rank;
        java.lang.Class<?> wildcardClass68 = serializableNode53.getClass();
        serializableNode29.data = wildcardClass68;
        java.io.Serializable serializable70 = serializableNode29.data;
        serializableNode29.rank = (byte) 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializable37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + 10L + "'", serializable66, 10L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(serializable70);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        int int10 = serializableNode1.rank;
        int int11 = serializableNode1.rank;
        serializableNode1.rank = 35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = null;
        serializableNode7.data = serializable10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        int int20 = serializableNode19.rank;
        serializableNode9.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode23.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.data = (short) 100;
        serializableNode23.parent = serializableNode32;
        java.io.Serializable serializable38 = serializableNode32.data;
        int int39 = serializableNode32.rank;
        serializableNode32.rank = 10;
        java.io.Serializable serializable42 = serializableNode32.data;
        serializableNode32.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass46 = serializableNode45.getClass();
        serializableNode19.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        serializableNode49.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode57.rank = (byte) 100;
        serializableNode49.parent = serializableNode57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int63 = serializableNode62.rank;
        int int64 = serializableNode62.rank;
        java.io.Serializable serializable65 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode62.parent;
        java.io.Serializable serializable67 = serializableNode66.data;
        int int68 = serializableNode66.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode70.parent;
        serializableNode49.parent = serializableNode70;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int75 = serializableNode74.rank;
        int int76 = serializableNode74.rank;
        java.io.Serializable serializable77 = serializableNode74.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = serializableNode74.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable81 = serializableNode80.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode80.parent;
        serializableNode78.parent = serializableNode82;
        int int84 = serializableNode82.rank;
        serializableNode82.rank = (byte) 0;
        serializableNode82.rank = (byte) 1;
        int int89 = serializableNode82.rank;
        java.io.Serializable serializable90 = serializableNode82.data;
        serializableNode49.parent = serializableNode82;
        java.lang.Class<?> wildcardClass92 = serializableNode49.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode93 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass92);
        java.io.Serializable serializable94 = serializableNode93.data;
        java.lang.Class<?> wildcardClass95 = serializableNode93.getClass();
        serializableNode19.data = wildcardClass95;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode97 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass95);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode98 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass95);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode99 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass95);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + (short) 100 + "'", serializable38, (short) 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + (short) 100 + "'", serializable42, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + serializable77 + "' != '" + 10L + "'", serializable77, 10L);
        org.junit.Assert.assertNotNull(serializableNode78);
        org.junit.Assert.assertEquals("'" + serializable81 + "' != '" + 10L + "'", serializable81, 10L);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertEquals("'" + serializable90 + "' != '" + 10L + "'", serializable90, 10L);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(serializable94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        serializableNode1.rank = (short) 1;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + (byte) 1 + "'", serializable11, (byte) 1);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        serializableNode12.data = 10.0d;
        java.lang.Class<?> wildcardClass20 = serializableNode12.getClass();
        serializableNode1.data = wildcardClass20;
        serializableNode1.rank = 100;
        java.io.Serializable serializable24 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode31 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int35 = serializableNode34.rank;
        java.lang.Class<?> wildcardClass36 = serializableNode34.getClass();
        serializableNode26.data = wildcardClass36;
        serializableNode1.parent = serializableNode26;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode11.parent = serializableNode13;
        serializableNode6.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        serializableNode22.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        serializableNode22.parent = serializableNode29;
        int int34 = serializableNode22.rank;
        java.io.Serializable serializable35 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        serializableNode22.parent = serializableNode39;
        int int41 = serializableNode39.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        serializableNode43.rank = (byte) 1;
        int int49 = serializableNode43.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        int int54 = serializableNode52.rank;
        serializableNode52.rank = 'a';
        java.lang.Class<?> wildcardClass57 = serializableNode52.getClass();
        serializableNode43.data = wildcardClass57;
        java.lang.Class<?> wildcardClass59 = serializableNode43.getClass();
        serializableNode39.data = wildcardClass59;
        java.io.Serializable serializable61 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable61);
        java.io.Serializable serializable63 = serializableNode62.data;
        serializableNode16.parent = serializableNode62;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(serializable61);
        org.junit.Assert.assertNotNull(serializable63);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable55 = serializableNode54.data;
        int int56 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode54.parent = serializableNode58;
        serializableNode52.parent = serializableNode54;
        int int61 = serializableNode52.rank;
        int int62 = serializableNode52.rank;
        serializableNode40.parent = serializableNode52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode52.parent;
        java.io.Serializable serializable65 = serializableNode64.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode23.parent = serializableNode30;
        serializableNode5.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode5.parent;
        java.io.Serializable serializable37 = serializableNode36.data;
        serializableNode1.parent = serializableNode36;
        java.io.Serializable serializable39 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 52);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        int int52 = serializableNode50.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode50.parent = serializableNode54;
        serializableNode48.parent = serializableNode50;
        serializableNode41.parent = serializableNode50;
        serializableNode1.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode50.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        serializableNode15.rank = (byte) 10;
        int int23 = serializableNode15.rank;
        int int24 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        serializableNode27.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode33.parent = serializableNode37;
        java.lang.Class<?> wildcardClass39 = serializableNode37.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        serializableNode27.parent = serializableNode40;
        serializableNode25.parent = serializableNode27;
        serializableNode1.parent = serializableNode27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) -1;
        int int21 = serializableNode17.rank;
        serializableNode12.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode28.parent;
        int int32 = serializableNode28.rank;
        serializableNode12.parent = serializableNode28;
        serializableNode8.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode28.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(serializableNode36);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        int int22 = serializableNode19.rank;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        serializableNode25.rank = (byte) 100;
        java.lang.Class<?> wildcardClass29 = serializableNode25.getClass();
        serializableNode19.data = wildcardClass29;
        serializableNode16.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode37.parent = serializableNode42;
        serializableNode37.data = true;
        serializableNode33.parent = serializableNode37;
        serializableNode19.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass51 = serializableNode50.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass51);
        serializableNode52.rank = '4';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        serializableNode16.rank = (short) 0;
        java.io.Serializable serializable29 = serializableNode16.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        serializableNode13.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode29.parent;
        java.lang.Class<?> wildcardClass33 = serializableNode32.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = 32;
        java.lang.Class<?> wildcardClass17 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        java.io.Serializable serializable23 = serializableNode22.data;
        java.lang.Class<?> wildcardClass24 = serializable23.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass24);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        int int28 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode32.rank = (byte) 100;
        serializableNode32.data = 'a';
        java.lang.Class<?> wildcardClass37 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass37);
        serializableNode39.rank = 0;
        int int42 = serializableNode39.rank;
        serializableNode29.parent = serializableNode39;
        serializableNode19.parent = serializableNode39;
        int int45 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        serializableNode19.parent = serializableNode47;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode47);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode49);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode7.parent = serializableNode11;
        java.lang.Class<?> wildcardClass13 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        serializableNode19.rank = (short) -1;
        serializableNode19.rank = (short) -1;
        java.io.Serializable serializable26 = serializableNode19.data;
        int int27 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode19.parent;
        java.io.Serializable serializable29 = serializableNode19.data;
        java.io.Serializable serializable30 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode19.parent;
        serializableNode14.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        int int42 = serializableNode40.rank;
        serializableNode40.rank = 'a';
        java.lang.Class<?> wildcardClass45 = serializableNode40.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass45);
        serializableNode34.data = wildcardClass45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        serializableNode49.data = (byte) 1;
        serializableNode34.parent = serializableNode49;
        java.io.Serializable serializable56 = serializableNode49.data;
        serializableNode14.parent = serializableNode49;
        java.lang.Class<?> wildcardClass58 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass58);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + (byte) 1 + "'", serializable56, (byte) 1);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode30.parent;
        serializableNode30.rank = 100;
        java.lang.Class<?> wildcardClass48 = serializableNode30.getClass();
        serializableNode23.data = wildcardClass48;
        serializableNode10.data = wildcardClass48;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) true);
        java.lang.Class<?> wildcardClass53 = objNode52.getClass();
        serializableNode10.data = wildcardClass53;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode11 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode10);
        java.io.Serializable serializable12 = serializableNode10.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.io.Serializable serializable12 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode23.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        serializableNode25.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        serializableNode21.parent = serializableNode29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode21.parent;
        serializableNode21.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode21.parent;
        serializableNode34.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode38.rank = (byte) 100;
        serializableNode38.data = 'a';
        java.lang.Class<?> wildcardClass43 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass43);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable54 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode53.parent;
        serializableNode51.parent = serializableNode55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        serializableNode58.rank = (byte) 1;
        java.lang.Class<?> wildcardClass64 = serializableNode58.getClass();
        serializableNode51.data = wildcardClass64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode51.parent;
        serializableNode51.rank = 100;
        serializableNode45.parent = serializableNode51;
        int int70 = serializableNode45.rank;
        serializableNode34.parent = serializableNode45;
        java.io.Serializable serializable72 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable72);
        serializableNode1.data = serializable72;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(serializable72);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        int int20 = serializableNode19.rank;
        java.io.Serializable serializable21 = serializableNode19.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (short) 100 + "'", serializable21, (short) 100);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        int int29 = serializableNode27.rank;
        serializableNode17.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        serializableNode17.parent = serializableNode32;
        serializableNode9.parent = serializableNode32;
        int int36 = serializableNode9.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (byte) 0;
        java.io.Serializable serializable14 = serializableNode9.data;
        int int15 = serializableNode9.rank;
        int int16 = serializableNode9.rank;
        serializableNode9.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        java.io.Serializable serializable19 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        serializableNode33.parent = serializableNode37;
        int int39 = serializableNode37.rank;
        serializableNode27.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        serializableNode27.parent = serializableNode42;
        serializableNode42.rank = (short) -1;
        java.io.Serializable serializable47 = serializableNode42.data;
        serializableNode5.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        serializableNode52.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        int int57 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        int int64 = serializableNode61.rank;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode67.parent;
        serializableNode67.rank = (byte) 100;
        java.lang.Class<?> wildcardClass71 = serializableNode67.getClass();
        serializableNode61.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        serializableNode73.data = wildcardClass76;
        serializableNode73.rank = (short) 100;
        serializableNode58.parent = serializableNode73;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode73.parent;
        serializableNode81.rank = 52;
        serializableNode81.rank = (short) 0;
        serializableNode42.parent = serializableNode81;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) -1 + "'", serializable47, (short) -1);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode81);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        int int11 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        int int31 = serializableNode19.rank;
        java.io.Serializable serializable32 = serializableNode19.data;
        serializableNode13.parent = serializableNode19;
        serializableNode1.parent = serializableNode13;
        serializableNode13.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode13.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        java.io.Serializable serializable7 = serializableNode4.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode4.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        serializableNode4.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode18 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode4);
        serializableNode1.parent = serializableNode4;
        serializableNode4.rank = 52;
        int int22 = serializableNode4.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode4.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10.0f + "'", serializable2, 10.0f);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        serializableNode13.parent = serializableNode20;
        int int25 = serializableNode13.rank;
        java.io.Serializable serializable26 = serializableNode13.data;
        java.lang.Class<?> wildcardClass27 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode1.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass31 = serializableNode30.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        serializableNode13.rank = (byte) 1;
        serializableNode13.rank = (byte) 0;
        int int41 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode47.data;
        java.io.Serializable serializable51 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode57.getClass();
        serializableNode47.data = wildcardClass58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        java.io.Serializable serializable65 = serializableNode64.data;
        serializableNode64.rank = (short) -1;
        java.lang.Class<?> wildcardClass68 = serializableNode64.getClass();
        serializableNode60.data = wildcardClass68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass68);
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode71 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode70);
        java.io.Serializable serializable72 = serializableNode70.data;
        serializableNode13.data = serializable72;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(serializable72);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        serializableNode9.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode13.parent;
        serializableNode13.rank = (byte) 10;
        int int21 = serializableNode13.rank;
        serializableNode9.parent = serializableNode13;
        serializableNode13.rank = 1;
        int int25 = serializableNode13.rank;
        serializableNode1.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode13.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        serializableNode22.rank = (short) -1;
        java.lang.Class<?> wildcardClass26 = serializableNode22.getClass();
        serializableNode18.data = wildcardClass26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        serializableNode39.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode39.parent = serializableNode46;
        java.io.Serializable serializable51 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode53.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        serializableNode39.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        java.io.Serializable serializable61 = serializableNode60.data;
        serializableNode60.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode60.parent;
        int int65 = serializableNode64.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode66.parent;
        java.lang.Class<?> wildcardClass68 = serializableNode66.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass68);
        serializableNode39.parent = serializableNode69;
        java.lang.Class<?> wildcardClass71 = serializableNode69.getClass();
        serializableNode33.data = wildcardClass71;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + (byte) 10 + "'", serializable55, (byte) 10);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode10.parent;
        int int19 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        java.io.Serializable serializable28 = serializableNode25.data;
        java.io.Serializable serializable29 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.lang.Class<?> wildcardClass36 = serializableNode35.getClass();
        serializableNode25.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode25.parent;
        java.io.Serializable serializable39 = serializableNode38.data;
        serializableNode10.data = serializable39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode10.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializable39);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode29.data;
        java.lang.Class<?> wildcardClass32 = serializableNode29.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass32);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializable31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        int int19 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        serializableNode25.data = (byte) -1;
        serializableNode10.parent = serializableNode25;
        int int32 = serializableNode25.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        int int28 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode30.rank = (byte) 1;
        int int36 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        java.io.Serializable serializable41 = serializableNode39.data;
        java.lang.Class<?> wildcardClass42 = serializable41.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        serializableNode30.parent = serializableNode43;
        int int45 = serializableNode43.rank;
        serializableNode1.parent = serializableNode43;
        java.lang.Class<?> wildcardClass47 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode48.rank = 0;
        int int51 = serializableNode48.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        java.io.Serializable serializable20 = serializableNode5.data;
        java.io.Serializable serializable21 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        java.io.Serializable serializable40 = serializableNode27.data;
        serializableNode5.data = serializable40;
        int int42 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertNotNull(serializable21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializable40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode11.rank = (byte) 100;
        serializableNode11.data = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable27 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode26.parent;
        serializableNode24.parent = serializableNode28;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        serializableNode31.rank = (byte) 1;
        java.lang.Class<?> wildcardClass37 = serializableNode31.getClass();
        serializableNode24.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode24.parent;
        serializableNode24.rank = 100;
        serializableNode18.parent = serializableNode24;
        int int43 = serializableNode18.rank;
        serializableNode7.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        serializableNode46.rank = (byte) 1;
        int int52 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode46.parent;
        serializableNode18.parent = serializableNode53;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        java.io.Serializable serializable31 = serializableNode7.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + (byte) 1 + "'", serializable31, (byte) 1);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = 'a';
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode6.parent = serializableNode17;
        java.io.Serializable serializable19 = serializableNode6.data;
        int int20 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        int int35 = serializableNode32.rank;
        java.io.Serializable serializable36 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        serializableNode38.rank = (byte) 100;
        java.lang.Class<?> wildcardClass42 = serializableNode38.getClass();
        serializableNode32.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass47 = serializableNode46.getClass();
        serializableNode44.data = wildcardClass47;
        serializableNode44.rank = (short) 100;
        serializableNode27.parent = serializableNode44;
        java.lang.Class<?> wildcardClass52 = serializableNode44.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        serializableNode6.data = wildcardClass52;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass9);
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = null;
        serializableNode10.data = serializable13;
        int int15 = serializableNode10.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        serializableNode13.parent = serializableNode20;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode24.rank = (byte) 1;
        int int30 = serializableNode24.rank;
        int int31 = serializableNode24.rank;
        java.io.Serializable serializable32 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        serializableNode34.rank = (byte) 10;
        serializableNode24.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode44.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode59 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode54);
        java.io.Serializable serializable60 = serializableNode54.data;
        java.lang.Class<?> wildcardClass61 = serializableNode54.getClass();
        serializableNode49.data = wildcardClass61;
        java.lang.Class<?> wildcardClass63 = serializableNode49.getClass();
        serializableNode24.data = wildcardClass63;
        serializableNode20.data = wildcardClass63;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        int int69 = serializableNode67.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode67.parent = serializableNode71;
        serializableNode67.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int77 = serializableNode76.rank;
        int int78 = serializableNode76.rank;
        serializableNode76.data = (short) 100;
        serializableNode67.parent = serializableNode76;
        java.io.Serializable serializable82 = serializableNode76.data;
        int int83 = serializableNode76.rank;
        java.io.Serializable serializable84 = serializableNode76.data;
        int int85 = serializableNode76.rank;
        serializableNode76.data = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = serializableNode76.parent;
        serializableNode20.parent = serializableNode76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass91 = serializableNode90.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + (short) 100 + "'", serializable82, (short) 100);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + (short) 100 + "'", serializable84, (short) 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(serializableNode88);
        org.junit.Assert.assertNotNull(serializableNode90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        int int18 = serializableNode8.rank;
        java.io.Serializable serializable19 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode8.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        java.io.Serializable serializable17 = serializableNode14.data;
        java.io.Serializable serializable18 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode24.getClass();
        serializableNode14.data = wildcardClass25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode14.parent;
        serializableNode5.parent = serializableNode14;
        java.lang.Class<?> wildcardClass29 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        serializableNode45.rank = (byte) 1;
        java.lang.Class<?> wildcardClass51 = serializableNode45.getClass();
        serializableNode38.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        serializableNode57.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode57.parent;
        java.lang.Class<?> wildcardClass63 = serializableNode62.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass63);
        serializableNode55.data = wildcardClass63;
        serializableNode31.data = wildcardClass63;
        java.io.Serializable serializable67 = serializableNode31.data;
        serializableNode31.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializable67);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass12 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        java.io.Serializable serializable22 = serializableNode19.data;
        java.io.Serializable serializable23 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode29.getClass();
        serializableNode19.data = wildcardClass30;
        java.io.Serializable serializable32 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable32);
        serializableNode33.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        java.io.Serializable serializable44 = serializableNode41.data;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        java.lang.Class<?> wildcardClass52 = serializableNode51.getClass();
        serializableNode41.data = wildcardClass52;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode41.parent;
        serializableNode54.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode54.parent;
        serializableNode33.parent = serializableNode54;
        java.io.Serializable serializable59 = serializableNode54.data;
        serializableNode13.data = serializable59;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(serializable59);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode8.parent;
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        java.io.Serializable serializable20 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode19.parent;
        int int23 = serializableNode19.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.data = (byte) 1;
        serializableNode13.rank = (short) 1;
        java.io.Serializable serializable21 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode13.parent;
        serializableNode10.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 1 + "'", serializable21, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass8 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass8);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass8);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.lang.Class<?> wildcardClass9 = serializableNode7.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        java.lang.Class<?> wildcardClass22 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass22);
        serializableNode7.data = wildcardClass22;
        serializableNode7.rank = 32;
        java.io.Serializable serializable27 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode7.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializable27);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        int int32 = serializableNode1.rank;
        serializableNode1.rank = '#';
        int int35 = serializableNode1.rank;
        java.io.Serializable serializable36 = serializableNode1.data;
        java.io.Serializable serializable37 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertNotNull(serializable37);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode5.parent;
        serializableNode21.rank = (byte) 10;
        java.lang.Class<?> wildcardClass24 = serializableNode21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode10.parent;
        serializableNode11.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode15.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        serializableNode11.parent = serializableNode24;
        serializableNode8.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass29 = charSequenceNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        serializableNode11.parent = serializableNode30;
        java.io.Serializable serializable32 = serializableNode30.data;
        int int33 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode35.rank = (byte) 100;
        serializableNode35.data = 'a';
        java.lang.Class<?> wildcardClass40 = serializableNode35.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        int int42 = serializableNode41.rank;
        serializableNode41.rank = 1;
        int int45 = serializableNode41.rank;
        serializableNode41.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode41.parent;
        serializableNode30.parent = serializableNode41;
        java.lang.Class<?> wildcardClass50 = serializableNode41.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode18.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        serializableNode25.rank = (byte) 1;
        java.lang.Class<?> wildcardClass31 = serializableNode25.getClass();
        serializableNode18.data = wildcardClass31;
        java.io.Serializable serializable33 = serializableNode18.data;
        java.io.Serializable serializable34 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode40.data;
        java.io.Serializable serializable44 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        java.lang.Class<?> wildcardClass51 = serializableNode50.getClass();
        serializableNode40.data = wildcardClass51;
        java.io.Serializable serializable53 = serializableNode40.data;
        serializableNode18.data = serializable53;
        serializableNode9.data = serializable53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable58 = serializableNode57.data;
        int int59 = serializableNode57.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode57.parent = serializableNode61;
        serializableNode57.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int67 = serializableNode66.rank;
        int int68 = serializableNode66.rank;
        serializableNode66.data = (short) 100;
        serializableNode57.parent = serializableNode66;
        java.io.Serializable serializable72 = serializableNode66.data;
        serializableNode66.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode66.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable78 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode77.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        serializableNode79.rank = (short) -1;
        java.lang.Class<?> wildcardClass83 = serializableNode79.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode84 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        serializableNode66.data = wildcardClass83;
        serializableNode66.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = serializableNode66.parent;
        java.lang.Class<?> wildcardClass89 = serializableNode66.getClass();
        serializableNode9.data = wildcardClass89;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializable33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializable53);
        org.junit.Assert.assertEquals("'" + serializable58 + "' != '" + 10L + "'", serializable58, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + (short) 100 + "'", serializable72, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(serializableNode88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object> objNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.Object>((java.lang.Object) serializableNode19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode19.parent;
        java.io.Serializable serializable27 = serializableNode19.data;
        int int28 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        serializableNode22.parent = serializableNode26;
        int int28 = serializableNode26.rank;
        serializableNode16.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode16.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        serializableNode40.parent = serializableNode44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        serializableNode47.rank = (byte) 1;
        java.lang.Class<?> wildcardClass53 = serializableNode47.getClass();
        serializableNode40.data = wildcardClass53;
        java.io.Serializable serializable55 = serializableNode40.data;
        serializableNode31.data = serializable55;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode58.parent;
        serializableNode58.rank = (byte) 10;
        int int66 = serializableNode58.rank;
        int int67 = serializableNode58.rank;
        serializableNode31.parent = serializableNode58;
        serializableNode8.parent = serializableNode58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode58.parent;
        int int71 = serializableNode58.rank;
        java.io.Serializable serializable72 = serializableNode58.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(serializable55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        serializableNode11.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass21 = serializableNode15.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        serializableNode24.rank = 52;
        java.io.Serializable serializable28 = serializableNode24.data;
        serializableNode11.data = serializable28;
        int int30 = serializableNode11.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializable28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode10.rank = '4';
        serializableNode10.rank = 0;
        serializableNode10.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable38 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode37.parent;
        java.io.Serializable serializable40 = serializableNode39.data;
        serializableNode39.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        serializableNode35.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode35.parent;
        serializableNode35.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode35.parent;
        serializableNode48.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode52.rank = (byte) 100;
        serializableNode52.data = 'a';
        java.lang.Class<?> wildcardClass57 = serializableNode52.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass57);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode58.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int62 = serializableNode61.rank;
        int int63 = serializableNode61.rank;
        java.io.Serializable serializable64 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable68 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode67.parent;
        serializableNode65.parent = serializableNode69;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int73 = serializableNode72.rank;
        int int74 = serializableNode72.rank;
        java.io.Serializable serializable75 = serializableNode72.data;
        serializableNode72.rank = (byte) 1;
        java.lang.Class<?> wildcardClass78 = serializableNode72.getClass();
        serializableNode65.data = wildcardClass78;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode80 = serializableNode65.parent;
        serializableNode65.rank = 100;
        serializableNode59.parent = serializableNode65;
        int int84 = serializableNode59.rank;
        serializableNode48.parent = serializableNode59;
        java.io.Serializable serializable86 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable86);
        java.io.Serializable serializable88 = serializableNode87.data;
        serializableNode10.parent = serializableNode87;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode90 = serializableNode10.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(serializableNode80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(serializable86);
        org.junit.Assert.assertNotNull(serializable88);
        org.junit.Assert.assertNotNull(serializableNode90);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        int int11 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode13.parent;
        java.io.Serializable serializable19 = serializableNode13.data;
        java.io.Serializable serializable20 = serializableNode13.data;
        int int21 = serializableNode13.rank;
        serializableNode1.parent = serializableNode13;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        java.io.Serializable serializable5 = serializableNode4.data;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10.0f + "'", serializable5, 10.0f);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        int int7 = serializableNode1.rank;
        int int8 = serializableNode1.rank;
        java.io.Serializable serializable9 = serializableNode1.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        serializableNode8.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass13 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass13);
        serializableNode8.data = wildcardClass13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        serializableNode17.rank = (byte) 1;
        int int23 = serializableNode17.rank;
        int int24 = serializableNode17.rank;
        serializableNode8.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode8.parent;
        java.io.Serializable serializable27 = serializableNode26.data;
        java.lang.Class<?> wildcardClass28 = serializable27.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode5.parent = serializableNode9;
        serializableNode5.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.data = (short) 100;
        serializableNode5.parent = serializableNode14;
        java.io.Serializable serializable20 = serializableNode14.data;
        int int21 = serializableNode14.rank;
        serializableNode14.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode1.parent = serializableNode24;
        java.io.Serializable serializable27 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + (short) 100 + "'", serializable20, (short) 100);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (short) 100 + "'", serializable25, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10.0f + "'", serializable27, 10.0f);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        java.io.Serializable serializable6 = serializableNode1.data;
        serializableNode1.rank = 0;
        java.io.Serializable serializable9 = serializableNode1.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass12 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        serializableNode5.data = true;
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode1.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        serializableNode20.rank = (byte) 1;
        int int26 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        serializableNode31.rank = (short) -1;
        java.lang.Class<?> wildcardClass35 = serializableNode31.getClass();
        serializableNode20.data = wildcardClass35;
        serializableNode17.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass35);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass35);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + true + "'", serializable18, true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode25.parent;
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        java.io.Serializable serializable32 = serializableNode29.data;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        java.lang.Class<?> wildcardClass40 = serializableNode39.getClass();
        serializableNode29.data = wildcardClass40;
        java.io.Serializable serializable42 = serializableNode29.data;
        serializableNode23.parent = serializableNode29;
        java.io.Serializable serializable44 = serializableNode29.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializable42);
        org.junit.Assert.assertNotNull(serializable44);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode11.parent = serializableNode13;
        serializableNode6.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        serializableNode17.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode30.parent = serializableNode37;
        int int42 = serializableNode30.rank;
        java.io.Serializable serializable43 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        serializableNode30.parent = serializableNode49;
        serializableNode24.parent = serializableNode30;
        serializableNode24.rank = (short) 10;
        serializableNode6.parent = serializableNode24;
        java.io.Serializable serializable59 = null;
        serializableNode24.data = serializable59;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        serializableNode8.parent = serializableNode11;
        java.io.Serializable serializable16 = serializableNode11.data;
        java.io.Serializable serializable17 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode11.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        serializableNode37.rank = (short) -1;
        java.io.Serializable serializable44 = serializableNode37.data;
        int int45 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode12.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        serializableNode53.parent = serializableNode58;
        serializableNode53.data = true;
        serializableNode53.rank = 0;
        int int66 = serializableNode53.rank;
        serializableNode50.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        java.io.Serializable serializable74 = serializableNode73.data;
        int int75 = serializableNode73.rank;
        serializableNode53.parent = serializableNode73;
        serializableNode73.rank = 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode23.parent = serializableNode27;
        serializableNode21.parent = serializableNode23;
        int int30 = serializableNode21.rank;
        serializableNode10.parent = serializableNode21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        serializableNode33.rank = (byte) 1;
        serializableNode33.data = 10.0d;
        java.lang.Class<?> wildcardClass41 = serializableNode33.getClass();
        serializableNode21.data = wildcardClass41;
        serializableNode8.data = wildcardClass41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass41);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode46.parent;
        java.lang.Class<?> wildcardClass52 = serializableNode46.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass52);
        int int54 = serializableNode53.rank;
        serializableNode44.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode53.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(serializableNode56);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) 100L);
        java.lang.Class<?> wildcardClass2 = constableNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        java.lang.Class<?> wildcardClass7 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        int int9 = serializableNode8.rank;
        java.io.Serializable serializable10 = serializableNode8.data;
        java.lang.Class<?> wildcardClass11 = serializableNode8.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        int int49 = serializableNode47.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode47.parent = serializableNode51;
        serializableNode47.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        serializableNode56.data = (short) 100;
        serializableNode47.parent = serializableNode56;
        java.io.Serializable serializable62 = serializableNode56.data;
        int int63 = serializableNode56.rank;
        serializableNode56.rank = 10;
        java.io.Serializable serializable66 = serializableNode56.data;
        serializableNode56.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable71 = serializableNode70.data;
        int int72 = serializableNode70.rank;
        serializableNode70.rank = 'a';
        java.lang.Class<?> wildcardClass75 = serializableNode70.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass75);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass75);
        serializableNode56.data = wildcardClass75;
        serializableNode40.data = wildcardClass75;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + (short) 100 + "'", serializable62, (short) 100);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + (short) 100 + "'", serializable66, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable71 + "' != '" + 10L + "'", serializable71, 10L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode8.data;
        int int12 = serializableNode8.rank;
        java.io.Serializable serializable13 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode8.parent;
        java.io.Serializable serializable15 = serializableNode8.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode32.parent = serializableNode36;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode26.parent = serializableNode39;
        serializableNode24.parent = serializableNode26;
        serializableNode12.parent = serializableNode26;
        int int43 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass44 = serializableNode12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        serializableNode1.rank = '#';
        java.io.Serializable serializable10 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass12 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode32.rank = 52;
        serializableNode32.rank = (short) 0;
        serializableNode32.rank = (short) 100;
        serializableNode32.rank = (short) 10;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode37 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode32);
        java.io.Serializable serializable38 = serializableNode32.data;
        java.lang.Class<?> wildcardClass39 = serializableNode32.getClass();
        serializableNode27.data = wildcardClass39;
        serializableNode10.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode42.parent;
        java.lang.Class<?> wildcardClass44 = serializableNode43.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.lang.Class<?> wildcardClass21 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        int int7 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int2 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int5 = serializableNode4.rank;
        int int6 = serializableNode4.rank;
        serializableNode4.rank = (short) -1;
        serializableNode4.rank = (short) -1;
        java.io.Serializable serializable11 = serializableNode4.data;
        serializableNode1.parent = serializableNode4;
        java.io.Serializable serializable13 = serializableNode4.data;
        java.lang.Class<?> wildcardClass14 = serializableNode4.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode13.parent;
        java.io.Serializable serializable15 = serializableNode13.data;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        java.io.Serializable serializable34 = serializableNode31.data;
        java.io.Serializable serializable35 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        java.lang.Class<?> wildcardClass42 = serializableNode41.getClass();
        serializableNode31.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode31.parent;
        serializableNode22.parent = serializableNode31;
        java.lang.Class<?> wildcardClass46 = serializableNode31.getClass();
        serializableNode13.data = wildcardClass46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        serializableNode1.parent = serializableNode48;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        int int61 = serializableNode59.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode59.parent = serializableNode63;
        serializableNode57.parent = serializableNode59;
        serializableNode57.rank = 0;
        java.io.Serializable serializable68 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode70.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable78 = serializableNode77.data;
        int int79 = serializableNode77.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode77.parent = serializableNode81;
        serializableNode75.parent = serializableNode77;
        int int84 = serializableNode75.rank;
        serializableNode75.data = ' ';
        serializableNode57.parent = serializableNode75;
        serializableNode48.parent = serializableNode57;
        int int89 = serializableNode57.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode8 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode7.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        java.lang.Class<?> wildcardClass27 = serializableNode22.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass27);
        serializableNode16.data = wildcardClass27;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode30 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode16);
        serializableNode13.parent = serializableNode16;
        java.io.Serializable serializable32 = serializableNode16.data;
        serializableNode7.data = serializable32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode37.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int42 = serializableNode41.rank;
        int int43 = serializableNode41.rank;
        java.io.Serializable serializable44 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode46.parent;
        serializableNode41.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        serializableNode37.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode54.data = (byte) 1;
        int int60 = serializableNode54.rank;
        int int61 = serializableNode54.rank;
        java.lang.Class<?> wildcardClass62 = serializableNode54.getClass();
        serializableNode50.data = wildcardClass62;
        java.lang.Class<?> wildcardClass64 = serializableNode50.getClass();
        serializableNode7.data = wildcardClass64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode7.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10.0f + "'", serializable14, 10.0f);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializable32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(serializableNode66);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        java.io.Serializable serializable27 = serializableNode24.data;
        java.io.Serializable serializable28 = serializableNode24.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode34.getClass();
        serializableNode24.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode24.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode10.data = serializable38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable38);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int43 = serializableNode42.rank;
        int int44 = serializableNode42.rank;
        java.io.Serializable serializable45 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable49 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode48.parent;
        serializableNode46.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        serializableNode46.parent = serializableNode53;
        int int58 = serializableNode46.rank;
        java.io.Serializable serializable59 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode61.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        serializableNode46.parent = serializableNode63;
        java.lang.Class<?> wildcardClass65 = serializableNode46.getClass();
        serializableNode40.data = wildcardClass65;
        java.io.Serializable serializable67 = serializableNode40.data;
        java.lang.Class<?> wildcardClass68 = serializableNode40.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializable38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(serializable67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        serializableNode1.rank = (byte) 10;
        serializableNode1.rank = (-1);
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        serializableNode1.parent = serializableNode5;
        java.io.Serializable serializable9 = serializableNode1.data;
        java.io.Serializable serializable10 = serializableNode1.data;
        int int11 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass12 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10.0f + "'", serializable9, 10.0f);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10.0f + "'", serializable10, 10.0f);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode12.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        int int10 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode13.parent = serializableNode17;
        serializableNode13.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        serializableNode22.data = (short) 100;
        serializableNode13.parent = serializableNode22;
        java.io.Serializable serializable28 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        serializableNode22.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        serializableNode11.parent = serializableNode33;
        serializableNode33.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode38.parent;
        serializableNode38.rank = (byte) 10;
        int int46 = serializableNode38.rank;
        int int47 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode38.getClass();
        serializableNode33.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + (short) 100 + "'", serializable28, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode27.parent = serializableNode31;
        serializableNode25.parent = serializableNode27;
        int int34 = serializableNode25.rank;
        java.lang.Class<?> wildcardClass35 = serializableNode25.getClass();
        serializableNode13.data = wildcardClass35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode38.parent;
        serializableNode38.rank = (byte) 10;
        int int46 = serializableNode38.rank;
        java.lang.Class<?> wildcardClass47 = serializableNode38.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass47);
        serializableNode13.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        int int58 = serializableNode56.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode56.parent;
        java.lang.Class<?> wildcardClass60 = serializableNode59.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass60);
        serializableNode13.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        java.io.Serializable serializable69 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode68.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode68.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        java.lang.Class<?> wildcardClass76 = serializableNode75.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode72.data = wildcardClass76;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass76);
        serializableNode13.parent = serializableNode79;
        int int81 = serializableNode13.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = 'a';
        int int18 = serializableNode13.rank;
        serializableNode7.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode28.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode32.parent;
        serializableNode32.rank = (byte) 10;
        int int40 = serializableNode32.rank;
        int int41 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode32.parent;
        serializableNode28.parent = serializableNode43;
        serializableNode7.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode47 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode46);
        java.lang.Class<?> wildcardClass48 = serializableNode46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        java.io.Serializable serializable21 = serializableNode20.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode5.rank = 0;
        serializableNode5.data = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode5.parent;
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode15.parent = serializableNode19;
        serializableNode15.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        serializableNode24.data = (short) 100;
        serializableNode15.parent = serializableNode24;
        java.io.Serializable serializable30 = serializableNode24.data;
        int int31 = serializableNode24.rank;
        serializableNode24.rank = 10;
        java.io.Serializable serializable34 = serializableNode24.data;
        serializableNode24.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable39 = serializableNode38.data;
        int int40 = serializableNode38.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode38.parent = serializableNode42;
        serializableNode24.parent = serializableNode42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode24.parent;
        int int46 = serializableNode24.rank;
        serializableNode11.parent = serializableNode24;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + (short) 100 + "'", serializable30, (short) 100);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + (short) 100 + "'", serializable34, (short) 100);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 97 + "'", int46 == 97);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass17 = serializableNode16.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        serializableNode1.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode14.parent = serializableNode23;
        serializableNode11.parent = serializableNode14;
        serializableNode14.rank = 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (short) 0;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        serializableNode1.data = 10.0d;
        serializableNode1.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode1.rank;
        java.io.Serializable serializable13 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10.0d + "'", serializable13, 10.0d);
        org.junit.Assert.assertNotNull(serializableNode14);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 100L);
        serializableNode4.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        serializableNode9.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode14 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode9);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode9.parent;
        serializableNode6.parent = serializableNode9;
        serializableNode6.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        java.io.Serializable serializable28 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode30.parent;
        java.io.Serializable serializable35 = serializableNode34.data;
        int int36 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        int int44 = serializableNode41.rank;
        java.io.Serializable serializable45 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        serializableNode47.rank = (byte) 100;
        java.lang.Class<?> wildcardClass51 = serializableNode47.getClass();
        serializableNode41.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode41.parent;
        java.io.Serializable serializable54 = serializableNode41.data;
        serializableNode39.data = serializable54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode57.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode61.parent;
        java.io.Serializable serializable64 = serializableNode61.data;
        java.io.Serializable serializable65 = serializableNode61.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode67.parent;
        java.lang.Class<?> wildcardClass72 = serializableNode71.getClass();
        serializableNode61.data = wildcardClass72;
        serializableNode61.rank = 97;
        java.lang.Class<?> wildcardClass76 = serializableNode61.getClass();
        serializableNode39.data = wildcardClass76;
        serializableNode26.data = wildcardClass76;
        serializableNode6.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode81.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode81.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass86);
        serializableNode83.data = wildcardClass86;
        serializableNode6.data = wildcardClass86;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializable54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode10.parent;
        serializableNode10.rank = (byte) 10;
        int int18 = serializableNode10.rank;
        java.lang.Class<?> wildcardClass19 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass19);
        serializableNode7.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode7.parent;
        java.io.Serializable serializable24 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable24);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        serializableNode13.data = (byte) 1;
        serializableNode13.rank = (short) 1;
        java.io.Serializable serializable21 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode13.parent;
        serializableNode10.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        serializableNode24.parent = serializableNode32;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (byte) 1 + "'", serializable21, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + (byte) 1 + "'", serializable25, (byte) 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializableNode35);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = 'a';
        int int18 = serializableNode13.rank;
        serializableNode7.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        java.io.Serializable serializable24 = serializableNode23.data;
        serializableNode23.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode28.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        java.io.Serializable serializable35 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode32.parent;
        serializableNode32.rank = (byte) 10;
        int int40 = serializableNode32.rank;
        int int41 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode32.parent;
        serializableNode28.parent = serializableNode43;
        serializableNode7.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.io.Serializable serializable53 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode48.parent;
        java.io.Serializable serializable55 = serializableNode48.data;
        serializableNode46.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        serializableNode58.data = (byte) 1;
        serializableNode58.rank = (short) 1;
        java.io.Serializable serializable66 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode58.parent;
        serializableNode46.parent = serializableNode67;
        serializableNode46.rank = 0;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertEquals("'" + serializable66 + "' != '" + (byte) 1 + "'", serializable66, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode67);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        serializableNode1.rank = (byte) 10;
        int int13 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass14 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass34 = serializableNode33.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass34);
        serializableNode1.data = wildcardClass34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode1.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        int int32 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode34 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode33);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(serializableNode33);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode1.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        int int37 = serializableNode35.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode35.parent = serializableNode39;
        serializableNode35.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        serializableNode44.data = (short) 100;
        serializableNode35.parent = serializableNode44;
        java.io.Serializable serializable50 = serializableNode44.data;
        int int51 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode44.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        serializableNode54.rank = (short) -1;
        serializableNode54.rank = (short) -1;
        java.io.Serializable serializable61 = serializableNode54.data;
        int int62 = serializableNode54.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode63 = serializableNode54.parent;
        serializableNode52.parent = serializableNode63;
        java.lang.Class<?> wildcardClass65 = serializableNode52.getClass();
        serializableNode32.data = wildcardClass65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass65);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable76 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode75.parent;
        serializableNode73.parent = serializableNode77;
        int int79 = serializableNode77.rank;
        serializableNode77.rank = (byte) 0;
        serializableNode77.rank = (byte) 1;
        int int84 = serializableNode77.rank;
        java.lang.Class<?> wildcardClass85 = serializableNode77.getClass();
        serializableNode67.data = wildcardClass85;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = serializableNode67.parent;
        java.lang.Class<?> wildcardClass88 = serializableNode87.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + (short) 100 + "'", serializable50, (short) 100);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(serializableNode63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(serializableNode87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        java.io.Serializable serializable14 = serializableNode13.data;
        int int15 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode17.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        serializableNode6.parent = serializableNode19;
        serializableNode19.rank = (byte) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        int int24 = serializableNode19.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        serializableNode37.rank = (byte) 1;
        java.lang.Class<?> wildcardClass43 = serializableNode37.getClass();
        serializableNode30.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode30.parent;
        serializableNode19.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode47 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode19);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        serializableNode1.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode1.parent;
        int int12 = serializableNode11.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass2 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass2);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode9.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        serializableNode16.rank = (byte) 1;
        java.lang.Class<?> wildcardClass22 = serializableNode16.getClass();
        serializableNode9.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode9.parent;
        int int25 = serializableNode9.rank;
        serializableNode3.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        serializableNode30.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode34.parent;
        serializableNode34.rank = (byte) 10;
        int int42 = serializableNode34.rank;
        serializableNode30.parent = serializableNode34;
        int int44 = serializableNode30.rank;
        serializableNode9.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode9.parent;
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(serializableNode46);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode12.parent = serializableNode16;
        serializableNode12.data = '#';
        serializableNode10.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        serializableNode21.rank = (short) 100;
        java.lang.Class<?> wildcardClass24 = serializableNode21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        java.io.Serializable serializable7 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        java.io.Serializable serializable15 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int18 = serializableNode17.rank;
        int int19 = serializableNode17.rank;
        java.io.Serializable serializable20 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode14.parent = serializableNode27;
        serializableNode14.data = 10.0d;
        serializableNode1.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        java.io.Serializable serializable49 = serializableNode44.data;
        java.io.Serializable serializable50 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = serializableNode54.parent;
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        java.io.Serializable serializable61 = serializableNode58.data;
        java.io.Serializable serializable62 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        java.lang.Class<?> wildcardClass69 = serializableNode68.getClass();
        serializableNode58.data = wildcardClass69;
        serializableNode52.data = wildcardClass69;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode72 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass69);
        serializableNode44.data = wildcardClass69;
        serializableNode1.data = wildcardClass69;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode1.parent;
        int int76 = serializableNode1.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode58);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = '#';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializable21);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int23 = serializableNode22.rank;
        int int24 = serializableNode22.rank;
        java.io.Serializable serializable25 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode22.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int33 = serializableNode32.rank;
        int int34 = serializableNode32.rank;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode37 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode32);
        java.io.Serializable serializable38 = serializableNode32.data;
        java.lang.Class<?> wildcardClass39 = serializableNode32.getClass();
        serializableNode27.data = wildcardClass39;
        serializableNode10.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode10.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode42.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) false);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode3.rank = (byte) 100;
        serializableNode3.data = 'a';
        java.lang.Class<?> wildcardClass8 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass8);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        java.lang.Class<?> wildcardClass21 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass21);
        serializableNode9.data = wildcardClass21;
        serializableNode1.data = wildcardClass21;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode1.parent;
        int int27 = serializableNode26.rank;
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1));
        int int2 = serializableNode1.rank;
        java.io.Serializable serializable3 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + (-1) + "'", serializable3, (-1));
        org.junit.Assert.assertNotNull(serializableNode4);
        org.junit.Assert.assertNotNull(serializableNode5);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable18);
        serializableNode19.data = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        java.io.Serializable serializable30 = serializableNode27.data;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.lang.Class<?> wildcardClass38 = serializableNode37.getClass();
        serializableNode27.data = wildcardClass38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode27.parent;
        serializableNode40.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode40.parent;
        serializableNode19.parent = serializableNode40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable47 = serializableNode46.data;
        int int48 = serializableNode46.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode46.parent = serializableNode50;
        serializableNode46.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int56 = serializableNode55.rank;
        int int57 = serializableNode55.rank;
        serializableNode55.data = (short) 100;
        serializableNode46.parent = serializableNode55;
        java.io.Serializable serializable61 = serializableNode55.data;
        int int62 = serializableNode55.rank;
        serializableNode55.rank = 10;
        int int65 = serializableNode55.rank;
        serializableNode55.rank = (byte) 10;
        java.lang.Class<?> wildcardClass68 = serializableNode55.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass68);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode71.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = serializableNode71.parent;
        serializableNode71.rank = (byte) 10;
        int int79 = serializableNode71.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int82 = serializableNode81.rank;
        int int83 = serializableNode81.rank;
        java.io.Serializable serializable84 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode81.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode81.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass86);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode88 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass86);
        serializableNode71.data = wildcardClass86;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode90 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass86);
        serializableNode69.data = wildcardClass86;
        serializableNode40.data = wildcardClass86;
        serializableNode40.rank = 100;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + (short) 100 + "'", serializable61, (short) 100);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(serializableNode76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        serializableNode12.rank = (byte) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode17.rank = (byte) 100;
        serializableNode17.data = 'a';
        java.lang.Class<?> wildcardClass22 = serializableNode17.getClass();
        serializableNode15.data = wildcardClass22;
        java.lang.Class<?> wildcardClass24 = serializableNode15.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int8 = serializableNode7.rank;
        int int9 = serializableNode7.rank;
        java.io.Serializable serializable10 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable15 = serializableNode14.data;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode14.parent = serializableNode18;
        serializableNode12.parent = serializableNode14;
        int int21 = serializableNode12.rank;
        serializableNode1.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int25 = serializableNode24.rank;
        int int26 = serializableNode24.rank;
        java.io.Serializable serializable27 = serializableNode24.data;
        serializableNode12.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int31 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        serializableNode33.rank = (short) -1;
        serializableNode33.rank = (short) -1;
        java.io.Serializable serializable40 = serializableNode33.data;
        serializableNode30.parent = serializableNode33;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode47.data;
        java.io.Serializable serializable51 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode53.parent;
        java.lang.Class<?> wildcardClass58 = serializableNode57.getClass();
        serializableNode47.data = wildcardClass58;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        java.io.Serializable serializable65 = serializableNode64.data;
        serializableNode64.rank = (short) -1;
        java.lang.Class<?> wildcardClass68 = serializableNode64.getClass();
        serializableNode60.data = wildcardClass68;
        java.lang.Class<?> wildcardClass70 = serializableNode60.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass70);
        serializableNode33.data = wildcardClass70;
        serializableNode24.data = wildcardClass70;
        int int74 = serializableNode24.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        int int16 = serializableNode13.rank;
        java.io.Serializable serializable17 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        serializableNode19.rank = (byte) 100;
        java.lang.Class<?> wildcardClass23 = serializableNode19.getClass();
        serializableNode13.data = wildcardClass23;
        serializableNode9.data = wildcardClass23;
        serializableNode9.rank = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode9.parent;
        java.io.Serializable serializable29 = serializableNode28.data;
        serializableNode1.data = serializable29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass35 = serializableNode32.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass35);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        java.io.Serializable serializable42 = serializableNode41.data;
        serializableNode41.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode41.parent;
        int int46 = serializableNode45.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        int int53 = serializableNode50.rank;
        java.io.Serializable serializable54 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode56.parent;
        serializableNode56.rank = (byte) 100;
        java.lang.Class<?> wildcardClass60 = serializableNode56.getClass();
        serializableNode50.data = wildcardClass60;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode50.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass65 = serializableNode64.getClass();
        serializableNode62.data = wildcardClass65;
        serializableNode62.rank = (short) 100;
        serializableNode47.parent = serializableNode62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode62.parent;
        java.lang.Class<?> wildcardClass71 = serializableNode62.getClass();
        serializableNode36.data = wildcardClass71;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable75 = serializableNode74.data;
        int int76 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode78 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode74.parent = serializableNode78;
        serializableNode74.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int84 = serializableNode83.rank;
        int int85 = serializableNode83.rank;
        serializableNode83.data = (short) 100;
        serializableNode74.parent = serializableNode83;
        serializableNode36.parent = serializableNode83;
        java.io.Serializable serializable90 = serializableNode36.data;
        serializableNode1.data = serializable90;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializable29);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + serializable54 + "' != '" + 10L + "'", serializable54, 10L);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(serializable90);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        serializableNode14.rank = (short) -1;
        java.io.Serializable serializable21 = serializableNode14.data;
        int int22 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 'a');
        serializableNode14.parent = serializableNode24;
        serializableNode1.parent = serializableNode14;
        serializableNode14.rank = (byte) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode14.parent;
        java.lang.Class<?> wildcardClass30 = serializableNode14.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass30);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        java.io.Serializable serializable32 = null;
        serializableNode24.data = serializable32;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        serializableNode8.rank = (byte) 1;
        serializableNode8.data = 10.0d;
        serializableNode6.parent = serializableNode8;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode6.parent;
        java.io.Serializable serializable18 = serializableNode6.data;
        serializableNode6.rank = '#';
        serializableNode6.rank = (short) 10;
        int int23 = serializableNode6.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        serializableNode8.data = wildcardClass22;
        serializableNode1.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable28 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode27.parent;
        int int30 = serializableNode27.rank;
        java.io.Serializable serializable31 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode33.parent;
        serializableNode33.rank = (byte) 100;
        java.lang.Class<?> wildcardClass37 = serializableNode33.getClass();
        serializableNode27.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode27.parent;
        java.io.Serializable serializable40 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode27.parent;
        int int43 = serializableNode27.rank;
        serializableNode1.parent = serializableNode27;
        int int45 = serializableNode27.rank;
        java.lang.Class<?> wildcardClass46 = serializableNode27.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertNotNull(serializable40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = null;
        serializableNode1.parent = serializableNode6;
        java.lang.Class<?> wildcardClass8 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass8);
        serializableNode9.rank = 35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode9.parent;
        serializableNode9.rank = (short) 10;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(serializableNode12);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        int int18 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        serializableNode5.parent = serializableNode10;
        java.io.Serializable serializable21 = serializableNode5.data;
        java.io.Serializable serializable22 = serializableNode5.data;
        java.lang.Class<?> wildcardClass23 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass23);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass23);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        serializableNode9.rank = (short) 1;
        serializableNode9.rank = 52;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        java.io.Serializable serializable48 = serializableNode47.data;
        serializableNode47.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        int int52 = serializableNode47.rank;
        serializableNode47.rank = (byte) -1;
        serializableNode1.parent = serializableNode47;
        java.io.Serializable serializable56 = serializableNode47.data;
        java.io.Serializable serializable57 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        serializableNode60.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode64.parent;
        serializableNode64.rank = (byte) 10;
        int int72 = serializableNode64.rank;
        serializableNode60.parent = serializableNode64;
        int int74 = serializableNode60.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode76 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int77 = serializableNode76.rank;
        int int78 = serializableNode76.rank;
        java.io.Serializable serializable79 = serializableNode76.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable82 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode81.parent;
        serializableNode76.parent = serializableNode81;
        int int85 = serializableNode76.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode86 = serializableNode76.parent;
        int int87 = serializableNode76.rank;
        serializableNode60.parent = serializableNode76;
        java.io.Serializable serializable89 = serializableNode60.data;
        java.io.Serializable serializable90 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = serializableNode60.parent;
        serializableNode47.parent = serializableNode91;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + serializable79 + "' != '" + 10L + "'", serializable79, 10L);
        org.junit.Assert.assertEquals("'" + serializable82 + "' != '" + 10L + "'", serializable82, 10L);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(serializableNode86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + serializable89 + "' != '" + 10L + "'", serializable89, 10L);
        org.junit.Assert.assertEquals("'" + serializable90 + "' != '" + 10L + "'", serializable90, 10L);
        org.junit.Assert.assertNotNull(serializableNode91);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        serializableNode2.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int7 = serializableNode6.rank;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable12 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode11.parent;
        serializableNode6.parent = serializableNode11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        serializableNode2.parent = serializableNode15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode2.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode17.parent;
        int int20 = serializableNode17.rank;
        java.lang.Class<?> wildcardClass21 = serializableNode17.getClass();
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.String> strNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.String>("");
        java.lang.Class<?> wildcardClass2 = strNode1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode7.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode22.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        java.io.Serializable serializable35 = serializableNode32.data;
        java.io.Serializable serializable36 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.lang.Class<?> wildcardClass43 = serializableNode42.getClass();
        serializableNode32.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        serializableNode49.rank = (short) -1;
        java.lang.Class<?> wildcardClass53 = serializableNode49.getClass();
        serializableNode45.data = wildcardClass53;
        serializableNode45.rank = 1;
        serializableNode22.parent = serializableNode45;
        java.lang.Class<?> wildcardClass58 = serializableNode45.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass58);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass58);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        serializableNode18.rank = (short) 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        int int22 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        serializableNode1.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable14 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode13.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        serializableNode15.rank = (short) -1;
        int int19 = serializableNode15.rank;
        serializableNode1.parent = serializableNode15;
        java.io.Serializable serializable21 = serializableNode15.data;
        int int22 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode15.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        int int8 = serializableNode5.rank;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode11.parent;
        serializableNode11.rank = (byte) 100;
        java.lang.Class<?> wildcardClass15 = serializableNode11.getClass();
        serializableNode5.data = wildcardClass15;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode17.data = wildcardClass20;
        int int22 = serializableNode17.rank;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode17.parent;
        java.lang.Class<?> wildcardClass26 = serializableNode25.getClass();
        serializableNode1.data = wildcardClass26;
        int int28 = serializableNode1.rank;
        java.io.Serializable serializable29 = serializableNode1.data;
        java.lang.Class<?> wildcardClass30 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializable29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable6 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode8.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        serializableNode10.rank = (short) -1;
        java.lang.Class<?> wildcardClass14 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass14);
        serializableNode1.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        int int23 = serializableNode20.rank;
        java.io.Serializable serializable24 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode26.parent;
        serializableNode26.rank = (byte) 100;
        java.lang.Class<?> wildcardClass30 = serializableNode26.getClass();
        serializableNode20.data = wildcardClass30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode20.parent;
        java.io.Serializable serializable33 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode20.parent;
        int int35 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        serializableNode37.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int47 = serializableNode46.rank;
        int int48 = serializableNode46.rank;
        java.io.Serializable serializable49 = serializableNode46.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = serializableNode46.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        serializableNode50.parent = serializableNode54;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        serializableNode50.parent = serializableNode57;
        int int62 = serializableNode50.rank;
        java.io.Serializable serializable63 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int66 = serializableNode65.rank;
        int int67 = serializableNode65.rank;
        java.io.Serializable serializable68 = serializableNode65.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode65.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode72 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        serializableNode50.parent = serializableNode69;
        serializableNode44.parent = serializableNode50;
        java.lang.Class<?> wildcardClass76 = serializableNode50.getClass();
        serializableNode34.data = wildcardClass76;
        serializableNode18.data = wildcardClass76;
        java.io.Serializable serializable79 = serializableNode18.data;
        java.io.Serializable serializable80 = serializableNode18.data;
        int int81 = serializableNode18.rank;
        int int82 = serializableNode18.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializable33);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertNotNull(serializableNode50);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + serializable68 + "' != '" + 10L + "'", serializable68, 10L);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(serializableNode72);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(serializable79);
        org.junit.Assert.assertNotNull(serializable80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        java.io.Serializable serializable3 = serializableNode1.data;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (short) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertEquals("'" + serializable3 + "' != '" + 10L + "'", serializable3, 10L);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        int int17 = serializableNode10.rank;
        serializableNode10.rank = 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode10.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + (short) 100 + "'", serializable21, (short) 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode6.parent = serializableNode8;
        int int15 = serializableNode6.rank;
        int int16 = serializableNode6.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        serializableNode18.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        int int32 = serializableNode29.rank;
        java.io.Serializable serializable33 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode35.rank = (byte) 100;
        java.lang.Class<?> wildcardClass39 = serializableNode35.getClass();
        serializableNode29.data = wildcardClass39;
        serializableNode25.data = wildcardClass39;
        serializableNode18.data = wildcardClass39;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode44.parent;
        java.io.Serializable serializable49 = serializableNode48.data;
        int int50 = serializableNode48.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        serializableNode53.rank = (short) -1;
        serializableNode53.rank = (short) -1;
        java.io.Serializable serializable60 = serializableNode53.data;
        int int61 = serializableNode53.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode53.parent;
        serializableNode48.parent = serializableNode53;
        java.io.Serializable serializable64 = serializableNode48.data;
        serializableNode18.parent = serializableNode48;
        serializableNode6.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode6.parent;
        serializableNode67.rank = 35;
        serializableNode67.rank = (short) 0;
        java.io.Serializable serializable72 = serializableNode67.data;
        int int73 = serializableNode67.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertEquals("'" + serializable49 + "' != '" + 10L + "'", serializable49, 10L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertNotNull(serializable72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        java.lang.Class<?> wildcardClass40 = serializableNode8.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass40);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass40);
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type> typeNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.Type>((java.lang.reflect.Type) wildcardClass40);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass14 = serializableNode13.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass14);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        java.io.Serializable serializable12 = serializableNode10.data;
        java.lang.Class<?> wildcardClass13 = serializable12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass13);
        serializableNode1.parent = serializableNode14;
        int int16 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        serializableNode18.data = wildcardClass32;
        serializableNode18.rank = '#';
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode45.rank = (byte) 100;
        java.lang.Class<?> wildcardClass49 = serializableNode45.getClass();
        serializableNode39.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode39.parent;
        java.io.Serializable serializable52 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = serializableNode39.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int58 = serializableNode57.rank;
        int int59 = serializableNode57.rank;
        java.io.Serializable serializable60 = serializableNode57.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode57.parent = serializableNode62;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = serializableNode67.parent;
        java.io.Serializable serializable72 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode71.parent;
        java.io.Serializable serializable74 = serializableNode71.data;
        java.io.Serializable serializable75 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int78 = serializableNode77.rank;
        int int79 = serializableNode77.rank;
        java.io.Serializable serializable80 = serializableNode77.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode77.parent;
        java.lang.Class<?> wildcardClass82 = serializableNode81.getClass();
        serializableNode71.data = wildcardClass82;
        java.io.Serializable serializable84 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable84);
        serializableNode57.data = serializable84;
        serializableNode55.data = serializable84;
        serializableNode18.parent = serializableNode55;
        java.io.Serializable serializable89 = serializableNode18.data;
        java.lang.Class<?> wildcardClass90 = serializable89.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializable52);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertNotNull(serializableNode71);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(serializable84);
        org.junit.Assert.assertNotNull(serializable89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        serializableNode12.rank = (byte) 0;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        java.io.Serializable serializable28 = serializableNode27.data;
        int int29 = serializableNode27.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode27.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        serializableNode30.parent = serializableNode33;
        serializableNode30.rank = 0;
        int int37 = serializableNode30.rank;
        serializableNode12.parent = serializableNode30;
        java.lang.Class<?> wildcardClass39 = serializableNode12.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = serializableNode40.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode8.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        serializableNode12.rank = (byte) 10;
        int int20 = serializableNode12.rank;
        int int21 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode12.parent;
        serializableNode8.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode35.parent;
        serializableNode36.rank = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int41 = serializableNode40.rank;
        int int42 = serializableNode40.rank;
        java.io.Serializable serializable43 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable46 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode45.parent;
        serializableNode40.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        serializableNode36.parent = serializableNode49;
        serializableNode33.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence> charSequenceNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.CharSequence>((java.lang.CharSequence) "");
        java.lang.Class<?> wildcardClass54 = charSequenceNode53.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass54);
        serializableNode36.parent = serializableNode55;
        java.io.Serializable serializable57 = serializableNode55.data;
        serializableNode8.data = serializable57;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(serializable57);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        int int43 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable51 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode50.parent;
        serializableNode45.parent = serializableNode50;
        serializableNode45.data = true;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode45.parent;
        serializableNode14.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int61 = serializableNode60.rank;
        int int62 = serializableNode60.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int65 = serializableNode64.rank;
        int int66 = serializableNode64.rank;
        java.io.Serializable serializable67 = serializableNode64.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = serializableNode64.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = serializableNode64.parent;
        java.io.Serializable serializable70 = serializableNode69.data;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        serializableNode60.parent = serializableNode69;
        serializableNode45.parent = serializableNode60;
        serializableNode60.rank = ' ';
        java.lang.Class<?> wildcardClass77 = serializableNode60.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
        org.junit.Assert.assertNotNull(serializableNode68);
        org.junit.Assert.assertNotNull(serializableNode69);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        int int18 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        serializableNode13.parent = serializableNode20;
        int int22 = serializableNode13.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode13.parent;
        java.io.Serializable serializable24 = serializableNode13.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializable24);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode7.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable7 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode6.parent;
        serializableNode1.parent = serializableNode6;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode12.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        java.io.Serializable serializable23 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        int int26 = serializableNode24.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        serializableNode17.parent = serializableNode30;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        int int43 = serializableNode41.rank;
        serializableNode41.data = (-1);
        int int46 = serializableNode41.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode48.parent;
        serializableNode48.rank = (byte) 10;
        serializableNode48.data = 10L;
        serializableNode41.parent = serializableNode48;
        serializableNode30.parent = serializableNode48;
        serializableNode10.parent = serializableNode30;
        serializableNode10.rank = (byte) 1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode9.parent;
        serializableNode9.rank = (byte) 10;
        int int17 = serializableNode9.rank;
        java.lang.Class<?> wildcardClass18 = serializableNode9.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass18);
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        java.io.Serializable serializable25 = serializableNode24.data;
        serializableNode24.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode24.parent;
        int int29 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        int int36 = serializableNode33.rank;
        java.io.Serializable serializable37 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode39.parent;
        serializableNode39.rank = (byte) 100;
        java.lang.Class<?> wildcardClass43 = serializableNode39.getClass();
        serializableNode33.data = wildcardClass43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass48 = serializableNode47.getClass();
        serializableNode45.data = wildcardClass48;
        serializableNode45.rank = (short) 100;
        serializableNode30.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode45.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode53.parent;
        serializableNode53.rank = (byte) -1;
        java.io.Serializable serializable57 = serializableNode53.data;
        serializableNode5.data = serializable57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode59.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializable57);
        org.junit.Assert.assertNotNull(serializableNode59);
        org.junit.Assert.assertNotNull(serializableNode60);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.io.Serializable serializable7 = serializableNode6.data;
        int int8 = serializableNode6.rank;
        java.io.Serializable serializable9 = serializableNode6.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode16 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode11);
        java.io.Serializable serializable17 = serializableNode11.data;
        java.lang.Class<?> wildcardClass18 = serializableNode11.getClass();
        serializableNode6.data = wildcardClass18;
        java.lang.Class<?> wildcardClass20 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass20);
        serializableNode21.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        serializableNode25.parent = serializableNode30;
        int int34 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int37 = serializableNode36.rank;
        int int38 = serializableNode36.rank;
        java.io.Serializable serializable39 = serializableNode36.data;
        serializableNode36.rank = (byte) 1;
        serializableNode36.data = 10.0d;
        java.lang.Class<?> wildcardClass44 = serializableNode36.getClass();
        serializableNode25.data = wildcardClass44;
        serializableNode21.data = wildcardClass44;
        serializableNode21.rank = (byte) 1;
        java.lang.Class<?> wildcardClass49 = serializableNode21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable7 + "' != '" + 10L + "'", serializable7, 10L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + serializable39 + "' != '" + 10L + "'", serializable39, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode5.parent;
        serializableNode5.rank = 100;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode5.parent;
        serializableNode5.rank = 35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int28 = serializableNode27.rank;
        int int29 = serializableNode27.rank;
        java.io.Serializable serializable30 = serializableNode27.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode27.parent;
        java.io.Serializable serializable32 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode31.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int36 = serializableNode35.rank;
        int int37 = serializableNode35.rank;
        java.io.Serializable serializable38 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable42 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        serializableNode39.parent = serializableNode43;
        int int45 = serializableNode43.rank;
        serializableNode33.parent = serializableNode43;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) -1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode48.parent;
        serializableNode33.parent = serializableNode48;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int53 = serializableNode52.rank;
        int int54 = serializableNode52.rank;
        java.io.Serializable serializable55 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode52.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        serializableNode56.parent = serializableNode60;
        serializableNode48.parent = serializableNode60;
        java.lang.Class<?> wildcardClass63 = serializableNode60.getClass();
        serializableNode5.data = wildcardClass63;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode5.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializableNode65);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable9 = serializableNode8.data;
        int int10 = serializableNode8.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode8.parent = serializableNode12;
        serializableNode12.rank = 0;
        serializableNode12.data = 100;
        serializableNode6.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int21 = serializableNode20.rank;
        int int22 = serializableNode20.rank;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode25 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode20);
        serializableNode12.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int29 = serializableNode28.rank;
        int int30 = serializableNode28.rank;
        java.io.Serializable serializable31 = serializableNode28.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode28.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode32.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.rank = (short) -1;
        serializableNode37.rank = (short) -1;
        java.io.Serializable serializable44 = serializableNode37.data;
        int int45 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode37.parent;
        serializableNode32.parent = serializableNode37;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode32.parent;
        java.lang.Class<?> wildcardClass49 = serializableNode48.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass49);
        serializableNode12.parent = serializableNode50;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int54 = serializableNode53.rank;
        int int55 = serializableNode53.rank;
        java.io.Serializable serializable56 = serializableNode53.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable59 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode58.parent;
        serializableNode53.parent = serializableNode58;
        serializableNode53.data = true;
        serializableNode53.rank = 0;
        int int66 = serializableNode53.rank;
        serializableNode50.parent = serializableNode53;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode69 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int70 = serializableNode69.rank;
        int int71 = serializableNode69.rank;
        java.io.Serializable serializable72 = serializableNode69.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode73 = serializableNode69.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode69.parent;
        java.lang.Class<?> wildcardClass75 = serializableNode69.getClass();
        serializableNode53.data = wildcardClass75;
        java.io.Serializable serializable77 = serializableNode53.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializableNode48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode73);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(serializable77);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable30 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        int int39 = serializableNode37.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable50 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode49.parent;
        serializableNode47.parent = serializableNode51;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int55 = serializableNode54.rank;
        int int56 = serializableNode54.rank;
        java.io.Serializable serializable57 = serializableNode54.data;
        serializableNode47.parent = serializableNode54;
        int int59 = serializableNode47.rank;
        java.io.Serializable serializable60 = serializableNode47.data;
        serializableNode41.parent = serializableNode47;
        serializableNode29.parent = serializableNode41;
        serializableNode1.parent = serializableNode41;
        java.io.Serializable serializable64 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode66 = serializableNode41.parent;
        java.io.Serializable serializable67 = serializableNode41.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + serializable30 + "' != '" + 10L + "'", serializable30, 10L);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(serializableNode40);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + 10L + "'", serializable57, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertEquals("'" + serializable64 + "' != '" + 10L + "'", serializable64, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertNotNull(serializableNode66);
        org.junit.Assert.assertEquals("'" + serializable67 + "' != '" + 10L + "'", serializable67, 10L);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        java.io.Serializable serializable14 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode1.parent;
        int int16 = serializableNode1.rank;
        java.lang.Class<?> wildcardClass17 = serializableNode1.getClass();
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(serializable14);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        serializableNode1.rank = (byte) 10;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode11.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode17 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass16);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass16);
        serializableNode1.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        int int23 = serializableNode21.rank;
        serializableNode21.rank = 'a';
        java.lang.Class<?> wildcardClass26 = serializableNode21.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass26);
        serializableNode1.data = wildcardClass26;
        java.io.Serializable serializable29 = serializableNode1.data;
        serializableNode1.rank = 100;
        java.io.Serializable serializable32 = serializableNode1.data;
        serializableNode1.rank = '4';
        serializableNode1.rank = (short) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(serializable29);
        org.junit.Assert.assertNotNull(serializable32);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        serializableNode23.parent = serializableNode27;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int31 = serializableNode30.rank;
        int int32 = serializableNode30.rank;
        java.io.Serializable serializable33 = serializableNode30.data;
        serializableNode30.rank = (byte) 1;
        java.lang.Class<?> wildcardClass36 = serializableNode30.getClass();
        serializableNode23.data = wildcardClass36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        int int42 = serializableNode39.rank;
        java.io.Serializable serializable43 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode45.parent;
        serializableNode45.rank = (byte) 100;
        java.lang.Class<?> wildcardClass49 = serializableNode45.getClass();
        serializableNode39.data = wildcardClass49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode39.parent;
        java.io.Serializable serializable52 = serializableNode39.data;
        serializableNode23.parent = serializableNode39;
        java.io.Serializable serializable54 = serializableNode39.data;
        serializableNode8.parent = serializableNode39;
        serializableNode8.rank = ' ';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializable52);
        org.junit.Assert.assertNotNull(serializable54);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        java.io.Serializable serializable8 = serializableNode5.data;
        java.io.Serializable serializable9 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode5.data = wildcardClass16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode5.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        java.io.Serializable serializable20 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode22.parent = serializableNode26;
        java.lang.Class<?> wildcardClass28 = serializableNode26.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass28);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode31.parent;
        serializableNode31.rank = 1;
        java.io.Serializable serializable35 = serializableNode31.data;
        serializableNode18.data = serializable35;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertNotNull(serializable20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializable35);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode10.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable17 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        serializableNode14.parent = serializableNode18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        serializableNode14.parent = serializableNode21;
        int int26 = serializableNode14.rank;
        java.io.Serializable serializable27 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        int int35 = serializableNode33.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        serializableNode14.parent = serializableNode33;
        serializableNode8.parent = serializableNode14;
        serializableNode14.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int44 = serializableNode43.rank;
        int int45 = serializableNode43.rank;
        java.io.Serializable serializable46 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = serializableNode43.parent;
        java.io.Serializable serializable48 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode50 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode49);
        int int51 = serializableNode49.rank;
        serializableNode14.parent = serializableNode49;
        serializableNode14.rank = '4';
        int int55 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode14.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 10L + "'", serializable27, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertNotNull(serializableNode47);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNotNull(serializableNode56);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        int int24 = serializableNode21.rank;
        java.io.Serializable serializable25 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode27.parent;
        serializableNode27.rank = (byte) 100;
        java.lang.Class<?> wildcardClass31 = serializableNode27.getClass();
        serializableNode21.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode21.parent;
        java.io.Serializable serializable34 = serializableNode21.data;
        serializableNode5.parent = serializableNode21;
        java.io.Serializable serializable36 = serializableNode21.data;
        serializableNode21.rank = (byte) 10;
        int int39 = serializableNode21.rank;
        int int40 = serializableNode21.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + serializable25 + "' != '" + 10L + "'", serializable25, 10L);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertNotNull(serializable34);
        org.junit.Assert.assertNotNull(serializable36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass7 = serializableNode6.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode10.rank = (short) -1;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializableNode10);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        java.lang.Class<?> wildcardClass7 = serializableNode3.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass7);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        serializableNode11.rank = (short) -1;
        java.io.Serializable serializable16 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = (short) -1;
        java.lang.Class<?> wildcardClass24 = serializableNode20.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass24);
        serializableNode11.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode11.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        int int33 = serializableNode30.rank;
        java.io.Serializable serializable34 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode36.parent;
        serializableNode36.rank = (byte) 100;
        java.lang.Class<?> wildcardClass40 = serializableNode36.getClass();
        serializableNode30.data = wildcardClass40;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode30.parent;
        java.io.Serializable serializable43 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode30.parent;
        int int45 = serializableNode44.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int48 = serializableNode47.rank;
        int int49 = serializableNode47.rank;
        java.io.Serializable serializable50 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode47.parent;
        serializableNode47.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode47.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int57 = serializableNode56.rank;
        int int58 = serializableNode56.rank;
        java.io.Serializable serializable59 = serializableNode56.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode56.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable63 = serializableNode62.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = serializableNode62.parent;
        serializableNode60.parent = serializableNode64;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int68 = serializableNode67.rank;
        int int69 = serializableNode67.rank;
        java.io.Serializable serializable70 = serializableNode67.data;
        serializableNode60.parent = serializableNode67;
        int int72 = serializableNode60.rank;
        java.io.Serializable serializable73 = serializableNode60.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int76 = serializableNode75.rank;
        int int77 = serializableNode75.rank;
        java.io.Serializable serializable78 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode79 = serializableNode75.parent;
        java.io.Serializable serializable80 = serializableNode79.data;
        int int81 = serializableNode79.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode79.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode83 = serializableNode79.parent;
        serializableNode60.parent = serializableNode79;
        serializableNode54.parent = serializableNode60;
        java.lang.Class<?> wildcardClass86 = serializableNode60.getClass();
        serializableNode44.data = wildcardClass86;
        serializableNode28.data = wildcardClass86;
        java.io.Serializable serializable89 = serializableNode28.data;
        java.io.Serializable serializable90 = serializableNode28.data;
        serializableNode8.data = serializable90;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertNotNull(serializable43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + serializable59 + "' != '" + 10L + "'", serializable59, 10L);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertEquals("'" + serializable63 + "' != '" + 10L + "'", serializable63, 10L);
        org.junit.Assert.assertNotNull(serializableNode64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + serializable70 + "' != '" + 10L + "'", serializable70, 10L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertNotNull(serializableNode79);
        org.junit.Assert.assertEquals("'" + serializable80 + "' != '" + 10L + "'", serializable80, 10L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(serializableNode83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(serializable89);
        org.junit.Assert.assertNotNull(serializable90);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable11 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode10.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        serializableNode12.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        java.io.Serializable serializable22 = serializableNode19.data;
        serializableNode19.rank = (byte) 1;
        int int25 = serializableNode19.rank;
        serializableNode19.rank = '#';
        serializableNode8.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode37.rank = (byte) 100;
        serializableNode37.data = 'a';
        java.lang.Class<?> wildcardClass42 = serializableNode37.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass42);
        serializableNode32.data = wildcardClass42;
        serializableNode19.data = wildcardClass42;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode47 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable48 = serializableNode47.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode47.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        serializableNode49.rank = (short) -1;
        java.lang.Class<?> wildcardClass53 = serializableNode49.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass53);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass53);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass53);
        serializableNode19.parent = serializableNode56;
        int int58 = serializableNode19.rank;
        int int59 = serializableNode19.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 35 + "'", int58 == 35);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 35 + "'", int59 == 35);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (-1.0d));
        int int11 = serializableNode10.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        serializableNode13.rank = (short) -1;
        serializableNode13.rank = (short) -1;
        java.io.Serializable serializable20 = serializableNode13.data;
        serializableNode10.parent = serializableNode13;
        serializableNode7.parent = serializableNode13;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = serializableNode24.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.lang.Class<?> wildcardClass29 = serializableNode28.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement> annotatedElementNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.AnnotatedElement>((java.lang.reflect.AnnotatedElement) wildcardClass29);
        serializableNode26.data = wildcardClass29;
        serializableNode13.data = wildcardClass29;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass29);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        java.io.Serializable serializable0 = null;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable0);
        java.io.Serializable serializable2 = serializableNode1.data;
        serializableNode1.rank = 1;
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        serializableNode1.rank = (short) 1;
        java.io.Serializable serializable9 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        serializableNode1.rank = '4';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        serializableNode14.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode20.parent = serializableNode24;
        java.lang.Class<?> wildcardClass26 = serializableNode24.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass26);
        serializableNode14.parent = serializableNode27;
        serializableNode27.rank = (short) 0;
        serializableNode27.rank = 100;
        serializableNode27.rank = 10;
        serializableNode1.parent = serializableNode27;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + (byte) 1 + "'", serializable9, (byte) 1);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode9.rank = (byte) 100;
        serializableNode1.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        int int20 = serializableNode18.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode22.parent;
        serializableNode1.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode32.parent;
        serializableNode30.parent = serializableNode34;
        int int36 = serializableNode34.rank;
        serializableNode34.rank = (byte) 0;
        serializableNode34.rank = (byte) 1;
        int int41 = serializableNode34.rank;
        java.io.Serializable serializable42 = serializableNode34.data;
        serializableNode1.parent = serializableNode34;
        java.lang.Class<?> wildcardClass44 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass44);
        java.io.Serializable serializable46 = serializableNode45.data;
        java.io.Serializable serializable47 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = serializableNode45.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializable46);
        org.junit.Assert.assertNotNull(serializable47);
        org.junit.Assert.assertNotNull(serializableNode48);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        serializableNode3.rank = (short) 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode3.parent;
        serializableNode6.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode6.parent;
        serializableNode9.rank = (byte) 0;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode9);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode6.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        java.io.Serializable serializable17 = serializableNode10.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int20 = serializableNode19.rank;
        int int21 = serializableNode19.rank;
        serializableNode19.rank = (short) -1;
        serializableNode19.rank = (short) -1;
        java.io.Serializable serializable26 = serializableNode19.data;
        serializableNode10.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int30 = serializableNode29.rank;
        int int31 = serializableNode29.rank;
        java.io.Serializable serializable32 = serializableNode29.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode29.parent;
        java.io.Serializable serializable34 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode33.parent;
        java.io.Serializable serializable36 = serializableNode33.data;
        java.io.Serializable serializable37 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int40 = serializableNode39.rank;
        int int41 = serializableNode39.rank;
        java.io.Serializable serializable42 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode39.parent;
        java.lang.Class<?> wildcardClass44 = serializableNode43.getClass();
        serializableNode33.data = wildcardClass44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode33.parent;
        java.io.Serializable serializable47 = serializableNode46.data;
        serializableNode19.data = serializable47;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable47);
        java.io.Serializable serializable50 = serializableNode49.data;
        java.lang.Class<?> wildcardClass51 = serializableNode49.getClass();
        serializableNode8.data = wildcardClass51;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable> constableNode53 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.constant.Constable>((java.lang.constant.Constable) wildcardClass51);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode6);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + serializable42 + "' != '" + 10L + "'", serializable42, 10L);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializable47);
        org.junit.Assert.assertNotNull(serializable50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode2 = serializableNode1.parent;
        int int3 = serializableNode2.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode4 = null;
        serializableNode2.parent = serializableNode4;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode6 = serializableNode2.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode16.parent;
        int int19 = serializableNode16.rank;
        // The following exception was thrown during execution in test generation
        try {
            serializableNode6.parent = serializableNode16;
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(serializableNode2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(serializableNode6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (short) 100);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        java.io.Serializable serializable12 = serializableNode9.data;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        java.lang.Class<?> wildcardClass20 = serializableNode19.getClass();
        serializableNode9.data = wildcardClass20;
        serializableNode3.data = wildcardClass20;
        serializableNode1.data = wildcardClass20;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode24 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode26.parent;
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = serializableNode30.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        java.io.Serializable serializable38 = serializableNode37.data;
        serializableNode37.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        serializableNode33.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode41.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode43.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode52.parent;
        java.io.Serializable serializable55 = serializableNode52.data;
        java.io.Serializable serializable56 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode58 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int59 = serializableNode58.rank;
        int int60 = serializableNode58.rank;
        java.io.Serializable serializable61 = serializableNode58.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode58.parent;
        java.lang.Class<?> wildcardClass63 = serializableNode62.getClass();
        serializableNode52.data = wildcardClass63;
        serializableNode46.data = wildcardClass63;
        serializableNode44.parent = serializableNode46;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode67 = serializableNode46.parent;
        serializableNode1.parent = serializableNode67;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int71 = serializableNode70.rank;
        int int72 = serializableNode70.rank;
        java.io.Serializable serializable73 = serializableNode70.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = serializableNode70.parent;
        java.io.Serializable serializable75 = serializableNode74.data;
        int int76 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode74.parent;
        serializableNode74.data = (byte) -1;
        int int80 = serializableNode74.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = serializableNode74.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = serializableNode74.parent;
        java.lang.Class<?> wildcardClass83 = serializableNode82.getClass();
        serializableNode67.data = wildcardClass83;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializableNode33);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(serializableNode43);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertEquals("'" + serializable56 + "' != '" + 10L + "'", serializable56, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + serializable61 + "' != '" + 10L + "'", serializable61, 10L);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(serializableNode67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + serializable73 + "' != '" + 10L + "'", serializable73, 10L);
        org.junit.Assert.assertNotNull(serializableNode74);
        org.junit.Assert.assertEquals("'" + serializable75 + "' != '" + 10L + "'", serializable75, 10L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(serializableNode81);
        org.junit.Assert.assertNotNull(serializableNode82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.data = (byte) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable10 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = serializableNode9.parent;
        int int12 = serializableNode9.rank;
        java.io.Serializable serializable13 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode15.parent;
        serializableNode15.rank = (byte) 100;
        java.lang.Class<?> wildcardClass19 = serializableNode15.getClass();
        serializableNode9.data = wildcardClass19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass24 = serializableNode23.getClass();
        serializableNode21.data = wildcardClass24;
        int int26 = serializableNode21.rank;
        serializableNode21.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode21.parent;
        serializableNode7.parent = serializableNode29;
        int int31 = serializableNode29.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + 10L + "'", serializable10, 10L);
        org.junit.Assert.assertNotNull(serializableNode11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        java.lang.Class<?> wildcardClass8 = serializableNode5.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor> typeDescriptorNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.invoke.TypeDescriptor>((java.lang.invoke.TypeDescriptor) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeDescriptorNode9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int6 = serializableNode5.rank;
        int int7 = serializableNode5.rank;
        java.io.Serializable serializable8 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode5.parent;
        java.io.Serializable serializable11 = serializableNode10.data;
        int int12 = serializableNode10.rank;
        java.io.Serializable serializable13 = serializableNode10.data;
        serializableNode1.parent = serializableNode10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        int int22 = serializableNode20.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        serializableNode25.rank = (short) -1;
        serializableNode25.rank = (short) -1;
        java.io.Serializable serializable32 = serializableNode25.data;
        int int33 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode25.parent;
        serializableNode20.parent = serializableNode25;
        java.io.Serializable serializable36 = serializableNode20.data;
        java.lang.Class<?> wildcardClass37 = serializable36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass37);
        serializableNode10.data = wildcardClass37;
        com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration> genericDeclarationNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.lang.reflect.GenericDeclaration>((java.lang.reflect.GenericDeclaration) wildcardClass37);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable32 + "' != '" + 10L + "'", serializable32, 10L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int16 = serializableNode15.rank;
        int int17 = serializableNode15.rank;
        java.io.Serializable serializable18 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable22 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        serializableNode19.parent = serializableNode23;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        java.io.Serializable serializable29 = serializableNode26.data;
        serializableNode19.parent = serializableNode26;
        serializableNode1.parent = serializableNode19;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode33 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int34 = serializableNode33.rank;
        int int35 = serializableNode33.rank;
        java.io.Serializable serializable36 = serializableNode33.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode33.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable40 = serializableNode39.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode39.parent;
        serializableNode37.parent = serializableNode41;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int45 = serializableNode44.rank;
        int int46 = serializableNode44.rank;
        java.io.Serializable serializable47 = serializableNode44.data;
        serializableNode37.parent = serializableNode44;
        serializableNode19.parent = serializableNode44;
        java.io.Serializable serializable50 = serializableNode19.data;
        serializableNode19.rank = 'a';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode19.parent;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 10L + "'", serializable22, 10L);
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + 10L + "'", serializable47, 10L);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        java.io.Serializable serializable8 = serializableNode1.data;
        int int9 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode1.parent;
        java.io.Serializable serializable11 = serializableNode1.data;
        int int12 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = null;
        serializableNode1.parent = serializableNode13;
        java.io.Serializable serializable15 = serializableNode1.data;
        java.io.Serializable serializable16 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        java.io.Serializable serializable21 = serializableNode20.data;
        serializableNode20.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode20.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode24.parent;
        serializableNode1.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode1.parent;
        java.lang.Class<?> wildcardClass28 = serializableNode1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        int int4 = serializableNode1.rank;
        java.io.Serializable serializable5 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        serializableNode7.rank = (byte) 100;
        java.lang.Class<?> wildcardClass11 = serializableNode7.getClass();
        serializableNode1.data = wildcardClass11;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass16 = serializableNode15.getClass();
        serializableNode13.data = wildcardClass16;
        java.io.Serializable serializable18 = serializableNode13.data;
        serializableNode13.rank = (byte) 1;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + serializable5 + "' != '" + 10L + "'", serializable5, 10L);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(serializable18);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode10.rank = (byte) 100;
        serializableNode10.data = 'a';
        java.lang.Class<?> wildcardClass15 = serializableNode10.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass15);
        int int17 = serializableNode16.rank;
        serializableNode16.rank = 1;
        int int20 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        int int24 = serializableNode22.rank;
        serializableNode22.rank = 'a';
        int int27 = serializableNode22.rank;
        serializableNode16.parent = serializableNode22;
        serializableNode8.parent = serializableNode16;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = null;
        serializableNode8.parent = serializableNode30;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        serializableNode1.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.data = (short) 100;
        serializableNode1.parent = serializableNode10;
        java.io.Serializable serializable16 = serializableNode10.data;
        serializableNode10.rank = (short) 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode10.parent;
        int int20 = serializableNode19.rank;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + (short) 100 + "'", serializable16, (short) 100);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int10 = serializableNode9.rank;
        int int11 = serializableNode9.rank;
        java.io.Serializable serializable12 = serializableNode9.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        serializableNode13.parent = serializableNode17;
        int int19 = serializableNode17.rank;
        serializableNode7.parent = serializableNode17;
        java.io.Serializable serializable21 = serializableNode17.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode23.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        int int32 = serializableNode30.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode30.parent = serializableNode34;
        serializableNode34.rank = 0;
        serializableNode34.data = 100;
        serializableNode28.parent = serializableNode34;
        serializableNode34.rank = (byte) 0;
        int int43 = serializableNode34.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int46 = serializableNode45.rank;
        int int47 = serializableNode45.rank;
        java.io.Serializable serializable48 = serializableNode45.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = serializableNode45.parent;
        java.io.Serializable serializable50 = serializableNode49.data;
        int int51 = serializableNode49.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode49.parent;
        java.io.Serializable serializable53 = serializableNode52.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 0);
        serializableNode52.parent = serializableNode55;
        serializableNode52.rank = 0;
        int int59 = serializableNode52.rank;
        serializableNode34.parent = serializableNode52;
        java.lang.Class<?> wildcardClass61 = serializableNode34.getClass();
        serializableNode17.data = wildcardClass61;
        java.lang.Class<?> wildcardClass63 = serializableNode17.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + serializable12 + "' != '" + 10L + "'", serializable12, 10L);
        org.junit.Assert.assertNotNull(serializableNode13);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + serializable48 + "' != '" + 10L + "'", serializable48, 10L);
        org.junit.Assert.assertNotNull(serializableNode49);
        org.junit.Assert.assertEquals("'" + serializable50 + "' != '" + 10L + "'", serializable50, 10L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        serializableNode1.rank = (byte) 1;
        int int7 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode1.parent;
        serializableNode1.rank = (byte) 0;
        java.io.Serializable serializable11 = serializableNode1.data;
        serializableNode1.rank = (short) 10;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable16 = serializableNode15.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode15.parent;
        java.io.Serializable serializable18 = serializableNode17.data;
        serializableNode17.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode17.parent;
        int int22 = serializableNode21.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = serializableNode21.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode23.parent;
        java.lang.Class<?> wildcardClass25 = serializableNode23.getClass();
        serializableNode1.data = wildcardClass25;
        java.io.Serializable serializable27 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable27);
        java.io.Serializable serializable29 = serializableNode28.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertEquals("'" + serializable18 + "' != '" + 10L + "'", serializable18, 10L);
        org.junit.Assert.assertNotNull(serializableNode21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(serializableNode23);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializable27);
        org.junit.Assert.assertNotNull(serializable29);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        serializableNode1.rank = 1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable20 = serializableNode19.data;
        int int21 = serializableNode19.rank;
        serializableNode19.rank = 'a';
        int int24 = serializableNode19.rank;
        java.lang.Class<?> wildcardClass25 = serializableNode19.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass25);
        serializableNode1.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode1.parent;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + serializable20 + "' != '" + 10L + "'", serializable20, 10L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(serializableNode28);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        int int14 = serializableNode12.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode12.parent = serializableNode16;
        serializableNode12.data = '#';
        serializableNode10.parent = serializableNode12;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode10.parent;
        serializableNode10.rank = 'a';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        java.io.Serializable serializable25 = serializableNode12.data;
        serializableNode10.data = serializable25;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable29 = serializableNode28.data;
        int int30 = serializableNode28.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode28.parent = serializableNode32;
        serializableNode28.data = '#';
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        serializableNode37.data = (short) 100;
        serializableNode28.parent = serializableNode37;
        java.io.Serializable serializable43 = serializableNode37.data;
        int int44 = serializableNode37.rank;
        serializableNode37.rank = 10;
        java.io.Serializable serializable47 = serializableNode37.data;
        java.lang.Class<?> wildcardClass48 = serializable47.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>(serializable47);
        serializableNode10.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode51 = serializableNode10.parent;
        java.io.Serializable serializable52 = serializableNode51.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(serializable25);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 10L + "'", serializable29, 10L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + (short) 100 + "'", serializable43, (short) 100);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + serializable47 + "' != '" + (short) 100 + "'", serializable47, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(serializableNode51);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + (short) 100 + "'", serializable52, (short) 100);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        java.io.Serializable serializable6 = serializableNode5.data;
        int int7 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode5.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode8.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        serializableNode9.rank = (byte) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable21 = serializableNode20.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode20.parent;
        serializableNode18.parent = serializableNode22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int26 = serializableNode25.rank;
        int int27 = serializableNode25.rank;
        java.io.Serializable serializable28 = serializableNode25.data;
        serializableNode25.rank = (byte) 1;
        java.lang.Class<?> wildcardClass31 = serializableNode25.getClass();
        serializableNode18.data = wildcardClass31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable35 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode34.parent;
        int int37 = serializableNode34.rank;
        java.io.Serializable serializable38 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode40.parent;
        serializableNode40.rank = (byte) 100;
        java.lang.Class<?> wildcardClass44 = serializableNode40.getClass();
        serializableNode34.data = wildcardClass44;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode34.parent;
        java.io.Serializable serializable47 = serializableNode34.data;
        serializableNode18.parent = serializableNode34;
        serializableNode9.parent = serializableNode18;
        serializableNode9.rank = '4';
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable6 + "' != '" + 10L + "'", serializable6, 10L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + serializable28 + "' != '" + 10L + "'", serializable28, 10L);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + serializable35 + "' != '" + 10L + "'", serializable35, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + serializable38 + "' != '" + 10L + "'", serializable38, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertNotNull(serializable47);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode9.rank;
        serializableNode9.data = (-1);
        int int14 = serializableNode9.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int17 = serializableNode16.rank;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode16.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = serializableNode16.parent;
        serializableNode16.rank = (byte) 10;
        serializableNode16.data = 10L;
        serializableNode9.parent = serializableNode16;
        serializableNode9.rank = (short) 100;
        serializableNode9.rank = (byte) 10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertNotNull(serializableNode21);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode18.parent;
        serializableNode16.parent = serializableNode20;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode23 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int24 = serializableNode23.rank;
        int int25 = serializableNode23.rank;
        java.io.Serializable serializable26 = serializableNode23.data;
        serializableNode23.rank = (byte) 1;
        java.lang.Class<?> wildcardClass29 = serializableNode23.getClass();
        serializableNode16.data = wildcardClass29;
        serializableNode16.rank = 'a';
        int int33 = serializableNode16.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode16.parent;
        serializableNode9.parent = serializableNode34;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int38 = serializableNode37.rank;
        int int39 = serializableNode37.rank;
        java.io.Serializable serializable40 = serializableNode37.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode41 = serializableNode37.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable44 = serializableNode43.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode45 = serializableNode43.parent;
        serializableNode41.parent = serializableNode45;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        serializableNode41.parent = serializableNode48;
        java.io.Serializable serializable53 = serializableNode41.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode55 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) (byte) 10);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode55.parent;
        java.io.Serializable serializable57 = serializableNode56.data;
        serializableNode41.parent = serializableNode56;
        serializableNode56.rank = ' ';
        serializableNode34.parent = serializableNode56;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode62 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode64 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable65 = serializableNode64.data;
        int int66 = serializableNode64.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode64.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode71 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int72 = serializableNode71.rank;
        int int73 = serializableNode71.rank;
        java.io.Serializable serializable74 = serializableNode71.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode71.parent;
        java.io.Serializable serializable76 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode77 = serializableNode75.parent;
        java.io.Serializable serializable78 = serializableNode75.data;
        java.io.Serializable serializable79 = serializableNode75.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode81 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int82 = serializableNode81.rank;
        int int83 = serializableNode81.rank;
        java.io.Serializable serializable84 = serializableNode81.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = serializableNode81.parent;
        java.lang.Class<?> wildcardClass86 = serializableNode85.getClass();
        serializableNode75.data = wildcardClass86;
        serializableNode64.data = wildcardClass86;
        serializableNode64.rank = 0;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode91 = serializableNode64.parent;
        java.lang.Class<?> wildcardClass92 = serializableNode91.getClass();
        serializableNode34.data = wildcardClass92;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + serializable40 + "' != '" + 10L + "'", serializable40, 10L);
        org.junit.Assert.assertNotNull(serializableNode41);
        org.junit.Assert.assertEquals("'" + serializable44 + "' != '" + 10L + "'", serializable44, 10L);
        org.junit.Assert.assertNotNull(serializableNode45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertEquals("'" + serializable57 + "' != '" + (byte) 10 + "'", serializable57, (byte) 10);
        org.junit.Assert.assertNotNull(serializableNode62);
        org.junit.Assert.assertEquals("'" + serializable65 + "' != '" + 10L + "'", serializable65, 10L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + serializable74 + "' != '" + 10L + "'", serializable74, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertEquals("'" + serializable76 + "' != '" + 10L + "'", serializable76, 10L);
        org.junit.Assert.assertNotNull(serializableNode77);
        org.junit.Assert.assertEquals("'" + serializable78 + "' != '" + 10L + "'", serializable78, 10L);
        org.junit.Assert.assertEquals("'" + serializable79 + "' != '" + 10L + "'", serializable79, 10L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertEquals("'" + serializable84 + "' != '" + 10L + "'", serializable84, 10L);
        org.junit.Assert.assertNotNull(serializableNode85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(serializableNode91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int13 = serializableNode12.rank;
        int int14 = serializableNode12.rank;
        java.io.Serializable serializable15 = serializableNode12.data;
        serializableNode12.rank = (byte) 1;
        java.lang.Class<?> wildcardClass18 = serializableNode12.getClass();
        serializableNode5.data = wildcardClass18;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode27 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable31 = serializableNode30.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode30.parent;
        java.io.Serializable serializable33 = serializableNode32.data;
        serializableNode32.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = serializableNode32.parent;
        serializableNode28.parent = serializableNode36;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode36.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = serializableNode38.parent;
        int int40 = serializableNode39.rank;
        serializableNode5.parent = serializableNode39;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode27);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertEquals("'" + serializable31 + "' != '" + 10L + "'", serializable31, 10L);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertNotNull(serializableNode36);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertNotNull(serializableNode39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        serializableNode1.rank = (byte) 100;
        serializableNode1.data = 'a';
        java.lang.Class<?> wildcardClass6 = serializableNode1.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass6);
        int int8 = serializableNode7.rank;
        serializableNode7.rank = 1;
        int int11 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int15 = serializableNode14.rank;
        int int16 = serializableNode14.rank;
        java.io.Serializable serializable17 = serializableNode14.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode14.parent;
        serializableNode14.rank = (byte) 10;
        int int22 = serializableNode14.rank;
        int int23 = serializableNode14.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode14.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int27 = serializableNode26.rank;
        int int28 = serializableNode26.rank;
        serializableNode26.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable33 = serializableNode32.data;
        int int34 = serializableNode32.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode36 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode32.parent = serializableNode36;
        java.lang.Class<?> wildcardClass38 = serializableNode36.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode39 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass38);
        serializableNode26.parent = serializableNode39;
        serializableNode24.parent = serializableNode26;
        serializableNode12.parent = serializableNode26;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode43 = serializableNode12.parent;
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + serializable17 + "' != '" + 10L + "'", serializable17, 10L);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 10L + "'", serializable33, 10L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(serializableNode43);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        int int9 = serializableNode7.rank;
        serializableNode7.rank = 'a';
        java.lang.Class<?> wildcardClass12 = serializableNode7.getClass();
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass12);
        serializableNode1.data = wildcardClass12;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode15 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode16 = serializableNode1.parent;
        java.io.Serializable serializable17 = serializableNode16.data;
        int int18 = serializableNode16.rank;
        java.io.Serializable serializable19 = serializableNode16.data;
        java.io.Serializable serializable20 = serializableNode16.data;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(serializableNode16);
        org.junit.Assert.assertNotNull(serializable17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(serializable19);
        org.junit.Assert.assertNotNull(serializable20);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        int int3 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        serializableNode1.parent = serializableNode5;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int9 = serializableNode8.rank;
        int int10 = serializableNode8.rank;
        java.io.Serializable serializable11 = serializableNode8.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = serializableNode8.parent;
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        java.io.Serializable serializable15 = serializableNode12.data;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int19 = serializableNode18.rank;
        int int20 = serializableNode18.rank;
        java.io.Serializable serializable21 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = serializableNode18.parent;
        java.lang.Class<?> wildcardClass23 = serializableNode22.getClass();
        serializableNode12.data = wildcardClass23;
        serializableNode1.data = wildcardClass23;
        serializableNode1.rank = 0;
        serializableNode1.data = "";
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int32 = serializableNode31.rank;
        int int33 = serializableNode31.rank;
        java.io.Serializable serializable34 = serializableNode31.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode35 = serializableNode31.parent;
        java.io.Serializable serializable36 = serializableNode35.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode37 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode35.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        serializableNode42.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode46 = serializableNode42.parent;
        serializableNode38.parent = serializableNode46;
        serializableNode1.parent = serializableNode38;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode50 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int51 = serializableNode50.rank;
        int int52 = serializableNode50.rank;
        java.io.Serializable serializable53 = serializableNode50.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode50.parent;
        java.io.Serializable serializable55 = serializableNode54.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode56 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode57 = serializableNode54.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode59 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable60 = serializableNode59.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode59.parent;
        java.io.Serializable serializable62 = serializableNode61.data;
        serializableNode61.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode65 = serializableNode61.parent;
        serializableNode57.parent = serializableNode65;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode68 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable69 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode70 = serializableNode68.parent;
        int int71 = serializableNode68.rank;
        java.io.Serializable serializable72 = serializableNode68.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode74 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode75 = serializableNode74.parent;
        serializableNode74.rank = (byte) 100;
        java.lang.Class<?> wildcardClass78 = serializableNode74.getClass();
        serializableNode68.data = wildcardClass78;
        serializableNode65.parent = serializableNode68;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode82 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) "");
        java.lang.Class<?> wildcardClass83 = serializableNode82.getClass();
        serializableNode68.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode85 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        serializableNode38.data = wildcardClass83;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode87 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) wildcardClass83);
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + serializable11 + "' != '" + 10L + "'", serializable11, 10L);
        org.junit.Assert.assertNotNull(serializableNode12);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 10L + "'", serializable15, 10L);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + serializable21 + "' != '" + 10L + "'", serializable21, 10L);
        org.junit.Assert.assertNotNull(serializableNode22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 10L + "'", serializable34, 10L);
        org.junit.Assert.assertNotNull(serializableNode35);
        org.junit.Assert.assertEquals("'" + serializable36 + "' != '" + 10L + "'", serializable36, 10L);
        org.junit.Assert.assertNotNull(serializableNode37);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + serializable53 + "' != '" + 10L + "'", serializable53, 10L);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertEquals("'" + serializable55 + "' != '" + 10L + "'", serializable55, 10L);
        org.junit.Assert.assertNotNull(serializableNode56);
        org.junit.Assert.assertNotNull(serializableNode57);
        org.junit.Assert.assertEquals("'" + serializable60 + "' != '" + 10L + "'", serializable60, 10L);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + 10L + "'", serializable62, 10L);
        org.junit.Assert.assertNotNull(serializableNode65);
        org.junit.Assert.assertEquals("'" + serializable69 + "' != '" + 10L + "'", serializable69, 10L);
        org.junit.Assert.assertNotNull(serializableNode70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + serializable72 + "' != '" + 10L + "'", serializable72, 10L);
        org.junit.Assert.assertNotNull(serializableNode75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        java.io.Serializable serializable4 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode5 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable8 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        serializableNode5.parent = serializableNode9;
        int int11 = serializableNode5.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode13 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int14 = serializableNode13.rank;
        int int15 = serializableNode13.rank;
        java.io.Serializable serializable16 = serializableNode13.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode17 = serializableNode13.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode13.parent;
        java.io.Serializable serializable19 = serializableNode18.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode21 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int22 = serializableNode21.rank;
        int int23 = serializableNode21.rank;
        java.io.Serializable serializable24 = serializableNode21.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode25 = serializableNode21.parent;
        java.io.Serializable serializable26 = serializableNode25.data;
        int int27 = serializableNode25.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = serializableNode25.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode30 = serializableNode29.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode31 = serializableNode29.parent;
        serializableNode18.parent = serializableNode31;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int35 = serializableNode34.rank;
        int int36 = serializableNode34.rank;
        java.io.Serializable serializable37 = serializableNode34.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = serializableNode34.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode40 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable41 = serializableNode40.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode40.parent;
        serializableNode38.parent = serializableNode42;
        int int44 = serializableNode42.rank;
        serializableNode42.data = (-1);
        int int47 = serializableNode42.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode49 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int50 = serializableNode49.rank;
        int int51 = serializableNode49.rank;
        java.io.Serializable serializable52 = serializableNode49.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode53 = serializableNode49.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode54 = serializableNode49.parent;
        serializableNode49.rank = (byte) 10;
        serializableNode49.data = 10L;
        serializableNode42.parent = serializableNode49;
        serializableNode31.parent = serializableNode49;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode61 = serializableNode31.parent;
        serializableNode5.parent = serializableNode61;
        int int63 = serializableNode5.rank;
        int int64 = serializableNode5.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode5);
        org.junit.Assert.assertEquals("'" + serializable8 + "' != '" + 10L + "'", serializable8, 10L);
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode17);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertEquals("'" + serializable19 + "' != '" + 10L + "'", serializable19, 10L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 10L + "'", serializable24, 10L);
        org.junit.Assert.assertNotNull(serializableNode25);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(serializableNode28);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(serializableNode30);
        org.junit.Assert.assertNotNull(serializableNode31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + serializable37 + "' != '" + 10L + "'", serializable37, 10L);
        org.junit.Assert.assertNotNull(serializableNode38);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + serializable52 + "' != '" + 10L + "'", serializable52, 10L);
        org.junit.Assert.assertNotNull(serializableNode53);
        org.junit.Assert.assertNotNull(serializableNode54);
        org.junit.Assert.assertNotNull(serializableNode61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        serializableNode1.rank = (short) -1;
        int int8 = serializableNode1.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int11 = serializableNode10.rank;
        int int12 = serializableNode10.rank;
        serializableNode10.rank = (short) -1;
        serializableNode10.rank = (short) -1;
        serializableNode1.parent = serializableNode10;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int2 = serializableNode1.rank;
        int int3 = serializableNode1.rank;
        serializableNode1.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>> serializableNodeNode6 = new com.thealgorithms.datastructures.disjointsets.Node<com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>>(serializableNode1);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode1.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode8 = serializableNode7.parent;
        java.io.Serializable serializable9 = serializableNode7.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode11 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int12 = serializableNode11.rank;
        int int13 = serializableNode11.rank;
        java.io.Serializable serializable14 = serializableNode11.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode15 = serializableNode11.parent;
        java.io.Serializable serializable16 = serializableNode15.data;
        int int17 = serializableNode15.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = serializableNode15.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode20 = serializableNode19.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode22 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable23 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode22.parent;
        int int25 = serializableNode22.rank;
        java.io.Serializable serializable26 = serializableNode22.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode28 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode29 = serializableNode28.parent;
        serializableNode28.rank = (byte) 100;
        java.lang.Class<?> wildcardClass32 = serializableNode28.getClass();
        serializableNode22.data = wildcardClass32;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode34 = serializableNode22.parent;
        java.io.Serializable serializable35 = serializableNode22.data;
        serializableNode20.data = serializable35;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode38 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int39 = serializableNode38.rank;
        int int40 = serializableNode38.rank;
        java.io.Serializable serializable41 = serializableNode38.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode42 = serializableNode38.parent;
        java.io.Serializable serializable43 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode44 = serializableNode42.parent;
        java.io.Serializable serializable45 = serializableNode42.data;
        java.io.Serializable serializable46 = serializableNode42.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode48 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        int int49 = serializableNode48.rank;
        int int50 = serializableNode48.rank;
        java.io.Serializable serializable51 = serializableNode48.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode52 = serializableNode48.parent;
        java.lang.Class<?> wildcardClass53 = serializableNode52.getClass();
        serializableNode42.data = wildcardClass53;
        serializableNode42.rank = 97;
        java.lang.Class<?> wildcardClass57 = serializableNode42.getClass();
        serializableNode20.data = wildcardClass57;
        serializableNode7.data = wildcardClass57;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode60 = serializableNode7.parent;
        int int61 = serializableNode7.rank;
        int int62 = serializableNode7.rank;
        int int63 = serializableNode7.rank;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertNotNull(serializableNode8);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 10L + "'", serializable9, 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 10L + "'", serializable14, 10L);
        org.junit.Assert.assertNotNull(serializableNode15);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(serializableNode18);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(serializableNode20);
        org.junit.Assert.assertEquals("'" + serializable23 + "' != '" + 10L + "'", serializable23, 10L);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + serializable26 + "' != '" + 10L + "'", serializable26, 10L);
        org.junit.Assert.assertNotNull(serializableNode29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(serializableNode34);
        org.junit.Assert.assertNotNull(serializable35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + serializable41 + "' != '" + 10L + "'", serializable41, 10L);
        org.junit.Assert.assertNotNull(serializableNode42);
        org.junit.Assert.assertEquals("'" + serializable43 + "' != '" + 10L + "'", serializable43, 10L);
        org.junit.Assert.assertNotNull(serializableNode44);
        org.junit.Assert.assertEquals("'" + serializable45 + "' != '" + 10L + "'", serializable45, 10L);
        org.junit.Assert.assertEquals("'" + serializable46 + "' != '" + 10L + "'", serializable46, 10L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + serializable51 + "' != '" + 10L + "'", serializable51, 10L);
        org.junit.Assert.assertNotNull(serializableNode52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(serializableNode60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode1 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable2 = serializableNode1.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode3 = serializableNode1.parent;
        java.io.Serializable serializable4 = serializableNode3.data;
        serializableNode3.rank = (short) -1;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode7 = serializableNode3.parent;
        int int8 = serializableNode7.rank;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode9 = serializableNode7.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode10 = serializableNode9.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode12 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        java.io.Serializable serializable13 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode14 = serializableNode12.parent;
        int int15 = serializableNode12.rank;
        java.io.Serializable serializable16 = serializableNode12.data;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode18 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10L);
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode19 = serializableNode18.parent;
        serializableNode18.rank = (byte) 100;
        java.lang.Class<?> wildcardClass22 = serializableNode18.getClass();
        serializableNode12.data = wildcardClass22;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode24 = serializableNode12.parent;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode26 = new com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable>((java.io.Serializable) 10.0f);
        java.lang.Class<?> wildcardClass27 = serializableNode26.getClass();
        serializableNode24.data = wildcardClass27;
        serializableNode24.rank = (short) 100;
        serializableNode9.parent = serializableNode24;
        com.thealgorithms.datastructures.disjointsets.Node<java.io.Serializable> serializableNode32 = serializableNode24.parent;
        serializableNode32.rank = 52;
        serializableNode32.rank = (short) 0;
        serializableNode32.rank = (short) 100;
        java.io.Serializable serializable39 = serializableNode32.data;
        org.junit.Assert.assertEquals("'" + serializable2 + "' != '" + 10L + "'", serializable2, 10L);
        org.junit.Assert.assertNotNull(serializableNode3);
        org.junit.Assert.assertEquals("'" + serializable4 + "' != '" + 10L + "'", serializable4, 10L);
        org.junit.Assert.assertNotNull(serializableNode7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(serializableNode9);
        org.junit.Assert.assertNotNull(serializableNode10);
        org.junit.Assert.assertEquals("'" + serializable13 + "' != '" + 10L + "'", serializable13, 10L);
        org.junit.Assert.assertNotNull(serializableNode14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 10L + "'", serializable16, 10L);
        org.junit.Assert.assertNotNull(serializableNode19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(serializableNode24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(serializableNode32);
        org.junit.Assert.assertNotNull(serializable39);
    }
}

