package Combination;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.lang.Class<?> wildcardClass7 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 10);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = genericDeclarationArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.lang.Class<?> wildcardClass7 = strArraySetList6.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 6);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(typeSetList18);
        org.junit.Assert.assertNotNull(typeDescriptorSetList20);
        org.junit.Assert.assertNotNull(genericDeclarationSetList22);
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass21 = typeDescriptorSetList20.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(typeSetList16);
        org.junit.Assert.assertNotNull(objSetList18);
        org.junit.Assert.assertNotNull(typeDescriptorSetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = typeArraySetList12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNull(typeArraySetList12);
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        java.lang.String[][][] strArray0 = new java.lang.String[][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.lang.Class<?> wildcardClass5 = strArraySetList4.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        java.lang.Class[][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.lang.Class<?> wildcardClass13 = strArraySetList12.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[] wildcardClassOfFieldArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList2 = com.thealgorithms.backtracking.Combination.combination(wildcardClassOfFieldArray0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList2 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = strArraySetList8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray0, combinationArray1 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray2, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 6);
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.lang.Class<?> wildcardClass3 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 0);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(charSequenceArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 6);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList20 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.lang.Class<?> wildcardClass21 = wildcardClassArraySetList20.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(objSetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass15 = strSetList14.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(charSequenceSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(strSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(serializableSetList14);
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList20 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList20);
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList20 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 6);
        java.lang.Class<?> wildcardClass23 = genericDeclarationSetList22.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(typeSetList12);
        org.junit.Assert.assertNotNull(constableSetList14);
        org.junit.Assert.assertNotNull(typeSetList16);
        org.junit.Assert.assertNotNull(wildcardClassSetList18);
        org.junit.Assert.assertNull(wildcardClassSetList20);
        org.junit.Assert.assertNotNull(genericDeclarationSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 4);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList29 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, 3);
        java.lang.Class<?> wildcardClass30 = collectionArraySetList29.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNull(collectionArraySetList25);
        org.junit.Assert.assertNotNull(listArraySetList27);
        org.junit.Assert.assertNotNull(collectionArraySetList29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass11 = typeArraySetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList18 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList20 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass21 = strArraySetList20.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(strArraySetList14);
        org.junit.Assert.assertNotNull(strArraySetList16);
        org.junit.Assert.assertNotNull(strArraySetList18);
        org.junit.Assert.assertNotNull(strArraySetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        java.lang.String[][][][][][][] strArray0 = new java.lang.String[][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        com.thealgorithms.backtracking.Combination[][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.lang.Class<?> wildcardClass17 = wildcardClassArraySetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass15 = genericDeclarationArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationSetList14);
        org.junit.Assert.assertNotNull(typeSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList6 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) combinationArray0, 6);
        java.lang.Class<?> wildcardClass7 = serializableSetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(serializableSetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass15 = serializableSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(serializableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) 'a');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        java.lang.Class[][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][][][][][] classArray7 = new java.lang.Class[2][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray7;
        wildcardClassArray8[0] = wildcardClassArray2;
        wildcardClassArray8[1] = wildcardClassArray5;
        java.lang.Class[][][][][][][][][][][][][][] classArray14 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray15 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray14;
        java.lang.Class[][][][][][][][][][][][][][] classArray17 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray18 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray17;
        java.lang.Class[][][][][][][][][][][][][][][] classArray20 = new java.lang.Class[2][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray21 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray20;
        wildcardClassArray21[0] = wildcardClassArray15;
        wildcardClassArray21[1] = wildcardClassArray18;
        java.lang.Class[][][][][][][][][][][][][][] classArray27 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray28 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray27;
        java.lang.Class[][][][][][][][][][][][][][] classArray30 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray31 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray30;
        java.lang.Class[][][][][][][][][][][][][][][] classArray33 = new java.lang.Class[2][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray34 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray33;
        wildcardClassArray34[0] = wildcardClassArray28;
        wildcardClassArray34[1] = wildcardClassArray31;
        java.lang.Class[][][][][][][][][][][][][][] classArray40 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray41 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray40;
        java.lang.Class[][][][][][][][][][][][][][] classArray43 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray44 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray43;
        java.lang.Class[][][][][][][][][][][][][][][] classArray46 = new java.lang.Class[2][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray47 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray46;
        wildcardClassArray47[0] = wildcardClassArray41;
        wildcardClassArray47[1] = wildcardClassArray44;
        java.lang.Class[][][][][][][][][][][][][][] classArray53 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray54 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray53;
        java.lang.Class[][][][][][][][][][][][][][] classArray56 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray57 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray56;
        java.lang.Class[][][][][][][][][][][][][][][] classArray59 = new java.lang.Class[2][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray60 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray59;
        wildcardClassArray60[0] = wildcardClassArray54;
        wildcardClassArray60[1] = wildcardClassArray57;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray66 = new java.lang.Class[5][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray67 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray66;
        wildcardClassArray67[0] = wildcardClassArray8;
        wildcardClassArray67[1] = wildcardClassArray21;
        wildcardClassArray67[2] = wildcardClassArray34;
        wildcardClassArray67[3] = wildcardClassArray47;
        wildcardClassArray67[4] = wildcardClassArray60;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][]>> wildcardClassArraySetList79 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray67, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNotNull(wildcardClassArray18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertNotNull(classArray27);
        org.junit.Assert.assertNotNull(wildcardClassArray28);
        org.junit.Assert.assertNotNull(classArray30);
        org.junit.Assert.assertNotNull(wildcardClassArray31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(wildcardClassArray41);
        org.junit.Assert.assertNotNull(classArray43);
        org.junit.Assert.assertNotNull(wildcardClassArray44);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = listArraySetList8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNull(listArraySetList8);
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(constableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 5);
        java.lang.Class<?> wildcardClass13 = listArraySetList12.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (byte) 100);
        java.lang.Class<?> wildcardClass13 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        java.lang.Class[][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 6);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[][] classArray4 = new java.lang.Class[1][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray5 = (java.lang.Class<?>[][]) classArray4;
        wildcardClassArray5[0] = classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList9 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList11 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList13 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray5, 4);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList15 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray5, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList17 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList19 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray5, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList9);
        org.junit.Assert.assertNull(wildcardClassArraySetList11);
        org.junit.Assert.assertNotNull(constableArraySetList13);
        org.junit.Assert.assertNull(ofFieldArraySetList15);
        org.junit.Assert.assertNull(wildcardClassArraySetList17);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(ofFieldArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = setListSetList18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList63 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList65 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList67 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setCollectionSetList63);
        org.junit.Assert.assertNull(setIterableSetList65);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass3 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = genericDeclarationArraySetList8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(genericDeclarationArraySetList8);
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        java.lang.Class[][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][] classArray16 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][]) classArray16;
        java.lang.Class[][][][][][][][][][][][] classArray19 = new java.lang.Class[6][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][] wildcardClassArray20 = (java.lang.Class<?>[][][][][][][][][][][][]) classArray19;
        wildcardClassArray20[0] = wildcardClassArray2;
        wildcardClassArray20[1] = wildcardClassArray5;
        wildcardClassArray20[2] = wildcardClassArray8;
        wildcardClassArray20[3] = wildcardClassArray11;
        wildcardClassArray20[4] = wildcardClassArray14;
        wildcardClassArray20[5] = wildcardClassArray17;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList34 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList36 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList38 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList40 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClassArray20);
        org.junit.Assert.assertNull(wildcardClassArraySetList34);
        org.junit.Assert.assertNull(wildcardClassArraySetList36);
        org.junit.Assert.assertNull(wildcardClassArraySetList38);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 100);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(iterableArraySetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) '#');
        java.lang.Class<?> wildcardClass19 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNull(strSetList10);
        org.junit.Assert.assertNull(charSequenceSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass13 = constantDescSetList12.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(objSetList8);
        org.junit.Assert.assertNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray1 = new com.thealgorithms.backtracking.Combination[] { combination0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 2);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList11 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList13 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) 'a');
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationSetList3);
        org.junit.Assert.assertNotNull(combinationSetList5);
        org.junit.Assert.assertNotNull(combinationSetList7);
        org.junit.Assert.assertNotNull(combinationSetList9);
        org.junit.Assert.assertNull(combinationSetList11);
        org.junit.Assert.assertNotNull(combinationSetList13);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNull(typeSetList14);
        org.junit.Assert.assertNotNull(typeDescriptorSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass13 = constableArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(constableArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList20 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList22 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList24 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setCollectionSetList20);
        org.junit.Assert.assertNull(setCollectionSetList22);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        com.thealgorithms.backtracking.Combination[][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][] { combinationArray0, combinationArray1 };
        com.thealgorithms.backtracking.Combination[][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][] { combinationArray3, combinationArray4 };
        com.thealgorithms.backtracking.Combination[][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][] combinationArray7 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray8 = new com.thealgorithms.backtracking.Combination[][][][][] { combinationArray6, combinationArray7 };
        com.thealgorithms.backtracking.Combination[][][][] combinationArray9 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][] combinationArray10 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray11 = new com.thealgorithms.backtracking.Combination[][][][][] { combinationArray9, combinationArray10 };
        com.thealgorithms.backtracking.Combination[][][][] combinationArray12 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][] combinationArray13 = new com.thealgorithms.backtracking.Combination[][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][][][][] { combinationArray12, combinationArray13 };
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray15 = new com.thealgorithms.backtracking.Combination[][][][][][] { combinationArray2, combinationArray5, combinationArray8, combinationArray11, combinationArray14 };
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray16 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray15 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList18 = com.thealgorithms.backtracking.Combination.combination(combinationArray16, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList20 = com.thealgorithms.backtracking.Combination.combination(combinationArray16, (int) (short) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList22 = com.thealgorithms.backtracking.Combination.combination(combinationArray16, (int) (byte) 100);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray7);
        org.junit.Assert.assertNotNull(combinationArray8);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray10);
        org.junit.Assert.assertNotNull(combinationArray11);
        org.junit.Assert.assertNotNull(combinationArray12);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray15);
        org.junit.Assert.assertNotNull(combinationArray16);
        org.junit.Assert.assertNull(combinationArraySetList18);
        org.junit.Assert.assertNotNull(combinationArraySetList20);
        org.junit.Assert.assertNotNull(combinationArraySetList22);
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = strComparableSetList14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNull(constantDescSetList12);
        org.junit.Assert.assertNull(strComparableSetList14);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List[][][][][][][][] listArray4 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray4;
        java.util.List[][][][][][][][] listArray7 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNull(listArraySetList23);
        org.junit.Assert.assertNull(listArraySetList25);
        org.junit.Assert.assertNull(listArraySetList27);
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination1 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination2 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination3 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination4 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray5 = new com.thealgorithms.backtracking.Combination[] { combination0, combination1, combination2, combination3, combination4 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray5, 0);
        java.lang.Class<?> wildcardClass8 = combinationArray5.getClass();
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNull(combinationSetList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(serializableSetList12);
        org.junit.Assert.assertNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        java.util.List[][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 4);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = listArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass7 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        java.lang.Class[][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][][][][] classArray4 = new java.lang.Class[1][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray4;
        wildcardClassArray5[0] = wildcardClassArray2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList9 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList21 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, 100);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList23 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList27 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 100);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(collectionArraySetList21);
        org.junit.Assert.assertNotNull(collectionArraySetList23);
        org.junit.Assert.assertNotNull(collectionArraySetList25);
        org.junit.Assert.assertNotNull(collectionArraySetList27);
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2, combinationArray3, combinationArray4 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray7 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray8 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray9 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray10 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray11 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray6, combinationArray7, combinationArray8, combinationArray9, combinationArray10 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray12 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray13 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray15 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray16 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray17 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray12, combinationArray13, combinationArray14, combinationArray15, combinationArray16 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray18 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray19 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray20 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray21 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray22 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray23 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray18, combinationArray19, combinationArray20, combinationArray21, combinationArray22 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray24 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray25 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray26 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray27 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray28 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray29 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray24, combinationArray25, combinationArray26, combinationArray27, combinationArray28 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray30 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] { combinationArray5, combinationArray11, combinationArray17, combinationArray23, combinationArray29 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray31 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray32 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray33 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray34 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray35 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray36 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray31, combinationArray32, combinationArray33, combinationArray34, combinationArray35 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray37 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray38 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray39 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray40 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray41 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray42 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray37, combinationArray38, combinationArray39, combinationArray40, combinationArray41 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray43 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray44 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray45 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray46 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray47 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray48 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray43, combinationArray44, combinationArray45, combinationArray46, combinationArray47 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray49 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray50 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray51 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray52 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray53 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray54 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray49, combinationArray50, combinationArray51, combinationArray52, combinationArray53 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray55 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray56 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray57 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray58 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray59 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray60 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray55, combinationArray56, combinationArray57, combinationArray58, combinationArray59 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray61 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] { combinationArray36, combinationArray42, combinationArray48, combinationArray54, combinationArray60 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray62 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray63 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray64 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray65 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray66 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray67 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray62, combinationArray63, combinationArray64, combinationArray65, combinationArray66 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray68 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray69 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray70 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray71 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray72 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray73 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray68, combinationArray69, combinationArray70, combinationArray71, combinationArray72 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray74 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray75 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray76 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray77 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray78 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray79 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray74, combinationArray75, combinationArray76, combinationArray77, combinationArray78 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray80 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray81 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray82 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray83 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray84 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray85 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray80, combinationArray81, combinationArray82, combinationArray83, combinationArray84 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray86 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray87 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray88 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray89 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray90 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray91 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] { combinationArray86, combinationArray87, combinationArray88, combinationArray89, combinationArray90 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray92 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] { combinationArray67, combinationArray73, combinationArray79, combinationArray85, combinationArray91 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray93 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray30, combinationArray61, combinationArray92 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList95 = com.thealgorithms.backtracking.Combination.combination(combinationArray93, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray7);
        org.junit.Assert.assertNotNull(combinationArray8);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray10);
        org.junit.Assert.assertNotNull(combinationArray11);
        org.junit.Assert.assertNotNull(combinationArray12);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray15);
        org.junit.Assert.assertNotNull(combinationArray16);
        org.junit.Assert.assertNotNull(combinationArray17);
        org.junit.Assert.assertNotNull(combinationArray18);
        org.junit.Assert.assertNotNull(combinationArray19);
        org.junit.Assert.assertNotNull(combinationArray20);
        org.junit.Assert.assertNotNull(combinationArray21);
        org.junit.Assert.assertNotNull(combinationArray22);
        org.junit.Assert.assertNotNull(combinationArray23);
        org.junit.Assert.assertNotNull(combinationArray24);
        org.junit.Assert.assertNotNull(combinationArray25);
        org.junit.Assert.assertNotNull(combinationArray26);
        org.junit.Assert.assertNotNull(combinationArray27);
        org.junit.Assert.assertNotNull(combinationArray28);
        org.junit.Assert.assertNotNull(combinationArray29);
        org.junit.Assert.assertNotNull(combinationArray30);
        org.junit.Assert.assertNotNull(combinationArray31);
        org.junit.Assert.assertNotNull(combinationArray32);
        org.junit.Assert.assertNotNull(combinationArray33);
        org.junit.Assert.assertNotNull(combinationArray34);
        org.junit.Assert.assertNotNull(combinationArray35);
        org.junit.Assert.assertNotNull(combinationArray36);
        org.junit.Assert.assertNotNull(combinationArray37);
        org.junit.Assert.assertNotNull(combinationArray38);
        org.junit.Assert.assertNotNull(combinationArray39);
        org.junit.Assert.assertNotNull(combinationArray40);
        org.junit.Assert.assertNotNull(combinationArray41);
        org.junit.Assert.assertNotNull(combinationArray42);
        org.junit.Assert.assertNotNull(combinationArray43);
        org.junit.Assert.assertNotNull(combinationArray44);
        org.junit.Assert.assertNotNull(combinationArray45);
        org.junit.Assert.assertNotNull(combinationArray46);
        org.junit.Assert.assertNotNull(combinationArray47);
        org.junit.Assert.assertNotNull(combinationArray48);
        org.junit.Assert.assertNotNull(combinationArray49);
        org.junit.Assert.assertNotNull(combinationArray50);
        org.junit.Assert.assertNotNull(combinationArray51);
        org.junit.Assert.assertNotNull(combinationArray52);
        org.junit.Assert.assertNotNull(combinationArray53);
        org.junit.Assert.assertNotNull(combinationArray54);
        org.junit.Assert.assertNotNull(combinationArray55);
        org.junit.Assert.assertNotNull(combinationArray56);
        org.junit.Assert.assertNotNull(combinationArray57);
        org.junit.Assert.assertNotNull(combinationArray58);
        org.junit.Assert.assertNotNull(combinationArray59);
        org.junit.Assert.assertNotNull(combinationArray60);
        org.junit.Assert.assertNotNull(combinationArray61);
        org.junit.Assert.assertNotNull(combinationArray62);
        org.junit.Assert.assertNotNull(combinationArray63);
        org.junit.Assert.assertNotNull(combinationArray64);
        org.junit.Assert.assertNotNull(combinationArray65);
        org.junit.Assert.assertNotNull(combinationArray66);
        org.junit.Assert.assertNotNull(combinationArray67);
        org.junit.Assert.assertNotNull(combinationArray68);
        org.junit.Assert.assertNotNull(combinationArray69);
        org.junit.Assert.assertNotNull(combinationArray70);
        org.junit.Assert.assertNotNull(combinationArray71);
        org.junit.Assert.assertNotNull(combinationArray72);
        org.junit.Assert.assertNotNull(combinationArray73);
        org.junit.Assert.assertNotNull(combinationArray74);
        org.junit.Assert.assertNotNull(combinationArray75);
        org.junit.Assert.assertNotNull(combinationArray76);
        org.junit.Assert.assertNotNull(combinationArray77);
        org.junit.Assert.assertNotNull(combinationArray78);
        org.junit.Assert.assertNotNull(combinationArray79);
        org.junit.Assert.assertNotNull(combinationArray80);
        org.junit.Assert.assertNotNull(combinationArray81);
        org.junit.Assert.assertNotNull(combinationArray82);
        org.junit.Assert.assertNotNull(combinationArray83);
        org.junit.Assert.assertNotNull(combinationArray84);
        org.junit.Assert.assertNotNull(combinationArray85);
        org.junit.Assert.assertNotNull(combinationArray86);
        org.junit.Assert.assertNotNull(combinationArray87);
        org.junit.Assert.assertNotNull(combinationArray88);
        org.junit.Assert.assertNotNull(combinationArray89);
        org.junit.Assert.assertNotNull(combinationArray90);
        org.junit.Assert.assertNotNull(combinationArray91);
        org.junit.Assert.assertNotNull(combinationArray92);
        org.junit.Assert.assertNotNull(combinationArray93);
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        java.lang.Class[][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][] classArray16 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][]) classArray16;
        java.lang.Class[][][][][][][][][][][][] classArray19 = new java.lang.Class[6][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][] wildcardClassArray20 = (java.lang.Class<?>[][][][][][][][][][][][]) classArray19;
        wildcardClassArray20[0] = wildcardClassArray2;
        wildcardClassArray20[1] = wildcardClassArray5;
        wildcardClassArray20[2] = wildcardClassArray8;
        wildcardClassArray20[3] = wildcardClassArray11;
        wildcardClassArray20[4] = wildcardClassArray14;
        wildcardClassArray20[5] = wildcardClassArray17;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList34 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList36 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList38 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList40 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClassArray20);
        org.junit.Assert.assertNull(wildcardClassArraySetList34);
        org.junit.Assert.assertNull(wildcardClassArraySetList36);
        org.junit.Assert.assertNull(wildcardClassArraySetList38);
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass21 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(iterableArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
        org.junit.Assert.assertNotNull(collectionArraySetList18);
        org.junit.Assert.assertNotNull(iterableArraySetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, 2);
        java.lang.Class<?> wildcardClass11 = strComparableSetList10.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass15 = wildcardClassArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 3);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass13 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(constableArraySetList6);
        org.junit.Assert.assertNotNull(charSequenceArraySetList8);
        org.junit.Assert.assertNotNull(charSequenceArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList20 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.lang.Class<?> wildcardClass21 = wildcardClassSetList20.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(typeSetList18);
        org.junit.Assert.assertNotNull(wildcardClassSetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(typeArraySetList14);
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 4);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, 5);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass7 = wildcardClassArraySetList6.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] { combinationArray0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 6);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNull(combinationArraySetList3);
        org.junit.Assert.assertNotNull(combinationArraySetList5);
        org.junit.Assert.assertNotNull(combinationArraySetList7);
        org.junit.Assert.assertNotNull(combinationArraySetList9);
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        java.lang.Class[][][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray16 = new java.lang.Class[5][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray16;
        wildcardClassArray17[0] = wildcardClassArray2;
        wildcardClassArray17[1] = wildcardClassArray5;
        wildcardClassArray17[2] = wildcardClassArray8;
        wildcardClassArray17[3] = wildcardClassArray11;
        wildcardClassArray17[4] = wildcardClassArray14;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][]>> wildcardClassArraySetList29 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray17, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][]>> wildcardClassArraySetList31 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray17, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNull(wildcardClassArraySetList29);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] { combinationArray0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList11 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNull(combinationArraySetList3);
        org.junit.Assert.assertNotNull(combinationArraySetList5);
        org.junit.Assert.assertNull(combinationArraySetList7);
        org.junit.Assert.assertNotNull(combinationArraySetList9);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.lang.Class<?> wildcardClass17 = iterableArraySetList16.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(iterableArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(iterableArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        java.lang.Class[][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList18 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(constableSetList16);
        org.junit.Assert.assertNull(strSetList18);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass15 = serializableSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(serializableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList20 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList22 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList24 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setListSetList20);
        org.junit.Assert.assertNull(setCollectionSetList22);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = listArraySetList10.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass17 = typeDescriptorSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(constableSetList14);
        org.junit.Assert.assertNotNull(typeDescriptorSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        java.lang.String[][][][][][][][][] strArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray0 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray4 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] { combinationArray1, combinationArray3, combinationArray5 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray7 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray8 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray7 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray9 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray10 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray9 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray11 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray12 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray11 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] combinationArray13 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] { combinationArray8, combinationArray10, combinationArray12 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][][] { combinationArray6, combinationArray13 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][]>> combinationArraySetList16 = com.thealgorithms.backtracking.Combination.combination(combinationArray14, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray7);
        org.junit.Assert.assertNotNull(combinationArray8);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray10);
        org.junit.Assert.assertNotNull(combinationArray11);
        org.junit.Assert.assertNotNull(combinationArray12);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, 2);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray6, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList20 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, 2);
        java.lang.Class<?> wildcardClass23 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(serializableSetList16);
        org.junit.Assert.assertNotNull(constableSetList18);
        org.junit.Assert.assertNotNull(strSetList20);
        org.junit.Assert.assertNotNull(charSequenceSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = null;
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        org.junit.Assert.assertNull(combinationArraySetList2);
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.lang.Class<?> wildcardClass15 = combinationArraySetList14.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass21 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(typeSetList16);
        org.junit.Assert.assertNotNull(objSetList18);
        org.junit.Assert.assertNotNull(typeDescriptorSetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.lang.Class<?> wildcardClass11 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList21 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, 5);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(collectionArraySetList21);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2, combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNull(combinationArraySetList6);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) '4');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNull(objSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(charSequenceSetList16);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNull(objSetList8);
        org.junit.Assert.assertNotNull(annotatedElementSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (short) 1);
        java.lang.Class<?> wildcardClass17 = strSetList16.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(strSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        java.lang.Class[][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(typeArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) ' ');
        java.lang.Class<?> wildcardClass24 = listArraySetList23.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        java.util.List[][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 4);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.lang.Class<?> wildcardClass9 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) 'a');
        java.lang.Class<?> wildcardClass9 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass13 = strSetList12.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNull(strSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.lang.Class<?> wildcardClass5 = combinationArraySetList4.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList2 = com.thealgorithms.backtracking.Combination.combination(strSetListArray0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, 4);
        java.lang.Class<?> wildcardClass19 = strComparableSetList18.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(constableSetList16);
        org.junit.Assert.assertNotNull(strComparableSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        java.lang.Class[][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) '4');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] { combinationArray0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNull(combinationArraySetList3);
        org.junit.Assert.assertNotNull(combinationArraySetList5);
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList4 = com.thealgorithms.backtracking.Combination.combination((java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList6 = com.thealgorithms.backtracking.Combination.combination((java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1, 100);
        java.lang.Class<?> wildcardClass9 = listArray1.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(setListSetList4);
        org.junit.Assert.assertNull(setListSetList6);
        org.junit.Assert.assertNotNull(setListSetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray0 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray4 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray7 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray6 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray8 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray9 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray8 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray10 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray1, combinationArray3, combinationArray5, combinationArray7, combinationArray9 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray11 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray12 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray11 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray13 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray13 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray15 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray16 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray15 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray17 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray18 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray17 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray19 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray20 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray19 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray21 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray12, combinationArray14, combinationArray16, combinationArray18, combinationArray20 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray22 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray23 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray22 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray24 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray25 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray24 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray26 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray27 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray26 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray28 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray29 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray28 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray30 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray31 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray30 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray32 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray23, combinationArray25, combinationArray27, combinationArray29, combinationArray31 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray33 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray34 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray33 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray35 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray36 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray35 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray37 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray38 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray37 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray39 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray40 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray39 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray41 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray42 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray41 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray43 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray34, combinationArray36, combinationArray38, combinationArray40, combinationArray42 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray44 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray45 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray44 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray46 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray47 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray46 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray48 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray49 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray48 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray50 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray51 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray50 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray52 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray53 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray52 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray54 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray45, combinationArray47, combinationArray49, combinationArray51, combinationArray53 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray55 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] { combinationArray10, combinationArray21, combinationArray32, combinationArray43, combinationArray54 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][]>> combinationArraySetList57 = com.thealgorithms.backtracking.Combination.combination(combinationArray55, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray7);
        org.junit.Assert.assertNotNull(combinationArray8);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray10);
        org.junit.Assert.assertNotNull(combinationArray11);
        org.junit.Assert.assertNotNull(combinationArray12);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray15);
        org.junit.Assert.assertNotNull(combinationArray16);
        org.junit.Assert.assertNotNull(combinationArray17);
        org.junit.Assert.assertNotNull(combinationArray18);
        org.junit.Assert.assertNotNull(combinationArray19);
        org.junit.Assert.assertNotNull(combinationArray20);
        org.junit.Assert.assertNotNull(combinationArray21);
        org.junit.Assert.assertNotNull(combinationArray22);
        org.junit.Assert.assertNotNull(combinationArray23);
        org.junit.Assert.assertNotNull(combinationArray24);
        org.junit.Assert.assertNotNull(combinationArray25);
        org.junit.Assert.assertNotNull(combinationArray26);
        org.junit.Assert.assertNotNull(combinationArray27);
        org.junit.Assert.assertNotNull(combinationArray28);
        org.junit.Assert.assertNotNull(combinationArray29);
        org.junit.Assert.assertNotNull(combinationArray30);
        org.junit.Assert.assertNotNull(combinationArray31);
        org.junit.Assert.assertNotNull(combinationArray32);
        org.junit.Assert.assertNotNull(combinationArray33);
        org.junit.Assert.assertNotNull(combinationArray34);
        org.junit.Assert.assertNotNull(combinationArray35);
        org.junit.Assert.assertNotNull(combinationArray36);
        org.junit.Assert.assertNotNull(combinationArray37);
        org.junit.Assert.assertNotNull(combinationArray38);
        org.junit.Assert.assertNotNull(combinationArray39);
        org.junit.Assert.assertNotNull(combinationArray40);
        org.junit.Assert.assertNotNull(combinationArray41);
        org.junit.Assert.assertNotNull(combinationArray42);
        org.junit.Assert.assertNotNull(combinationArray43);
        org.junit.Assert.assertNotNull(combinationArray44);
        org.junit.Assert.assertNotNull(combinationArray45);
        org.junit.Assert.assertNotNull(combinationArray46);
        org.junit.Assert.assertNotNull(combinationArray47);
        org.junit.Assert.assertNotNull(combinationArray48);
        org.junit.Assert.assertNotNull(combinationArray49);
        org.junit.Assert.assertNotNull(combinationArray50);
        org.junit.Assert.assertNotNull(combinationArray51);
        org.junit.Assert.assertNotNull(combinationArray52);
        org.junit.Assert.assertNotNull(combinationArray53);
        org.junit.Assert.assertNotNull(combinationArray54);
        org.junit.Assert.assertNotNull(combinationArray55);
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        java.util.List[][][][][][][] listArray1 = new java.util.List[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) 'a');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.lang.Class<?> wildcardClass7 = strArraySetList6.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, (int) (short) 10);
        java.lang.Class<?> wildcardClass15 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 3);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = listArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) '4');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) 'a');
        java.lang.Class<?> wildcardClass13 = constableSetList12.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constantDescSetList8);
        org.junit.Assert.assertNotNull(constableSetList10);
        org.junit.Assert.assertNotNull(constableSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList63 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList65 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList67 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setListSetList63);
        org.junit.Assert.assertNull(setCollectionSetList65);
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray6, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, 2);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = strComparableSetList16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNull(constableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(strComparableSetList14);
        org.junit.Assert.assertNull(strComparableSetList16);
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass11 = listArraySetList10.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        java.lang.CharSequence[][] charSequenceArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList2 = com.thealgorithms.backtracking.Combination.combination(charSequenceArray0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 2);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass21 = typeArraySetList20.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(typeArraySetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 5);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '4');
        java.lang.Class<?> wildcardClass11 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 2);
        java.lang.Class<?> wildcardClass17 = listArraySetList16.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(iterableArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 10);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray6, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, 5);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList22 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (byte) 10);
        java.lang.Class<?> wildcardClass23 = strSetList22.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(strComparableSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
        org.junit.Assert.assertNotNull(charSequenceSetList20);
        org.junit.Assert.assertNotNull(strSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 4);
        java.lang.Class<?> wildcardClass15 = combinationArray4.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
        org.junit.Assert.assertNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        java.lang.Class[][][][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray16 = new java.lang.Class[0][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray16;
        java.lang.Class[][][][][][][][][][][][][][][][][] classArray19 = new java.lang.Class[6][][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][][] wildcardClassArray20 = (java.lang.Class<?>[][][][][][][][][][][][][][][][][]) classArray19;
        wildcardClassArray20[0] = wildcardClassArray2;
        wildcardClassArray20[1] = wildcardClassArray5;
        wildcardClassArray20[2] = wildcardClassArray8;
        wildcardClassArray20[3] = wildcardClassArray11;
        wildcardClassArray20[4] = wildcardClassArray14;
        wildcardClassArray20[5] = wildcardClassArray17;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][][]>> wildcardClassArraySetList34 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClassArray20);
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass15 = wildcardClassArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass21 = constantDescSetList20.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(constableSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
        org.junit.Assert.assertNotNull(constantDescSetList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        java.util.List[][][] listArray1 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray1;
        java.util.List[][][] listArray4 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray4;
        java.util.List[][][] listArray7 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray7;
        java.util.List[][][] listArray10 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray10;
        java.util.List[][][] listArray13 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray14 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray13;
        java.util.List[][][] listArray16 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray17 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray16;
        java.util.List[][][][] listArray19 = new java.util.List[6][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray20 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray19;
        strSetListArray20[0] = strSetListArray2;
        strSetListArray20[1] = strSetListArray5;
        strSetListArray20[2] = strSetListArray8;
        strSetListArray20[3] = strSetListArray11;
        strSetListArray20[4] = strSetListArray14;
        strSetListArray20[5] = strSetListArray17;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList34 = com.thealgorithms.backtracking.Combination.combination(strSetListArray20, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList36 = com.thealgorithms.backtracking.Combination.combination(strSetListArray20, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNotNull(listArray13);
        org.junit.Assert.assertNotNull(strSetListArray14);
        org.junit.Assert.assertNotNull(listArray16);
        org.junit.Assert.assertNotNull(strSetListArray17);
        org.junit.Assert.assertNotNull(listArray19);
        org.junit.Assert.assertNotNull(strSetListArray20);
        org.junit.Assert.assertNull(listArraySetList34);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) ' ');
        java.lang.Class<?> wildcardClass15 = listArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 3);
        java.lang.Class<?> wildcardClass13 = collectionArraySetList12.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        java.util.List[][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 4);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 100);
        java.lang.Class<?> wildcardClass11 = listArraySetList10.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 6);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(annotatedElementSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = combinationArraySetList12.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.lang.Class<?> wildcardClass19 = wildcardClassArraySetList18.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(objSetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 6);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(constableSetList10);
        org.junit.Assert.assertNotNull(constableSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        java.util.Collection[] collectionArray1 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.util.TreeSet<java.lang.String>>[] strSetCollectionArray2 = (java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1;
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList4 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList6 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, 4);
        java.lang.Class<?> wildcardClass9 = setCollectionSetList8.getClass();
        org.junit.Assert.assertNotNull(collectionArray1);
        org.junit.Assert.assertNotNull(strSetCollectionArray2);
        org.junit.Assert.assertNotNull(setCollectionSetList4);
        org.junit.Assert.assertNotNull(setCollectionSetList6);
        org.junit.Assert.assertNotNull(setCollectionSetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass9 = typeArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        com.thealgorithms.backtracking.Combination[][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 5);
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List[][][][][] listArray4 = new java.util.List[1][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]) listArray4;
        strSetListArray5[0] = strSetListArray2;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList9 = com.thealgorithms.backtracking.Combination.combination(strSetListArray5, 5);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList11 = com.thealgorithms.backtracking.Combination.combination(strSetListArray5, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList13 = com.thealgorithms.backtracking.Combination.combination(strSetListArray5, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList15 = com.thealgorithms.backtracking.Combination.combination(strSetListArray5, 2);
        java.lang.Class<?> wildcardClass16 = strSetListArray5.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArraySetList9);
        org.junit.Assert.assertNotNull(listArraySetList11);
        org.junit.Assert.assertNull(listArraySetList13);
        org.junit.Assert.assertNotNull(listArraySetList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(iterableArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        com.thealgorithms.backtracking.Combination[][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 5);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass13 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNotNull(constableArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(charSequenceArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = wildcardClassSetList16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(annotatedElementSetList14);
        org.junit.Assert.assertNull(wildcardClassSetList16);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNull(strSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 6);
        java.lang.Class<?> wildcardClass15 = collectionArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(collectionArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        java.lang.CharSequence[] charSequenceArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList2 = com.thealgorithms.backtracking.Combination.combination(charSequenceArray0, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = wildcardClassArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(objSetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass17 = genericDeclarationArraySetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 100);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = genericDeclarationSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList14);
        org.junit.Assert.assertNotNull(genericDeclarationSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        java.lang.Class<?>[][][][][][][][][][][][][] wildcardClassArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList2 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        java.lang.Class[][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        java.util.Collection[][] collectionArray0 = new java.util.Collection[][] {};
        java.util.Collection[][][] collectionArray1 = new java.util.Collection[][][] { collectionArray0 };
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList3 = com.thealgorithms.backtracking.Combination.combination(collectionArray1, 2);
        org.junit.Assert.assertNotNull(collectionArray0);
        org.junit.Assert.assertNotNull(collectionArray1);
        org.junit.Assert.assertNotNull(collectionArraySetList3);
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '#');
        java.lang.Class<?> wildcardClass15 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass11 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList63 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList65 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setCollectionSetList63);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, 1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList10);
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) '4');
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        java.lang.Class<?>[][][][][][][][][][][][][][][][][] wildcardClassArray0 = null;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][][]>> wildcardClassArraySetList2 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray0, (int) (short) 0);
        org.junit.Assert.assertNull(wildcardClassArraySetList2);
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = listArraySetList10.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNull(wildcardClassOfFieldSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.lang.String[][][] strArray1 = new java.lang.String[][][] { strArray0 };
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList3 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList5 = com.thealgorithms.backtracking.Combination.combination(strArray1, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList7 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList9 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArraySetList3);
        org.junit.Assert.assertNotNull(strArraySetList5);
        org.junit.Assert.assertNotNull(strArraySetList7);
        org.junit.Assert.assertNotNull(strArraySetList9);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNull(combinationArraySetList6);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        java.util.List[][][] listArray1 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray1;
        java.util.List[][][] listArray4 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray4;
        java.util.List[][][] listArray7 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray7;
        java.util.List[][][] listArray10 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray10;
        java.util.List[][][] listArray13 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray14 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray13;
        java.util.List[][][] listArray16 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray17 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray16;
        java.util.List[][][][] listArray19 = new java.util.List[6][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray20 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray19;
        strSetListArray20[0] = strSetListArray2;
        strSetListArray20[1] = strSetListArray5;
        strSetListArray20[2] = strSetListArray8;
        strSetListArray20[3] = strSetListArray11;
        strSetListArray20[4] = strSetListArray14;
        strSetListArray20[5] = strSetListArray17;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList34 = com.thealgorithms.backtracking.Combination.combination(strSetListArray20, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList36 = com.thealgorithms.backtracking.Combination.combination(strSetListArray20, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNotNull(listArray13);
        org.junit.Assert.assertNotNull(strSetListArray14);
        org.junit.Assert.assertNotNull(listArray16);
        org.junit.Assert.assertNotNull(strSetListArray17);
        org.junit.Assert.assertNotNull(listArray19);
        org.junit.Assert.assertNotNull(strSetListArray20);
        org.junit.Assert.assertNull(listArraySetList34);
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] { combinationArray0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNull(combinationArraySetList3);
        org.junit.Assert.assertNotNull(combinationArraySetList5);
        org.junit.Assert.assertNull(combinationArraySetList7);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 4);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        java.util.List[][][][][][] listArray1 = new java.util.List[0][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.lang.Class[][] classArray4 = new java.lang.Class[1][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray5 = (java.lang.Class<?>[][]) classArray4;
        wildcardClassArray5[0] = classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList9 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList11 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray5, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList13 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray5, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList15 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray5, 3);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray5, (int) ' ');
        java.lang.Class<?> wildcardClass18 = wildcardClassArray5.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList9);
        org.junit.Assert.assertNull(genericDeclarationArraySetList11);
        org.junit.Assert.assertNull(ofFieldArraySetList13);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList15);
        org.junit.Assert.assertNotNull(constableArraySetList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList20 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList22 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setListSetList20);
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList18 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.lang.Class<?> wildcardClass19 = strArraySetList18.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(strArraySetList14);
        org.junit.Assert.assertNotNull(strArraySetList16);
        org.junit.Assert.assertNotNull(strArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.lang.Class<?> wildcardClass15 = genericDeclarationSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        java.lang.Class[][][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][][][][][][] classArray16 = new java.lang.Class[5][][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][][][][][][]) classArray16;
        wildcardClassArray17[0] = wildcardClassArray2;
        wildcardClassArray17[1] = wildcardClassArray5;
        wildcardClassArray17[2] = wildcardClassArray8;
        wildcardClassArray17[3] = wildcardClassArray11;
        wildcardClassArray17[4] = wildcardClassArray14;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][]>> wildcardClassArraySetList29 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray17, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][][]>> wildcardClassArraySetList31 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray17, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNull(wildcardClassArraySetList29);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = wildcardClassArraySetList4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassArraySetList4);
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList22 = com.thealgorithms.backtracking.Combination.combination(strArray2, 2);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(constableSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
        org.junit.Assert.assertNull(charSequenceSetList20);
        org.junit.Assert.assertNotNull(strSetList22);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass11 = wildcardClassArraySetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray2 = new java.lang.String[][] { strArray1 };
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray5 = new java.lang.String[][] { strArray4 };
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray8 = new java.lang.String[][] { strArray7 };
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray11 = new java.lang.String[][] { strArray10 };
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray14 = new java.lang.String[][] { strArray13 };
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray17 = new java.lang.String[][] { strArray16 };
        java.lang.String[][][] strArray18 = new java.lang.String[][][] { strArray2, strArray5, strArray8, strArray11, strArray14, strArray17 };
        java.lang.String[][][][] strArray19 = new java.lang.String[][][][] { strArray18 };
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strArray19, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strArray19, 5);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strArray19, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList31 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) '4');
        java.lang.Class<?> wildcardClass32 = strArray19.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(strArraySetList21);
        org.junit.Assert.assertNotNull(strArraySetList23);
        org.junit.Assert.assertNotNull(strArraySetList25);
        org.junit.Assert.assertNotNull(strArraySetList27);
        org.junit.Assert.assertNull(strArraySetList29);
        org.junit.Assert.assertNotNull(strArraySetList31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(genericDeclarationSetList18);
        org.junit.Assert.assertNull(wildcardClassOfFieldSetList20);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        java.lang.Class<?>[][] wildcardClassArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList2 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass23 = typeArraySetList22.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(typeArraySetList18);
        org.junit.Assert.assertNull(typeArraySetList20);
        org.junit.Assert.assertNotNull(typeArraySetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = constantDescSetList10.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        java.lang.Class[][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        java.lang.Iterable[] iterableArray1 = new java.lang.Iterable[0];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.TreeSet<java.lang.String>>[] strSetIterableArray2 = (java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) iterableArray1;
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList4 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList6 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList8 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList10 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList12 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList14 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) '4');
        java.lang.Class<?> wildcardClass15 = setIterableSetList14.getClass();
        org.junit.Assert.assertNotNull(iterableArray1);
        org.junit.Assert.assertNotNull(strSetIterableArray2);
        org.junit.Assert.assertNotNull(setIterableSetList4);
        org.junit.Assert.assertNull(setIterableSetList6);
        org.junit.Assert.assertNotNull(setIterableSetList8);
        org.junit.Assert.assertNotNull(setIterableSetList10);
        org.junit.Assert.assertNotNull(setIterableSetList12);
        org.junit.Assert.assertNotNull(setIterableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        java.lang.reflect.GenericDeclaration[][][][] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[][][][] {};
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass9 = genericDeclarationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(genericDeclarationArray0);
        org.junit.Assert.assertNull(genericDeclarationArraySetList2);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.lang.Class<?> wildcardClass13 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNull(strArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        java.lang.Iterable[] iterableArray1 = new java.lang.Iterable[0];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.TreeSet<java.lang.String>>[] strSetIterableArray2 = (java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) iterableArray1;
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList4 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList6 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList8 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList10 = com.thealgorithms.backtracking.Combination.combination(strSetIterableArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass11 = setIterableSetList10.getClass();
        org.junit.Assert.assertNotNull(iterableArray1);
        org.junit.Assert.assertNotNull(strSetIterableArray2);
        org.junit.Assert.assertNotNull(setIterableSetList4);
        org.junit.Assert.assertNotNull(setIterableSetList6);
        org.junit.Assert.assertNotNull(setIterableSetList8);
        org.junit.Assert.assertNotNull(setIterableSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) '#');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList20 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 5);
        java.lang.Class<?> wildcardClass23 = charSequenceSetList22.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNull(strComparableSetList18);
        org.junit.Assert.assertNull(strSetList20);
        org.junit.Assert.assertNotNull(charSequenceSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = genericDeclarationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        java.util.List[][][] listArray1 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray1;
        java.util.List[][][] listArray4 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray4;
        java.util.List[][][][] listArray7 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        java.util.List[][][] listArray17 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray18 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray17;
        java.util.List[][][][] listArray20 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray21 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray20;
        strSetListArray21[0] = strSetListArray15;
        strSetListArray21[1] = strSetListArray18;
        java.util.List[][][] listArray27 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray28 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray27;
        java.util.List[][][] listArray30 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray31 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray30;
        java.util.List[][][][] listArray33 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray34 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray33;
        strSetListArray34[0] = strSetListArray28;
        strSetListArray34[1] = strSetListArray31;
        java.util.List[][][] listArray40 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray41 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray40;
        java.util.List[][][] listArray43 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray44 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray43;
        java.util.List[][][][] listArray46 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray47 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray46;
        strSetListArray47[0] = strSetListArray41;
        strSetListArray47[1] = strSetListArray44;
        java.util.List[][][][][] listArray53 = new java.util.List[4][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][] strSetListArray54 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]) listArray53;
        strSetListArray54[0] = strSetListArray8;
        strSetListArray54[1] = strSetListArray21;
        strSetListArray54[2] = strSetListArray34;
        strSetListArray54[3] = strSetListArray47;
        java.util.List[][][][][][] listArray64 = new java.util.List[1][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][] strSetListArray65 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]) listArray64;
        strSetListArray65[0] = strSetListArray54;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList69 = com.thealgorithms.backtracking.Combination.combination(strSetListArray65, (int) (short) 100);
        java.lang.Class<?> wildcardClass70 = strSetListArray65.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArray17);
        org.junit.Assert.assertNotNull(strSetListArray18);
        org.junit.Assert.assertNotNull(listArray20);
        org.junit.Assert.assertNotNull(strSetListArray21);
        org.junit.Assert.assertNotNull(listArray27);
        org.junit.Assert.assertNotNull(strSetListArray28);
        org.junit.Assert.assertNotNull(listArray30);
        org.junit.Assert.assertNotNull(strSetListArray31);
        org.junit.Assert.assertNotNull(listArray33);
        org.junit.Assert.assertNotNull(strSetListArray34);
        org.junit.Assert.assertNotNull(listArray40);
        org.junit.Assert.assertNotNull(strSetListArray41);
        org.junit.Assert.assertNotNull(listArray43);
        org.junit.Assert.assertNotNull(strSetListArray44);
        org.junit.Assert.assertNotNull(listArray46);
        org.junit.Assert.assertNotNull(strSetListArray47);
        org.junit.Assert.assertNotNull(listArray53);
        org.junit.Assert.assertNotNull(strSetListArray54);
        org.junit.Assert.assertNotNull(listArray64);
        org.junit.Assert.assertNotNull(strSetListArray65);
        org.junit.Assert.assertNotNull(listArraySetList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass11 = genericDeclarationSetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(genericDeclarationSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass13 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(charSequenceSetList10);
        org.junit.Assert.assertNotNull(constableSetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 5);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) '#');
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(constableArraySetList6);
        org.junit.Assert.assertNotNull(charSequenceArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(charSequenceArraySetList12);
        org.junit.Assert.assertNotNull(charSequenceArraySetList14);
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList14);
        org.junit.Assert.assertNotNull(annotatedElementSetList16);
        org.junit.Assert.assertNotNull(typeSetList18);
        org.junit.Assert.assertNotNull(typeSetList20);
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        java.util.Collection[][][] collectionArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList2 = com.thealgorithms.backtracking.Combination.combination(collectionArray0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 10);
        java.lang.Class<?> wildcardClass17 = charSequenceArraySetList16.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(constableArraySetList6);
        org.junit.Assert.assertNotNull(charSequenceArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(constableArraySetList12);
        org.junit.Assert.assertNotNull(charSequenceArraySetList14);
        org.junit.Assert.assertNotNull(charSequenceArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) '#');
        java.lang.Class<?> wildcardClass19 = charSequenceSetList18.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNull(strSetList10);
        org.junit.Assert.assertNull(charSequenceSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass17 = wildcardClassArraySetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        java.lang.Class[][][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass7 = wildcardClassArraySetList6.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList22 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList24 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList26 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass27 = genericDeclarationArraySetList26.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList20);
        org.junit.Assert.assertNull(wildcardClassArraySetList22);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList24);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray0 = null;
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        org.junit.Assert.assertNull(combinationArraySetList2);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '4');
        java.lang.Class<?> wildcardClass7 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList20 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 5);
        java.lang.Class<?> wildcardClass23 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNull(strComparableSetList18);
        org.junit.Assert.assertNull(strSetList20);
        org.junit.Assert.assertNotNull(charSequenceSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) ' ');
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNull(listArraySetList8);
        org.junit.Assert.assertNotNull(iterableArraySetList10);
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = genericDeclarationArraySetList14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNull(genericDeclarationArraySetList14);
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass15 = serializableSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(serializableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray1 = new com.thealgorithms.backtracking.Combination[] { combination0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination>> combinationSetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, (int) ' ');
        java.lang.Class<?> wildcardClass10 = combinationSetList9.getClass();
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationSetList3);
        org.junit.Assert.assertNull(combinationSetList5);
        org.junit.Assert.assertNotNull(combinationSetList7);
        org.junit.Assert.assertNotNull(combinationSetList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(annotatedElementSetList14);
        org.junit.Assert.assertNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.lang.Class<?> wildcardClass9 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        java.lang.Class[][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass7 = wildcardClassArraySetList6.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.lang.Class<?> wildcardClass5 = strArraySetList4.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (byte) 0);
        java.lang.Class<?> wildcardClass11 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray2, 10);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(ofFieldArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.lang.Class<?> wildcardClass9 = strArraySetList8.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) 'a');
        java.lang.Class<?> wildcardClass11 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 3);
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList24 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = wildcardClassSetList24.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(genericDeclarationSetList18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList20);
        org.junit.Assert.assertNotNull(constableSetList22);
        org.junit.Assert.assertNotNull(wildcardClassSetList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, 2);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList18 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, 100);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, (int) (short) 1);
        java.lang.Class<?> wildcardClass23 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(constantDescSetList16);
        org.junit.Assert.assertNotNull(strSetList18);
        org.junit.Assert.assertNotNull(charSequenceSetList20);
        org.junit.Assert.assertNotNull(constantDescSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 4);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) 'a');
        java.lang.Class<?> wildcardClass30 = strSetListArray15.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNull(collectionArraySetList25);
        org.junit.Assert.assertNotNull(listArraySetList27);
        org.junit.Assert.assertNotNull(listArraySetList29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList21 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList23 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass26 = strSetListArray15.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(collectionArraySetList21);
        org.junit.Assert.assertNotNull(collectionArraySetList23);
        org.junit.Assert.assertNotNull(listArraySetList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        java.lang.Class[][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(wildcardClassArraySetList10);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.lang.Class<?> wildcardClass7 = strArraySetList6.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass9 = strArraySetList8.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = ofFieldArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNull(objSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(ofFieldArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = typeArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]>> ofFieldArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[][]) wildcardClassArray2, (int) (byte) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(serializableSetList14);
        org.junit.Assert.assertNotNull(ofFieldArraySetList16);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (short) 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strSetListArray0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        com.thealgorithms.backtracking.Combination[][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNull(combinationArraySetList8);
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2, combinationArray3, combinationArray4 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray7 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray8 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray9 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray10 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray11 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray6, combinationArray7, combinationArray8, combinationArray9, combinationArray10 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray12 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray13 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray15 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray16 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray17 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray12, combinationArray13, combinationArray14, combinationArray15, combinationArray16 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray18 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray19 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray20 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray21 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray22 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray23 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray18, combinationArray19, combinationArray20, combinationArray21, combinationArray22 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray24 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray25 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray26 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray27 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray28 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray29 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray24, combinationArray25, combinationArray26, combinationArray27, combinationArray28 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray30 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray5, combinationArray11, combinationArray17, combinationArray23, combinationArray29 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray31 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray32 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray33 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray34 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray35 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray36 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray31, combinationArray32, combinationArray33, combinationArray34, combinationArray35 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray37 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray38 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray39 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray40 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray41 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray42 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray37, combinationArray38, combinationArray39, combinationArray40, combinationArray41 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray43 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray44 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray45 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray46 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray47 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray48 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray43, combinationArray44, combinationArray45, combinationArray46, combinationArray47 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray49 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray50 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray51 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray52 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray53 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray54 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray49, combinationArray50, combinationArray51, combinationArray52, combinationArray53 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray55 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray56 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray57 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray58 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray59 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray60 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray55, combinationArray56, combinationArray57, combinationArray58, combinationArray59 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray61 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray36, combinationArray42, combinationArray48, combinationArray54, combinationArray60 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray62 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray63 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray64 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray65 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray66 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray67 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray62, combinationArray63, combinationArray64, combinationArray65, combinationArray66 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray68 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray69 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray70 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray71 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray72 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray73 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray68, combinationArray69, combinationArray70, combinationArray71, combinationArray72 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray74 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray75 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray76 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray77 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray78 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray79 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray74, combinationArray75, combinationArray76, combinationArray77, combinationArray78 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray80 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray81 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray82 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray83 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray84 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray85 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray80, combinationArray81, combinationArray82, combinationArray83, combinationArray84 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray86 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray87 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray88 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray89 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray90 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][] combinationArray91 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][] { combinationArray86, combinationArray87, combinationArray88, combinationArray89, combinationArray90 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray92 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] { combinationArray67, combinationArray73, combinationArray79, combinationArray85, combinationArray91 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] combinationArray93 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][] { combinationArray30, combinationArray61, combinationArray92 };
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] combinationArray94 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][] { combinationArray93 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][]>> combinationArraySetList96 = com.thealgorithms.backtracking.Combination.combination(combinationArray94, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][]>> combinationArraySetList98 = com.thealgorithms.backtracking.Combination.combination(combinationArray94, 4);
        java.lang.Class<?> wildcardClass99 = combinationArray94.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray7);
        org.junit.Assert.assertNotNull(combinationArray8);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray10);
        org.junit.Assert.assertNotNull(combinationArray11);
        org.junit.Assert.assertNotNull(combinationArray12);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray15);
        org.junit.Assert.assertNotNull(combinationArray16);
        org.junit.Assert.assertNotNull(combinationArray17);
        org.junit.Assert.assertNotNull(combinationArray18);
        org.junit.Assert.assertNotNull(combinationArray19);
        org.junit.Assert.assertNotNull(combinationArray20);
        org.junit.Assert.assertNotNull(combinationArray21);
        org.junit.Assert.assertNotNull(combinationArray22);
        org.junit.Assert.assertNotNull(combinationArray23);
        org.junit.Assert.assertNotNull(combinationArray24);
        org.junit.Assert.assertNotNull(combinationArray25);
        org.junit.Assert.assertNotNull(combinationArray26);
        org.junit.Assert.assertNotNull(combinationArray27);
        org.junit.Assert.assertNotNull(combinationArray28);
        org.junit.Assert.assertNotNull(combinationArray29);
        org.junit.Assert.assertNotNull(combinationArray30);
        org.junit.Assert.assertNotNull(combinationArray31);
        org.junit.Assert.assertNotNull(combinationArray32);
        org.junit.Assert.assertNotNull(combinationArray33);
        org.junit.Assert.assertNotNull(combinationArray34);
        org.junit.Assert.assertNotNull(combinationArray35);
        org.junit.Assert.assertNotNull(combinationArray36);
        org.junit.Assert.assertNotNull(combinationArray37);
        org.junit.Assert.assertNotNull(combinationArray38);
        org.junit.Assert.assertNotNull(combinationArray39);
        org.junit.Assert.assertNotNull(combinationArray40);
        org.junit.Assert.assertNotNull(combinationArray41);
        org.junit.Assert.assertNotNull(combinationArray42);
        org.junit.Assert.assertNotNull(combinationArray43);
        org.junit.Assert.assertNotNull(combinationArray44);
        org.junit.Assert.assertNotNull(combinationArray45);
        org.junit.Assert.assertNotNull(combinationArray46);
        org.junit.Assert.assertNotNull(combinationArray47);
        org.junit.Assert.assertNotNull(combinationArray48);
        org.junit.Assert.assertNotNull(combinationArray49);
        org.junit.Assert.assertNotNull(combinationArray50);
        org.junit.Assert.assertNotNull(combinationArray51);
        org.junit.Assert.assertNotNull(combinationArray52);
        org.junit.Assert.assertNotNull(combinationArray53);
        org.junit.Assert.assertNotNull(combinationArray54);
        org.junit.Assert.assertNotNull(combinationArray55);
        org.junit.Assert.assertNotNull(combinationArray56);
        org.junit.Assert.assertNotNull(combinationArray57);
        org.junit.Assert.assertNotNull(combinationArray58);
        org.junit.Assert.assertNotNull(combinationArray59);
        org.junit.Assert.assertNotNull(combinationArray60);
        org.junit.Assert.assertNotNull(combinationArray61);
        org.junit.Assert.assertNotNull(combinationArray62);
        org.junit.Assert.assertNotNull(combinationArray63);
        org.junit.Assert.assertNotNull(combinationArray64);
        org.junit.Assert.assertNotNull(combinationArray65);
        org.junit.Assert.assertNotNull(combinationArray66);
        org.junit.Assert.assertNotNull(combinationArray67);
        org.junit.Assert.assertNotNull(combinationArray68);
        org.junit.Assert.assertNotNull(combinationArray69);
        org.junit.Assert.assertNotNull(combinationArray70);
        org.junit.Assert.assertNotNull(combinationArray71);
        org.junit.Assert.assertNotNull(combinationArray72);
        org.junit.Assert.assertNotNull(combinationArray73);
        org.junit.Assert.assertNotNull(combinationArray74);
        org.junit.Assert.assertNotNull(combinationArray75);
        org.junit.Assert.assertNotNull(combinationArray76);
        org.junit.Assert.assertNotNull(combinationArray77);
        org.junit.Assert.assertNotNull(combinationArray78);
        org.junit.Assert.assertNotNull(combinationArray79);
        org.junit.Assert.assertNotNull(combinationArray80);
        org.junit.Assert.assertNotNull(combinationArray81);
        org.junit.Assert.assertNotNull(combinationArray82);
        org.junit.Assert.assertNotNull(combinationArray83);
        org.junit.Assert.assertNotNull(combinationArray84);
        org.junit.Assert.assertNotNull(combinationArray85);
        org.junit.Assert.assertNotNull(combinationArray86);
        org.junit.Assert.assertNotNull(combinationArray87);
        org.junit.Assert.assertNotNull(combinationArray88);
        org.junit.Assert.assertNotNull(combinationArray89);
        org.junit.Assert.assertNotNull(combinationArray90);
        org.junit.Assert.assertNotNull(combinationArray91);
        org.junit.Assert.assertNotNull(combinationArray92);
        org.junit.Assert.assertNotNull(combinationArray93);
        org.junit.Assert.assertNotNull(combinationArray94);
        org.junit.Assert.assertNull(combinationArraySetList96);
        org.junit.Assert.assertNotNull(combinationArraySetList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        java.lang.String[][][][] strArray0 = new java.lang.String[][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 5);
        java.lang.Class<?> wildcardClass7 = strArraySetList6.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass3 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        java.lang.String[][][][][][][] strArray0 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray1 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray2 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray3 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray4 = new java.lang.String[][][][][][][][] { strArray0, strArray1, strArray2, strArray3 };
        java.lang.String[][][][][][][] strArray5 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray6 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray7 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray8 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray9 = new java.lang.String[][][][][][][][] { strArray5, strArray6, strArray7, strArray8 };
        java.lang.String[][][][][][][] strArray10 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray11 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray12 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray13 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray14 = new java.lang.String[][][][][][][][] { strArray10, strArray11, strArray12, strArray13 };
        java.lang.String[][][][][][][] strArray15 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray16 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray17 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray18 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray19 = new java.lang.String[][][][][][][][] { strArray15, strArray16, strArray17, strArray18 };
        java.lang.String[][][][][][][][][] strArray20 = new java.lang.String[][][][][][][][][] { strArray4, strArray9, strArray14, strArray19 };
        java.lang.String[][][][][][][] strArray21 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray22 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray23 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray24 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray25 = new java.lang.String[][][][][][][][] { strArray21, strArray22, strArray23, strArray24 };
        java.lang.String[][][][][][][] strArray26 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray27 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray28 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray29 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray30 = new java.lang.String[][][][][][][][] { strArray26, strArray27, strArray28, strArray29 };
        java.lang.String[][][][][][][] strArray31 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray32 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray33 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray34 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray35 = new java.lang.String[][][][][][][][] { strArray31, strArray32, strArray33, strArray34 };
        java.lang.String[][][][][][][] strArray36 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray37 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray38 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray39 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray40 = new java.lang.String[][][][][][][][] { strArray36, strArray37, strArray38, strArray39 };
        java.lang.String[][][][][][][][][] strArray41 = new java.lang.String[][][][][][][][][] { strArray25, strArray30, strArray35, strArray40 };
        java.lang.String[][][][][][][] strArray42 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray43 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray44 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray45 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray46 = new java.lang.String[][][][][][][][] { strArray42, strArray43, strArray44, strArray45 };
        java.lang.String[][][][][][][] strArray47 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray48 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray49 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray50 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray51 = new java.lang.String[][][][][][][][] { strArray47, strArray48, strArray49, strArray50 };
        java.lang.String[][][][][][][] strArray52 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray53 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray54 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray55 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray56 = new java.lang.String[][][][][][][][] { strArray52, strArray53, strArray54, strArray55 };
        java.lang.String[][][][][][][] strArray57 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray58 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray59 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][] strArray60 = new java.lang.String[][][][][][][] {};
        java.lang.String[][][][][][][][] strArray61 = new java.lang.String[][][][][][][][] { strArray57, strArray58, strArray59, strArray60 };
        java.lang.String[][][][][][][][][] strArray62 = new java.lang.String[][][][][][][][][] { strArray46, strArray51, strArray56, strArray61 };
        java.lang.String[][][][][][][][][][] strArray63 = new java.lang.String[][][][][][][][][][] { strArray20, strArray41, strArray62 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][][]>> strArraySetList65 = com.thealgorithms.backtracking.Combination.combination(strArray63, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = typeDescriptorSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(typeDescriptorSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass15 = constableArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass15 = typeDescriptorSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(wildcardClassSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList24 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(typeArraySetList18);
        org.junit.Assert.assertNull(typeArraySetList20);
        org.junit.Assert.assertNotNull(typeArraySetList22);
        org.junit.Assert.assertNull(genericDeclarationArraySetList24);
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList16 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.lang.Class<?> wildcardClass17 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
        org.junit.Assert.assertNotNull(combinationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (short) 0);
        java.lang.Class<?> wildcardClass15 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(constableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (short) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(typeArraySetList14);
        org.junit.Assert.assertNull(typeArraySetList16);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList16 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 10);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
        org.junit.Assert.assertNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
        org.junit.Assert.assertNotNull(combinationArraySetList16);
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.lang.Class<?> wildcardClass11 = strArraySetList10.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 6);
        java.lang.Class<?> wildcardClass17 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNull(listArraySetList10);
        org.junit.Assert.assertNotNull(collectionArraySetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(iterableArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, 2);
        java.lang.Class<?> wildcardClass15 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(objSetList8);
        org.junit.Assert.assertNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(constantDescSetList12);
        org.junit.Assert.assertNotNull(strComparableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination1 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination2 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray3 = new com.thealgorithms.backtracking.Combination[] { combination0, combination1, combination2 };
        com.thealgorithms.backtracking.Combination[][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 0);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNull(combinationArraySetList8);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList24 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (-1));
        java.lang.Class<?> wildcardClass25 = genericDeclarationArraySetList24.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList18);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList20);
        org.junit.Assert.assertNotNull(typeArraySetList22);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 10);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.lang.Class<?> wildcardClass13 = listArraySetList12.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (-1));
        java.lang.Class<?> wildcardClass3 = combinationArraySetList2.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList20 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList22 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setListSetList20);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass17 = genericDeclarationSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList10);
        org.junit.Assert.assertNotNull(typeDescriptorSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNotNull(genericDeclarationSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray0 = null;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strSetListArray0, 0);
        org.junit.Assert.assertNull(listArraySetList2);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNull(typeSetList16);
        org.junit.Assert.assertNull(wildcardClassOfFieldSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList63 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList65 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList67 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList69 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setListSetList63);
        org.junit.Assert.assertNull(setCollectionSetList65);
        org.junit.Assert.assertNull(setCollectionSetList67);
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) -1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList14);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = strArraySetList10.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        java.lang.String[][][][] strArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList21 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 4);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList27 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strSetListArray15, (int) (short) 0);
        java.lang.Class<?> wildcardClass28 = strSetListArray15.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(collectionArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNotNull(listArraySetList25);
        org.junit.Assert.assertNull(objSetList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = wildcardClassSetList12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList10);
        org.junit.Assert.assertNull(wildcardClassSetList12);
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 2);
        java.lang.Class<?> wildcardClass11 = constantDescSetList10.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 6);
        java.lang.Class<?> wildcardClass17 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(charSequenceSetList12);
        org.junit.Assert.assertNotNull(strComparableSetList14);
        org.junit.Assert.assertNotNull(charSequenceSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 10);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = null;
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        org.junit.Assert.assertNull(combinationArraySetList2);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List[][][][][][][][] listArray4 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray4;
        java.util.List[][][][][][][][] listArray7 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNull(listArraySetList23);
        org.junit.Assert.assertNull(listArraySetList25);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList63 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList65 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList67 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList69 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setListSetList63);
        org.junit.Assert.assertNull(setCollectionSetList65);
        org.junit.Assert.assertNull(setListSetList67);
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) 'a');
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = strArraySetList14.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(strArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList21 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 4);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 100);
        java.lang.Class<?> wildcardClass26 = listArraySetList25.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNotNull(collectionArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNotNull(listArraySetList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(typeSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(wildcardClassSetList18);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        java.lang.constant.Constable[] constableArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList2 = com.thealgorithms.backtracking.Combination.combination(constableArray0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, (int) (byte) -1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(genericDeclarationSetList12);
        org.junit.Assert.assertNull(typeSetList14);
        org.junit.Assert.assertNotNull(genericDeclarationSetList16);
        org.junit.Assert.assertNotNull(wildcardClassSetList18);
        org.junit.Assert.assertNull(wildcardClassOfFieldSetList20);
        org.junit.Assert.assertNotNull(constableSetList22);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList17 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList19 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray15, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray15, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray15, 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList25 = com.thealgorithms.backtracking.Combination.combination(strArray15, (int) '4');
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList30 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList32 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray28, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList34 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray28, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList36 = com.thealgorithms.backtracking.Combination.combination(strArray28, (int) (short) 1);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList41 = com.thealgorithms.backtracking.Combination.combination(strArray39, (int) '#');
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList46 = com.thealgorithms.backtracking.Combination.combination(strArray44, (int) '#');
        java.util.List[] listArray48 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray49 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray48;
        strSetListArray49[0] = strSetList8;
        strSetListArray49[1] = strSetList25;
        strSetListArray49[2] = strSetList36;
        strSetListArray49[3] = strSetList41;
        strSetListArray49[4] = strSetList46;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList61 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList63 = com.thealgorithms.backtracking.Combination.combination(strSetListArray49, 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList65 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList67 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray49, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strComparableSetList17);
        org.junit.Assert.assertNotNull(serializableSetList19);
        org.junit.Assert.assertNotNull(objSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strSetList25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSetList30);
        org.junit.Assert.assertNotNull(charSequenceSetList32);
        org.junit.Assert.assertNotNull(constableSetList34);
        org.junit.Assert.assertNotNull(strSetList36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSetList41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSetList46);
        org.junit.Assert.assertNotNull(listArray48);
        org.junit.Assert.assertNotNull(strSetListArray49);
        org.junit.Assert.assertNull(setListSetList61);
        org.junit.Assert.assertNull(setListSetList63);
        org.junit.Assert.assertNull(setCollectionSetList65);
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        java.lang.String[][][][][][][][][] strArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        java.lang.Class[][][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 2);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][] { combinationArray0 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList3 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList5 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList7 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][]>> combinationArraySetList9 = com.thealgorithms.backtracking.Combination.combination(combinationArray1, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = combinationArraySetList9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNull(combinationArraySetList3);
        org.junit.Assert.assertNotNull(combinationArraySetList5);
        org.junit.Assert.assertNull(combinationArraySetList7);
        org.junit.Assert.assertNull(combinationArraySetList9);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.lang.Class<?> wildcardClass3 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 5);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList14);
        org.junit.Assert.assertNull(typeSetList16);
        org.junit.Assert.assertNotNull(typeDescriptorSetList18);
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(serializableSetList12);
        org.junit.Assert.assertNotNull(constableSetList14);
        org.junit.Assert.assertNull(constantDescSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2, combinationArray3, combinationArray4, combinationArray5 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray6, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray6, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNull(combinationArraySetList8);
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList20 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList22 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList24 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setListSetList20);
        org.junit.Assert.assertNull(setListSetList22);
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass17 = typeDescriptorSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNotNull(annotatedElementSetList12);
        org.junit.Assert.assertNotNull(typeSetList14);
        org.junit.Assert.assertNotNull(typeDescriptorSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) ' ');
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(typeSetList18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList20);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) 1);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList20);
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNull(strArraySetList10);
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.lang.Class<?> wildcardClass13 = wildcardClassArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        java.util.List[][][] listArray1 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray1;
        java.util.List[][][] listArray4 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray4;
        java.util.List[][][][] listArray7 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        java.util.List[][][] listArray17 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray18 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray17;
        java.util.List[][][][] listArray20 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray21 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray20;
        strSetListArray21[0] = strSetListArray15;
        strSetListArray21[1] = strSetListArray18;
        java.util.List[][][] listArray27 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray28 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray27;
        java.util.List[][][] listArray30 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray31 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray30;
        java.util.List[][][][] listArray33 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray34 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray33;
        strSetListArray34[0] = strSetListArray28;
        strSetListArray34[1] = strSetListArray31;
        java.util.List[][][] listArray40 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray41 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray40;
        java.util.List[][][] listArray43 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray44 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray43;
        java.util.List[][][][] listArray46 = new java.util.List[2][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray47 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray46;
        strSetListArray47[0] = strSetListArray41;
        strSetListArray47[1] = strSetListArray44;
        java.util.List[][][][][] listArray53 = new java.util.List[4][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][] strSetListArray54 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]) listArray53;
        strSetListArray54[0] = strSetListArray8;
        strSetListArray54[1] = strSetListArray21;
        strSetListArray54[2] = strSetListArray34;
        strSetListArray54[3] = strSetListArray47;
        java.util.List[][][][][][] listArray64 = new java.util.List[1][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][] strSetListArray65 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]) listArray64;
        strSetListArray65[0] = strSetListArray54;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList69 = com.thealgorithms.backtracking.Combination.combination(strSetListArray65, (int) (short) 100);
        java.lang.Class<?> wildcardClass70 = listArraySetList69.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArray17);
        org.junit.Assert.assertNotNull(strSetListArray18);
        org.junit.Assert.assertNotNull(listArray20);
        org.junit.Assert.assertNotNull(strSetListArray21);
        org.junit.Assert.assertNotNull(listArray27);
        org.junit.Assert.assertNotNull(strSetListArray28);
        org.junit.Assert.assertNotNull(listArray30);
        org.junit.Assert.assertNotNull(strSetListArray31);
        org.junit.Assert.assertNotNull(listArray33);
        org.junit.Assert.assertNotNull(strSetListArray34);
        org.junit.Assert.assertNotNull(listArray40);
        org.junit.Assert.assertNotNull(strSetListArray41);
        org.junit.Assert.assertNotNull(listArray43);
        org.junit.Assert.assertNotNull(strSetListArray44);
        org.junit.Assert.assertNotNull(listArray46);
        org.junit.Assert.assertNotNull(strSetListArray47);
        org.junit.Assert.assertNotNull(listArray53);
        org.junit.Assert.assertNotNull(strSetListArray54);
        org.junit.Assert.assertNotNull(listArray64);
        org.junit.Assert.assertNotNull(strSetListArray65);
        org.junit.Assert.assertNotNull(listArraySetList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        java.util.List[][][][][] listArray1 = new java.util.List[0][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.lang.Class<?> wildcardClass7 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 3);
        java.lang.Class<?> wildcardClass13 = charSequenceArraySetList12.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNull(charSequenceArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(charSequenceArraySetList10);
        org.junit.Assert.assertNotNull(charSequenceArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = combinationArraySetList14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNull(combinationArraySetList14);
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass11 = typeArraySetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = wildcardClassArraySetList14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNull(wildcardClassArraySetList14);
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.lang.Class<?> wildcardClass13 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        java.util.List[][][][][][] listArray1 = new java.util.List[0][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 0);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNull(listArraySetList10);
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        java.util.Collection[] collectionArray1 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.util.TreeSet<java.lang.String>>[] strSetCollectionArray2 = (java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1;
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList4 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList6 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) '4');
        java.lang.Class<?> wildcardClass11 = collectionArray1.getClass();
        org.junit.Assert.assertNotNull(collectionArray1);
        org.junit.Assert.assertNotNull(strSetCollectionArray2);
        org.junit.Assert.assertNotNull(setCollectionSetList4);
        org.junit.Assert.assertNotNull(setCollectionSetList6);
        org.junit.Assert.assertNotNull(setCollectionSetList8);
        org.junit.Assert.assertNotNull(setCollectionSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.lang.Class<?> wildcardClass11 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass5 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList9 = com.thealgorithms.backtracking.Combination.combination(strArray7, (int) '#');
        java.util.List[] listArray11 = new java.util.List[2];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray12 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray11;
        strSetListArray12[0] = strSetList4;
        strSetListArray12[1] = strSetList9;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList18 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList20 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList22 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList24 = com.thealgorithms.backtracking.Combination.combination(strSetListArray12, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>>> setIterableSetList26 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]) strSetListArray12, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSetList9);
        org.junit.Assert.assertNotNull(listArray11);
        org.junit.Assert.assertNotNull(strSetListArray12);
        org.junit.Assert.assertNull(setListSetList18);
        org.junit.Assert.assertNull(setCollectionSetList20);
        org.junit.Assert.assertNull(setCollectionSetList22);
        org.junit.Assert.assertNull(setListSetList24);
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination1 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination2 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination3 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray4 = new com.thealgorithms.backtracking.Combination[] { combination0, combination1, combination2, combination3 };
        com.thealgorithms.backtracking.Combination combination5 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination6 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination7 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination8 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray9 = new com.thealgorithms.backtracking.Combination[] { combination5, combination6, combination7, combination8 };
        com.thealgorithms.backtracking.Combination combination10 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination11 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination12 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination13 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray14 = new com.thealgorithms.backtracking.Combination[] { combination10, combination11, combination12, combination13 };
        com.thealgorithms.backtracking.Combination[][] combinationArray15 = new com.thealgorithms.backtracking.Combination[][] { combinationArray4, combinationArray9, combinationArray14 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList17 = com.thealgorithms.backtracking.Combination.combination(combinationArray15, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList19 = com.thealgorithms.backtracking.Combination.combination(combinationArray15, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray9);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray15);
        org.junit.Assert.assertNull(combinationArraySetList17);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList18 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(strArraySetList14);
        org.junit.Assert.assertNotNull(strArraySetList16);
        org.junit.Assert.assertNotNull(strArraySetList18);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.lang.Class<?> wildcardClass15 = charSequenceSetList14.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strComparableSetList4);
        org.junit.Assert.assertNotNull(constableSetList6);
        org.junit.Assert.assertNotNull(strSetList8);
        org.junit.Assert.assertNotNull(constantDescSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(charSequenceSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray2 = new java.lang.String[][] { strArray1 };
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray5 = new java.lang.String[][] { strArray4 };
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray8 = new java.lang.String[][] { strArray7 };
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray11 = new java.lang.String[][] { strArray10 };
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray14 = new java.lang.String[][] { strArray13 };
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.lang.String[][] strArray17 = new java.lang.String[][] { strArray16 };
        java.lang.String[][][] strArray18 = new java.lang.String[][][] { strArray2, strArray5, strArray8, strArray11, strArray14, strArray17 };
        java.lang.String[][][][] strArray19 = new java.lang.String[][][][] { strArray18 };
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strArray19, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList31 = com.thealgorithms.backtracking.Combination.combination(strArray19, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList33 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (short) 100);
        java.lang.Class<?> wildcardClass34 = strArraySetList33.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(strArraySetList21);
        org.junit.Assert.assertNull(strArraySetList23);
        org.junit.Assert.assertNotNull(strArraySetList25);
        org.junit.Assert.assertNotNull(strArraySetList27);
        org.junit.Assert.assertNotNull(strArraySetList29);
        org.junit.Assert.assertNotNull(strArraySetList31);
        org.junit.Assert.assertNotNull(strArraySetList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strArray6, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, (int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNull(strComparableSetList14);
        org.junit.Assert.assertNotNull(charSequenceSetList16);
        org.junit.Assert.assertNotNull(charSequenceSetList18);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray5 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] combinationArray6 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][] { combinationArray0, combinationArray1, combinationArray2, combinationArray3, combinationArray4, combinationArray5 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray6, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray6, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray6, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArray5);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        java.lang.Class[][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass23 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(genericDeclarationSetList18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList20);
        org.junit.Assert.assertNotNull(constableSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 6);
        java.lang.Class<?> wildcardClass17 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(strSetList14);
        org.junit.Assert.assertNotNull(constantDescSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) (short) 1);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(iterableArraySetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(collectionArraySetList16);
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 3);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.lang.Class<?> wildcardClass9 = combinationArraySetList8.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass23 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList20);
        org.junit.Assert.assertNotNull(genericDeclarationSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        java.lang.Class[][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(wildcardClassArraySetList10);
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 6);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(typeDescriptorSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNotNull(genericDeclarationSetList16);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        com.thealgorithms.backtracking.Combination[][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 5);
        java.lang.Class<?> wildcardClass5 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        java.util.List[][][][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]) listArray1;
        java.util.List[][][][][][][][][][][][] listArray4 = new java.util.List[0][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]) listArray4;
        java.util.List[][][][][][][][][][][][][] listArray7 = new java.util.List[2][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray8, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass15 = strComparableSetList14.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNotNull(strSetList10);
        org.junit.Assert.assertNotNull(charSequenceSetList12);
        org.junit.Assert.assertNotNull(strComparableSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        com.thealgorithms.backtracking.Combination[][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.lang.Class<?> wildcardClass11 = combinationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) -1);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.lang.Class<?> wildcardClass7 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        java.lang.Class[][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][]) classArray1;
        java.lang.Class[][][][][][][][][][][] classArray4 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray5 = (java.lang.Class<?>[][][][][][][][][][][]) classArray4;
        java.lang.Class[][][][][][][][][][][] classArray7 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray8 = (java.lang.Class<?>[][][][][][][][][][][]) classArray7;
        java.lang.Class[][][][][][][][][][][] classArray10 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray11 = (java.lang.Class<?>[][][][][][][][][][][]) classArray10;
        java.lang.Class[][][][][][][][][][][] classArray13 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray14 = (java.lang.Class<?>[][][][][][][][][][][]) classArray13;
        java.lang.Class[][][][][][][][][][][] classArray16 = new java.lang.Class[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][] wildcardClassArray17 = (java.lang.Class<?>[][][][][][][][][][][]) classArray16;
        java.lang.Class[][][][][][][][][][][][] classArray19 = new java.lang.Class[6][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][] wildcardClassArray20 = (java.lang.Class<?>[][][][][][][][][][][][]) classArray19;
        wildcardClassArray20[0] = wildcardClassArray2;
        wildcardClassArray20[1] = wildcardClassArray5;
        wildcardClassArray20[2] = wildcardClassArray8;
        wildcardClassArray20[3] = wildcardClassArray11;
        wildcardClassArray20[4] = wildcardClassArray14;
        wildcardClassArray20[5] = wildcardClassArray17;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList34 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList36 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList38 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][]>> wildcardClassArraySetList40 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray20, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(classArray4);
        org.junit.Assert.assertNotNull(wildcardClassArray5);
        org.junit.Assert.assertNotNull(classArray7);
        org.junit.Assert.assertNotNull(wildcardClassArray8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(classArray19);
        org.junit.Assert.assertNotNull(wildcardClassArray20);
        org.junit.Assert.assertNull(wildcardClassArraySetList34);
        org.junit.Assert.assertNull(wildcardClassArraySetList36);
        org.junit.Assert.assertNull(wildcardClassArraySetList38);
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(constableArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        java.lang.Class[][][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNotNull(constableArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 10);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(constableArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNull(combinationArraySetList10);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList10 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNotNull(constableSetList8);
        org.junit.Assert.assertNull(strSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNull(strSetList14);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        java.util.List[][][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.lang.Class<?> wildcardClass7 = listArraySetList6.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) 100);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        com.thealgorithms.backtracking.Combination combination0 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination1 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination2 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination3 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination4 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination5 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray6 = new com.thealgorithms.backtracking.Combination[] { combination0, combination1, combination2, combination3, combination4, combination5 };
        com.thealgorithms.backtracking.Combination combination7 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination8 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination9 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination10 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination11 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination12 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray13 = new com.thealgorithms.backtracking.Combination[] { combination7, combination8, combination9, combination10, combination11, combination12 };
        com.thealgorithms.backtracking.Combination[][] combinationArray14 = new com.thealgorithms.backtracking.Combination[][] { combinationArray6, combinationArray13 };
        com.thealgorithms.backtracking.Combination combination15 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination16 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination17 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination18 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination19 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination20 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray21 = new com.thealgorithms.backtracking.Combination[] { combination15, combination16, combination17, combination18, combination19, combination20 };
        com.thealgorithms.backtracking.Combination combination22 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination23 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination24 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination25 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination26 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination27 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray28 = new com.thealgorithms.backtracking.Combination[] { combination22, combination23, combination24, combination25, combination26, combination27 };
        com.thealgorithms.backtracking.Combination[][] combinationArray29 = new com.thealgorithms.backtracking.Combination[][] { combinationArray21, combinationArray28 };
        com.thealgorithms.backtracking.Combination combination30 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination31 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination32 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination33 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination34 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination35 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray36 = new com.thealgorithms.backtracking.Combination[] { combination30, combination31, combination32, combination33, combination34, combination35 };
        com.thealgorithms.backtracking.Combination combination37 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination38 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination39 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination40 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination41 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination42 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray43 = new com.thealgorithms.backtracking.Combination[] { combination37, combination38, combination39, combination40, combination41, combination42 };
        com.thealgorithms.backtracking.Combination[][] combinationArray44 = new com.thealgorithms.backtracking.Combination[][] { combinationArray36, combinationArray43 };
        com.thealgorithms.backtracking.Combination combination45 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination46 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination47 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination48 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination49 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination50 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray51 = new com.thealgorithms.backtracking.Combination[] { combination45, combination46, combination47, combination48, combination49, combination50 };
        com.thealgorithms.backtracking.Combination combination52 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination53 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination54 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination55 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination56 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination57 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray58 = new com.thealgorithms.backtracking.Combination[] { combination52, combination53, combination54, combination55, combination56, combination57 };
        com.thealgorithms.backtracking.Combination[][] combinationArray59 = new com.thealgorithms.backtracking.Combination[][] { combinationArray51, combinationArray58 };
        com.thealgorithms.backtracking.Combination combination60 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination61 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination62 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination63 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination64 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination65 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray66 = new com.thealgorithms.backtracking.Combination[] { combination60, combination61, combination62, combination63, combination64, combination65 };
        com.thealgorithms.backtracking.Combination combination67 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination68 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination69 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination70 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination71 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination combination72 = new com.thealgorithms.backtracking.Combination();
        com.thealgorithms.backtracking.Combination[] combinationArray73 = new com.thealgorithms.backtracking.Combination[] { combination67, combination68, combination69, combination70, combination71, combination72 };
        com.thealgorithms.backtracking.Combination[][] combinationArray74 = new com.thealgorithms.backtracking.Combination[][] { combinationArray66, combinationArray73 };
        com.thealgorithms.backtracking.Combination[][][] combinationArray75 = new com.thealgorithms.backtracking.Combination[][][] { combinationArray14, combinationArray29, combinationArray44, combinationArray59, combinationArray74 };
        com.thealgorithms.backtracking.Combination[][][][] combinationArray76 = new com.thealgorithms.backtracking.Combination[][][][] { combinationArray75 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList78 = com.thealgorithms.backtracking.Combination.combination(combinationArray76, 2);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList80 = com.thealgorithms.backtracking.Combination.combination(combinationArray76, (int) (byte) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList82 = com.thealgorithms.backtracking.Combination.combination(combinationArray76, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList84 = com.thealgorithms.backtracking.Combination.combination(combinationArray76, (int) (short) 100);
        org.junit.Assert.assertNotNull(combinationArray6);
        org.junit.Assert.assertNotNull(combinationArray13);
        org.junit.Assert.assertNotNull(combinationArray14);
        org.junit.Assert.assertNotNull(combinationArray21);
        org.junit.Assert.assertNotNull(combinationArray28);
        org.junit.Assert.assertNotNull(combinationArray29);
        org.junit.Assert.assertNotNull(combinationArray36);
        org.junit.Assert.assertNotNull(combinationArray43);
        org.junit.Assert.assertNotNull(combinationArray44);
        org.junit.Assert.assertNotNull(combinationArray51);
        org.junit.Assert.assertNotNull(combinationArray58);
        org.junit.Assert.assertNotNull(combinationArray59);
        org.junit.Assert.assertNotNull(combinationArray66);
        org.junit.Assert.assertNotNull(combinationArray73);
        org.junit.Assert.assertNotNull(combinationArray74);
        org.junit.Assert.assertNotNull(combinationArray75);
        org.junit.Assert.assertNotNull(combinationArray76);
        org.junit.Assert.assertNotNull(combinationArraySetList78);
        org.junit.Assert.assertNotNull(combinationArraySetList80);
        org.junit.Assert.assertNull(combinationArraySetList82);
        org.junit.Assert.assertNotNull(combinationArraySetList84);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray6, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray6, (int) (short) 10);
        java.lang.Class<?> wildcardClass17 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(strSetList14);
        org.junit.Assert.assertNotNull(charSequenceSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 10);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(collectionArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNotNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNotNull(wildcardClassSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List[][][][][][][][] listArray4 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray4;
        java.util.List[][][][][][][][] listArray7 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNull(listArraySetList23);
        org.junit.Assert.assertNull(listArraySetList25);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 100);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        com.thealgorithms.backtracking.Combination[][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 10);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList22 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList24 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList26 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass27 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList18);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList20);
        org.junit.Assert.assertNull(wildcardClassArraySetList22);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList24);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNotNull(typeSetList16);
        org.junit.Assert.assertNull(typeSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, 2);
        java.lang.Class<?> wildcardClass15 = iterableArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(collectionArraySetList10);
        org.junit.Assert.assertNotNull(iterableArraySetList12);
        org.junit.Assert.assertNotNull(iterableArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.lang.String[][][] strArray1 = new java.lang.String[][][] { strArray0 };
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList3 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList5 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray1, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList7 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList9 = com.thealgorithms.backtracking.Combination.combination(strArray1, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList11 = com.thealgorithms.backtracking.Combination.combination(strArray1, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList13 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList15 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList17 = com.thealgorithms.backtracking.Combination.combination(strArray1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArraySetList3);
        org.junit.Assert.assertNull(serializableSetList5);
        org.junit.Assert.assertNotNull(strArraySetList7);
        org.junit.Assert.assertNull(strArraySetList9);
        org.junit.Assert.assertNull(strArraySetList11);
        org.junit.Assert.assertNotNull(strArraySetList13);
        org.junit.Assert.assertNotNull(strArraySetList15);
        org.junit.Assert.assertNull(strArraySetList17);
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '#');
        java.lang.Class<?> wildcardClass15 = listArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(iterableArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass15 = typeArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.lang.Class<?> wildcardClass9 = wildcardClassArraySetList8.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        java.lang.String[][][][][][][] strArray0 = new java.lang.String[][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList8 = com.thealgorithms.backtracking.Combination.combination(strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.lang.String[] strArray19 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList21 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray19, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList23 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray19, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList25 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray19, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList27 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList29 = com.thealgorithms.backtracking.Combination.combination(strArray19, (int) (short) 1);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList38 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray36, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList40 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray36, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList42 = com.thealgorithms.backtracking.Combination.combination(strArray36, 1);
        java.util.Collection[] collectionArray44 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.util.TreeSet<java.lang.String>>[] strSetCollectionArray45 = (java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray44;
        strSetCollectionArray45[0] = strSetList12;
        strSetCollectionArray45[1] = strSetList29;
        strSetCollectionArray45[2] = strSetList42;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList53 = com.thealgorithms.backtracking.Combination.combination(strSetCollectionArray45, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(charSequenceSetList6);
        org.junit.Assert.assertNull(strSetList8);
        org.junit.Assert.assertNotNull(charSequenceSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strComparableSetList21);
        org.junit.Assert.assertNotNull(strComparableSetList23);
        org.junit.Assert.assertNotNull(strComparableSetList25);
        org.junit.Assert.assertNotNull(strSetList27);
        org.junit.Assert.assertNotNull(strSetList29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strComparableSetList38);
        org.junit.Assert.assertNotNull(serializableSetList40);
        org.junit.Assert.assertNotNull(strSetList42);
        org.junit.Assert.assertNotNull(collectionArray44);
        org.junit.Assert.assertNotNull(strSetCollectionArray45);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) '#');
        java.lang.Class<?> wildcardClass13 = typeArraySetList12.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "hi!" };
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList4 = com.thealgorithms.backtracking.Combination.combination(strArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence>> charSequenceSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[]) strArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList14 = com.thealgorithms.backtracking.Combination.combination(strArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray2, 6);
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray2, (int) ' ');
        java.lang.Class<?> wildcardClass19 = strArray2.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSetList4);
        org.junit.Assert.assertNotNull(constantDescSetList6);
        org.junit.Assert.assertNull(charSequenceSetList8);
        org.junit.Assert.assertNotNull(strComparableSetList10);
        org.junit.Assert.assertNotNull(strComparableSetList12);
        org.junit.Assert.assertNotNull(strSetList14);
        org.junit.Assert.assertNotNull(constantDescSetList16);
        org.junit.Assert.assertNotNull(strComparableSetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 0);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        java.lang.Class[][][] classArray1 = new java.lang.Class[0][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][] wildcardClassArray2 = (java.lang.Class<?>[][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][]) wildcardClassArray2, (int) (short) 0);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(annotatedElementSetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        java.util.List[][][][][][][][][][][][] listArray1 = new java.util.List[0][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]) listArray1;
        java.util.List[][][][][][][][][][][][] listArray4 = new java.util.List[0][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]) listArray4;
        java.util.List[][][][][][][][][][][][] listArray7 = new java.util.List[0][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 100);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
        org.junit.Assert.assertNull(typeSetList18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldSetList20);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        java.util.Collection[] collectionArray1 = new java.util.Collection[0];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.util.TreeSet<java.lang.String>>[] strSetCollectionArray2 = (java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1;
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList4 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (-1));
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList6 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) '4');
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList8 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList10 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList12 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList14 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, (int) '#');
        java.util.List<java.util.TreeSet<java.util.Collection<java.util.TreeSet<java.lang.String>>>> setCollectionSetList16 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection<java.util.TreeSet<java.lang.String>>[]) collectionArray1, 1);
        org.junit.Assert.assertNotNull(collectionArray1);
        org.junit.Assert.assertNotNull(strSetCollectionArray2);
        org.junit.Assert.assertNotNull(setCollectionSetList4);
        org.junit.Assert.assertNotNull(setCollectionSetList6);
        org.junit.Assert.assertNotNull(setCollectionSetList8);
        org.junit.Assert.assertNull(setCollectionSetList10);
        org.junit.Assert.assertNotNull(setCollectionSetList12);
        org.junit.Assert.assertNotNull(setCollectionSetList14);
        org.junit.Assert.assertNotNull(setCollectionSetList16);
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray1 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray2 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray3 = new com.thealgorithms.backtracking.Combination[][][][][][][] { combinationArray0, combinationArray1, combinationArray2 };
        com.thealgorithms.backtracking.Combination[][][][][][][][] combinationArray4 = new com.thealgorithms.backtracking.Combination[][][][][][][][] { combinationArray3 };
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) '4');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, 2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray4, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArray1);
        org.junit.Assert.assertNotNull(combinationArray2);
        org.junit.Assert.assertNotNull(combinationArray3);
        org.junit.Assert.assertNotNull(combinationArray4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray1 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray2 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][][] strArray3 = new java.lang.String[][][][][][][][][] { strArray0, strArray1, strArray2 };
        java.lang.String[][][][][][][][] strArray4 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray5 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray6 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][][] strArray7 = new java.lang.String[][][][][][][][][] { strArray4, strArray5, strArray6 };
        java.lang.String[][][][][][][][] strArray8 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray9 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray10 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][][] strArray11 = new java.lang.String[][][][][][][][][] { strArray8, strArray9, strArray10 };
        java.lang.String[][][][][][][][] strArray12 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray13 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray14 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][][] strArray15 = new java.lang.String[][][][][][][][][] { strArray12, strArray13, strArray14 };
        java.lang.String[][][][][][][][] strArray16 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray17 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][] strArray18 = new java.lang.String[][][][][][][][] {};
        java.lang.String[][][][][][][][][] strArray19 = new java.lang.String[][][][][][][][][] { strArray16, strArray17, strArray18 };
        java.lang.String[][][][][][][][][][] strArray20 = new java.lang.String[][][][][][][][][][] { strArray3, strArray7, strArray11, strArray15, strArray19 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][][]>> strArraySetList22 = com.thealgorithms.backtracking.Combination.combination(strArray20, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        java.util.List[][][][][][][] listArray1 = new java.util.List[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.lang.Class<?> wildcardClass7 = listArraySetList6.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = genericDeclarationArraySetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 3);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNotNull(genericDeclarationSetList14);
        org.junit.Assert.assertNotNull(genericDeclarationSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List[][][][][][][][] listArray4 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray4;
        java.util.List[][][][][][][][] listArray7 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 5);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '4');
        java.lang.Class<?> wildcardClass15 = combinationArraySetList14.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        com.thealgorithms.backtracking.Combination[][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) '#');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 2);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 2);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][]>> combinationArraySetList14 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 6);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(combinationArraySetList14);
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        java.lang.Class[][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 6);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList27 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) 'a');
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList29 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strSetListArray15, 5);
        java.lang.Class<?> wildcardClass30 = strSetListArray15.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNotNull(collectionArraySetList25);
        org.junit.Assert.assertNotNull(collectionArraySetList27);
        org.junit.Assert.assertNotNull(serializableSetList29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.lang.Class<?> wildcardClass7 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 1);
        java.lang.Class<?> wildcardClass11 = strArraySetList10.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        java.lang.Class[][][][][] classArray1 = new java.lang.Class[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][]>> genericDeclarationArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = genericDeclarationArraySetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = typeDescriptorSetList12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNull(typeDescriptorSetList12);
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (-1));
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(charSequenceArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNull(strArraySetList14);
        org.junit.Assert.assertNotNull(strArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.lang.Class<?> wildcardClass7 = combinationArraySetList6.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List[][][][][][][][] listArray4 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray4;
        java.util.List[][][][][][][][] listArray7 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray7;
        java.util.List[][][][][][][][][] listArray10 = new java.util.List[3][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][] strSetListArray11 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][][]) listArray10;
        strSetListArray11[0] = strSetListArray2;
        strSetListArray11[1] = strSetListArray5;
        strSetListArray11[2] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList25 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList27 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]>> listArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strSetListArray11, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray10);
        org.junit.Assert.assertNotNull(strSetListArray11);
        org.junit.Assert.assertNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNull(listArraySetList23);
        org.junit.Assert.assertNull(listArraySetList25);
        org.junit.Assert.assertNull(listArraySetList27);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        java.lang.String[][][][] strArray0 = new java.lang.String[][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (-1));
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList16 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (-1));
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNotNull(typeDescriptorSetList8);
        org.junit.Assert.assertNull(genericDeclarationSetList10);
        org.junit.Assert.assertNull(typeDescriptorSetList12);
        org.junit.Assert.assertNotNull(wildcardClassSetList14);
        org.junit.Assert.assertNotNull(wildcardClassSetList16);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass17 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNull(typeArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = strArraySetList10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNull(strArraySetList10);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        java.lang.String[][][][][] strArray0 = new java.lang.String[][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 4);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.lang.Class<?> wildcardClass9 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>>> setListSetList2 = com.thealgorithms.backtracking.Combination.combination(strSetListArray0, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type>> typeSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[]) wildcardClassArray2, 2);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>> wildcardClassOfFieldSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) wildcardClassArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) wildcardClassArray2, (int) 'a');
        java.lang.Class<?> wildcardClass17 = constableSetList16.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeSetList10);
        org.junit.Assert.assertNull(genericDeclarationSetList12);
        org.junit.Assert.assertNull(wildcardClassOfFieldSetList14);
        org.junit.Assert.assertNotNull(constableSetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        java.util.List[][][][] listArray1 = new java.util.List[0][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 6);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.lang.Class<?> wildcardClass13 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][]) wildcardClassArray2, (int) (short) 0);
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNull(genericDeclarationArraySetList18);
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList16 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, 2);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray6, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable>> constableSetList20 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[]) strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList22 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, 10);
        java.lang.Class<?> wildcardClass23 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(serializableSetList16);
        org.junit.Assert.assertNotNull(constableSetList18);
        org.junit.Assert.assertNotNull(constableSetList20);
        org.junit.Assert.assertNotNull(constantDescSetList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        java.util.List[][] listArray1 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.Iterable<java.util.TreeSet<java.lang.String>>[]>> iterableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Iterable<java.util.TreeSet<java.lang.String>>[][]) strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) strSetListArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.util.Collection[]>> collectionArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][]) strSetListArray2, 100);
        java.lang.Class<?> wildcardClass15 = collectionArraySetList14.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(iterableArraySetList6);
        org.junit.Assert.assertNotNull(iterableArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(collectionArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[] strSetListArray5 = (java.util.List<java.util.TreeSet<java.lang.String>>[]) listArray4;
        java.util.List[][] listArray7 = new java.util.List[2][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][] strSetListArray8 = (java.util.List<java.util.TreeSet<java.lang.String>>[][]) listArray7;
        strSetListArray8[0] = strSetListArray2;
        strSetListArray8[1] = strSetListArray5;
        java.util.List[][][] listArray14 = new java.util.List[1][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][] strSetListArray15 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][]) listArray14;
        strSetListArray15[0] = strSetListArray8;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList19 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList21 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList23 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 6);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList25 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.Collection[][]>> collectionArraySetList27 = com.thealgorithms.backtracking.Combination.combination((java.util.Collection[][][]) strSetListArray15, (int) 'a');
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][]>> listArraySetList29 = com.thealgorithms.backtracking.Combination.combination(strSetListArray15, 2);
        java.lang.Class<?> wildcardClass30 = strSetListArray15.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArray4);
        org.junit.Assert.assertNotNull(strSetListArray5);
        org.junit.Assert.assertNotNull(listArray7);
        org.junit.Assert.assertNotNull(strSetListArray8);
        org.junit.Assert.assertNotNull(listArray14);
        org.junit.Assert.assertNotNull(strSetListArray15);
        org.junit.Assert.assertNotNull(listArraySetList19);
        org.junit.Assert.assertNull(listArraySetList21);
        org.junit.Assert.assertNotNull(listArraySetList23);
        org.junit.Assert.assertNotNull(collectionArraySetList25);
        org.junit.Assert.assertNotNull(collectionArraySetList27);
        org.junit.Assert.assertNotNull(listArraySetList29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        com.thealgorithms.backtracking.Combination[][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 2);
        java.lang.Class<?> wildcardClass11 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        com.thealgorithms.backtracking.Combination[][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList10 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][]>> combinationArraySetList12 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) ' ');
        java.lang.Class<?> wildcardClass13 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(combinationArraySetList10);
        org.junit.Assert.assertNotNull(combinationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        java.lang.String[][][][] strArray0 = new java.lang.String[][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.lang.Class<?> wildcardClass5 = strArraySetList4.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        java.lang.String[][][][] strArray0 = null;
        java.util.List<java.util.TreeSet<java.lang.String[][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 0);
        org.junit.Assert.assertNull(strArraySetList2);
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, 1);
        java.lang.Class<?> wildcardClass11 = genericDeclarationArraySetList10.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        java.lang.Class[][][][] classArray1 = new java.lang.Class[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[][][]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][][][]) wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass15 = typeArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(typeArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(typeArraySetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        java.util.List[][][][][][][][] listArray1 = new java.util.List[0][][][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 3);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][][]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) '4');
        java.lang.Class<?> wildcardClass17 = strSetListArray2.getClass();
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNull(listArraySetList4);
        org.junit.Assert.assertNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNotNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.Object>> objSetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.Object[]) wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList18 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        java.lang.Class<?> wildcardClass19 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(objSetList12);
        org.junit.Assert.assertNotNull(typeArraySetList14);
        org.junit.Assert.assertNotNull(typeArraySetList16);
        org.junit.Assert.assertNull(wildcardClassArraySetList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(charSequenceArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration>> genericDeclarationSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, 0);
        java.lang.Class<?> wildcardClass9 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNotNull(genericDeclarationSetList6);
        org.junit.Assert.assertNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        com.thealgorithms.backtracking.Combination[][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 100);
        java.lang.Class<?> wildcardClass9 = combinationArray0.getClass();
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNotNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (-1));
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList14 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 10);
        java.lang.Class<?> wildcardClass15 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(typeArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = constableArraySetList8.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(charSequenceArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        java.lang.String[][][][][][][][] strArray0 = new java.lang.String[][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) 'a');
        java.lang.Class<?> wildcardClass7 = strArraySetList6.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "", "" };
        java.util.List<java.util.TreeSet<java.lang.Comparable<java.lang.String>>> strComparableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.Comparable<java.lang.String>[]) strArray6, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList10 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray6, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList12 = com.thealgorithms.backtracking.Combination.combination(strArray6, 1);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String>> strSetList16 = com.thealgorithms.backtracking.Combination.combination(strArray6, 4);
        java.util.List<java.util.TreeSet<java.lang.constant.ConstantDesc>> constantDescSetList18 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.ConstantDesc[]) strArray6, (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strComparableSetList8);
        org.junit.Assert.assertNotNull(serializableSetList10);
        org.junit.Assert.assertNotNull(strSetList12);
        org.junit.Assert.assertNotNull(constantDescSetList14);
        org.junit.Assert.assertNotNull(strSetList16);
        org.junit.Assert.assertNotNull(constantDescSetList18);
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        com.thealgorithms.backtracking.Combination[][][][][][][][][][] combinationArray0 = new com.thealgorithms.backtracking.Combination[][][][][][][][][][] {};
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 0);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 4);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<com.thealgorithms.backtracking.Combination[][][][][][][][][]>> combinationArraySetList8 = com.thealgorithms.backtracking.Combination.combination(combinationArray0, 5);
        org.junit.Assert.assertNotNull(combinationArray0);
        org.junit.Assert.assertNull(combinationArraySetList2);
        org.junit.Assert.assertNotNull(combinationArraySetList4);
        org.junit.Assert.assertNotNull(combinationArraySetList6);
        org.junit.Assert.assertNotNull(combinationArraySetList8);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        java.lang.Class[][] classArray1 = new java.lang.Class[0][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][] wildcardClassArray2 = (java.lang.Class<?>[][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][]) wildcardClassArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) wildcardClassArray2, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.reflect.Type[]>> typeArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.Type[][]) wildcardClassArray2, (int) (byte) -1);
        java.lang.Class<?> wildcardClass11 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(typeArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        java.lang.Class[] classArray1 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList6 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.AnnotatedElement>> annotatedElementSetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.AnnotatedElement[]) wildcardClassArray2, (int) '4');
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, (int) (byte) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>>> wildcardClassSetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 3);
        java.util.List<java.util.TreeSet<java.lang.invoke.TypeDescriptor>> typeDescriptorSetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.invoke.TypeDescriptor[]) wildcardClassArray2, 2);
        java.lang.Class<?> wildcardClass15 = typeDescriptorSetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNull(wildcardClassSetList4);
        org.junit.Assert.assertNull(typeDescriptorSetList6);
        org.junit.Assert.assertNotNull(annotatedElementSetList8);
        org.junit.Assert.assertNotNull(typeDescriptorSetList10);
        org.junit.Assert.assertNotNull(wildcardClassSetList12);
        org.junit.Assert.assertNotNull(typeDescriptorSetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        java.util.List[][][][][][] listArray1 = new java.util.List[0][][][][][];
        @SuppressWarnings("unchecked")
        java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][] strSetListArray2 = (java.util.List<java.util.TreeSet<java.lang.String>>[][][][][][]) listArray1;
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (-1));
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList14 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 1);
        java.util.List<java.util.TreeSet<java.util.List<java.util.TreeSet<java.lang.String>>[][][][][]>> listArraySetList16 = com.thealgorithms.backtracking.Combination.combination(strSetListArray2, 100);
        org.junit.Assert.assertNotNull(listArray1);
        org.junit.Assert.assertNotNull(strSetListArray2);
        org.junit.Assert.assertNotNull(listArraySetList4);
        org.junit.Assert.assertNotNull(listArraySetList6);
        org.junit.Assert.assertNotNull(listArraySetList8);
        org.junit.Assert.assertNotNull(listArraySetList10);
        org.junit.Assert.assertNull(listArraySetList12);
        org.junit.Assert.assertNotNull(listArraySetList14);
        org.junit.Assert.assertNotNull(listArraySetList16);
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        java.lang.String[][] strArray0 = new java.lang.String[][] {};
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) -1);
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList4 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) strArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.String[]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList8 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (byte) 10);
        java.util.List<java.util.TreeSet<java.lang.constant.Constable[]>> constableArraySetList12 = com.thealgorithms.backtracking.Combination.combination((java.lang.constant.Constable[][]) strArray0, (int) (byte) 100);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, 1);
        java.util.List<java.util.TreeSet<java.lang.CharSequence[]>> charSequenceArraySetList16 = com.thealgorithms.backtracking.Combination.combination((java.lang.CharSequence[][]) strArray0, (int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = charSequenceArraySetList16.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(serializableSetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNotNull(constableArraySetList8);
        org.junit.Assert.assertNotNull(charSequenceArraySetList10);
        org.junit.Assert.assertNotNull(constableArraySetList12);
        org.junit.Assert.assertNotNull(charSequenceArraySetList14);
        org.junit.Assert.assertNotNull(charSequenceArraySetList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        java.lang.String[][][][][][] strArray0 = new java.lang.String[][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) ' ');
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (byte) 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.lang.Class<?> wildcardClass13 = strArraySetList12.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNull(strArraySetList4);
        org.junit.Assert.assertNotNull(strArraySetList6);
        org.junit.Assert.assertNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        java.lang.String[][][] strArray0 = new java.lang.String[][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 3);
        java.util.List<java.util.TreeSet<java.lang.String[][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 10);
        java.lang.Class<?> wildcardClass5 = strArray0.getClass();
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        java.lang.String[][][][][][][][][] strArray0 = new java.lang.String[][][][][][][][][] {};
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList2 = com.thealgorithms.backtracking.Combination.combination(strArray0, 6);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList4 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList6 = com.thealgorithms.backtracking.Combination.combination(strArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList8 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) 10);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList10 = com.thealgorithms.backtracking.Combination.combination(strArray0, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.String[][][][][][][][]>> strArraySetList12 = com.thealgorithms.backtracking.Combination.combination(strArray0, 1);
        org.junit.Assert.assertNotNull(strArray0);
        org.junit.Assert.assertNotNull(strArraySetList2);
        org.junit.Assert.assertNotNull(strArraySetList4);
        org.junit.Assert.assertNull(strArraySetList6);
        org.junit.Assert.assertNotNull(strArraySetList8);
        org.junit.Assert.assertNotNull(strArraySetList10);
        org.junit.Assert.assertNotNull(strArraySetList12);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        java.lang.Class[][][][][][] classArray1 = new java.lang.Class[0][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 4);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList10 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (int) (short) 100);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) '#');
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][][][]>> genericDeclarationArraySetList14 = com.thealgorithms.backtracking.Combination.combination((java.lang.reflect.GenericDeclaration[][][][][][]) wildcardClassArray2, (-1));
        java.lang.Class<?> wildcardClass15 = genericDeclarationArraySetList14.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        java.lang.Class[][][][][][][][][][][][][] classArray1 = new java.lang.Class[0][][][][][][][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 5);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 10);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][][][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardClassArraySetList10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNull(wildcardClassArraySetList10);
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        java.lang.Class[][][][][][][] classArray1 = new java.lang.Class[0][][][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[][][][][][][] wildcardClassArray2 = (java.lang.Class<?>[][][][][][][]) classArray1;
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList4 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList6 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) 'a');
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList8 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList10 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, (int) (short) -1);
        java.util.List<java.util.TreeSet<java.lang.Class<?>[][][][][][]>> wildcardClassArraySetList12 = com.thealgorithms.backtracking.Combination.combination(wildcardClassArray2, 100);
        java.lang.Class<?> wildcardClass13 = wildcardClassArray2.getClass();
        org.junit.Assert.assertNotNull(classArray1);
        org.junit.Assert.assertNotNull(wildcardClassArray2);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList4);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList6);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList8);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList10);
        org.junit.Assert.assertNotNull(wildcardClassArraySetList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        java.lang.reflect.GenericDeclaration[][][][] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[][][][] {};
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList2 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (int) (short) 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList4 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, 0);
        java.util.List<java.util.TreeSet<java.lang.reflect.GenericDeclaration[][][]>> genericDeclarationArraySetList6 = com.thealgorithms.backtracking.Combination.combination(genericDeclarationArray0, (int) 'a');
        java.util.List<java.util.TreeSet<java.io.Serializable>> serializableSetList8 = com.thealgorithms.backtracking.Combination.combination((java.io.Serializable[]) genericDeclarationArray0, (int) (byte) 10);
        org.junit.Assert.assertNotNull(genericDeclarationArray0);
        org.junit.Assert.assertNull(genericDeclarationArraySetList2);
        org.junit.Assert.assertNull(genericDeclarationArraySetList4);
        org.junit.Assert.assertNotNull(genericDeclarationArraySetList6);
        org.junit.Assert.assertNotNull(serializableSetList8);
    }
}

