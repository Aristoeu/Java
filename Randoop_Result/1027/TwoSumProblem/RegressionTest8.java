package TwoSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem29.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem17.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray59, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem68.BruteForce(intArray82, (int) (byte) 0);
        int[] intArray86 = twoSumProblem0.HashMap(intArray82, (int) 'a');
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.HashMap(intArray87, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem49.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem31.HashMap(intArray65, 10);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 10);
        java.lang.Class<?> wildcardClass90 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem37.BruteForce(intArray51, (int) (byte) 0);
        int[] intArray55 = twoSumProblem17.TwoPointer(intArray53, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem56.HashMap(intArray86, 10);
        int[] intArray96 = twoSumProblem17.BruteForce(intArray94, (int) (short) 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem36.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, (int) (short) 100);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem45.HashMap(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem45.BruteForce(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem45.HashMap(intArray86, (int) (short) 10);
        int[] intArray90 = twoSumProblem39.TwoPointer(intArray86, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 0);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.BruteForce(intArray42, (int) (byte) 100);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray42, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.TwoPointer(intArray65, (int) '#');
        int[] intArray71 = twoSumProblem47.BruteForce(intArray69, (-1));
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        int[] intArray53 = twoSumProblem15.HashMap(intArray45, 10);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.BruteForce(intArray71, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem74.BruteForce(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem56.HashMap(intArray90, 10);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem0.HashMap(intArray41, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem61.HashMap(intArray84, 0);
        int[] intArray90 = twoSumProblem44.BruteForce(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray88, 100);
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.BruteForce(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem36.BruteForce(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem18.HashMap(intArray83, (int) ' ');
        int[] intArray93 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem19.HashMap(intArray67, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem19.BruteForce(intArray82, 10);
        int[] intArray86 = twoSumProblem18.BruteForce(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) ' ');
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.BruteForce(intArray54, (int) (short) 1);
        int[] intArray58 = twoSumProblem0.HashMap(intArray54, (int) (byte) 10);
        java.lang.Class<?> wildcardClass59 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray78, (int) (short) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) -1);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem54.HashMap(intArray83, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.BruteForce(intArray30, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        int[] intArray58 = twoSumProblem12.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem12.HashMap(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray82, 0);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem62.HashMap(intArray71, 100);
        int[] intArray75 = twoSumProblem0.TwoPointer(intArray73, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (short) 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, 100);
        java.lang.Class<?> wildcardClass64 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        int[] intArray71 = twoSumProblem36.HashMap(intArray69, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem18.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.TwoPointer(intArray72, (int) '#');
        int[] intArray78 = twoSumProblem54.BruteForce(intArray76, (-1));
        int[] intArray80 = twoSumProblem18.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray76, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem35.BruteForce(intArray82, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray82, (int) '#');
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem43.HashMap(intArray92, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (short) 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem17.TwoPointer(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.HashMap(intArray72, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem77.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray24 = twoSumProblem13.HashMap(intArray22, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.TwoPointer(intArray47, (int) (short) 0);
        int[] intArray51 = twoSumProblem13.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem12.HashMap(intArray49, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem54.HashMap(intArray83, (int) (short) 10);
        int[] intArray91 = twoSumProblem12.BruteForce(intArray83, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) (byte) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem36.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray59, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem62.BruteForce(intArray90, (int) (byte) 10);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem62.TwoPointer(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem1.BruteForce(intArray29, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem59.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem50.HashMap(intArray83, (int) (short) 1);
        int[] intArray87 = twoSumProblem33.HashMap(intArray85, (int) (short) 100);
        int[] intArray89 = twoSumProblem32.TwoPointer(intArray87, (int) (byte) 10);
        int[] intArray91 = twoSumProblem1.HashMap(intArray87, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem1.TwoPointer(intArray35, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem38.HashMap(intArray87, (int) (short) 100);
        int[] intArray91 = twoSumProblem1.BruteForce(intArray87, (int) (short) 10);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray87, (int) (byte) 100);
        java.lang.Class<?> wildcardClass94 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem31.HashMap(intArray44, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem31.TwoPointer(intArray81, (int) (short) 100);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (-1));
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.TwoPointer(intArray30, (int) '#');
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem54.HashMap(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem54.HashMap(intArray77, 0);
        int[] intArray83 = twoSumProblem37.BruteForce(intArray81, (int) (byte) 0);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray83, 0);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem37.BruteForce(intArray70, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem37.HashMap(intArray91, (int) (byte) 1);
        int[] intArray97 = twoSumProblem0.HashMap(intArray95, (-1));
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem7.BruteForce(intArray54, (int) (short) 0);
        int[] intArray62 = twoSumProblem1.TwoPointer(intArray54, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem63.HashMap(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem63.HashMap(intArray86, 0);
        int[] intArray92 = twoSumProblem1.HashMap(intArray86, 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.TwoPointer(intArray85, (int) '#');
        int[] intArray91 = twoSumProblem72.HashMap(intArray85, (int) (byte) 0);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (short) 10);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem18.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray76, 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem39.HashMap(intArray69, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.HashMap(intArray90, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (short) -1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem42.HashMap(intArray51, 100);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem18.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.TwoPointer(intArray72, (int) '#');
        int[] intArray78 = twoSumProblem54.BruteForce(intArray76, (-1));
        int[] intArray80 = twoSumProblem18.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray76, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.BruteForce(intArray32, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.TwoPointer(intArray57, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem35.HashMap(intArray63, (int) (short) 10);
        int[] intArray69 = twoSumProblem17.HashMap(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, (int) (byte) -1);
        java.lang.Class<?> wildcardClass72 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.TwoPointer(intArray84, (int) '#');
        int[] intArray90 = twoSumProblem71.HashMap(intArray84, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray84, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray90 = new int[] { 1, (-1), 100, (byte) -1, '#' };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, -1, 100, -1, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray78 = twoSumProblem40.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem25.HashMap(intArray78, 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem15.HashMap(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        int[] intArray72 = twoSumProblem15.HashMap(intArray64, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem15.BruteForce(intArray76, 100);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray76, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.TwoPointer(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray69, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) (short) -1);
        java.lang.Class<?> wildcardClass74 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) (short) 0);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray56 = twoSumProblem0.TwoPointer(intArray54, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem55.TwoPointer(intArray89, 10);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray89, (int) (short) 10);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem0.HashMap(intArray69, (-1));
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray76 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray78 = twoSumProblem64.TwoPointer(intArray76, 100);
        int[] intArray80 = twoSumProblem17.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, 10);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.BruteForce(intArray71, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem56.HashMap(intArray86, 100);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray86, (int) (byte) 0);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) 'a');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem12.HashMap(intArray50, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem55.BruteForce(intArray83, (int) (byte) 10);
        int[] intArray87 = twoSumProblem12.HashMap(intArray85, (int) (short) 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray85, 100);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem29.HashMap(intArray38, 100);
        int[] intArray42 = twoSumProblem1.BruteForce(intArray38, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem60.HashMap(intArray83, 0);
        int[] intArray89 = twoSumProblem43.BruteForce(intArray87, (int) (byte) 0);
        int[] intArray91 = twoSumProblem1.TwoPointer(intArray89, (int) 'a');
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, (int) 'a');
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem0.HashMap(intArray49, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem56.BruteForce(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem40.HashMap(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray78 = twoSumProblem40.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem25.HashMap(intArray78, 0);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, (int) '#');
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem18.BruteForce(intArray50, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        int[] intArray85 = twoSumProblem18.TwoPointer(intArray83, 0);
        int[] intArray87 = twoSumProblem0.TwoPointer(intArray83, 1);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem0.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem36.BruteForce(intArray54, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem36.HashMap(intArray65, (int) (short) 10);
        int[] intArray73 = twoSumProblem0.HashMap(intArray65, (-1));
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem39.HashMap(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.TwoPointer(intArray73, (int) (short) 0);
        int[] intArray77 = twoSumProblem39.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem6.BruteForce(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem58.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem58.TwoPointer(intArray82, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray82, 100);
        int[] intArray95 = new int[] { '#', 100, (short) 0, (byte) -1, ' ', (short) 10 };
        int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[35, 100, 0, -1, 32, 10]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.TwoPointer(intArray61, (int) '#');
        int[] intArray67 = twoSumProblem43.BruteForce(intArray65, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem68.HashMap(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem43.HashMap(intArray81, (int) (byte) 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (short) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.TwoPointer(intArray69, (int) (short) 0);
        int[] intArray73 = twoSumProblem35.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem0.BruteForce(intArray71, (-1));
        int[] intArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray78 = twoSumProblem0.HashMap(intArray76, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem62.TwoPointer(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.TwoPointer(intArray28, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem39.TwoPointer(intArray77, (int) (short) -1);
        int[] intArray83 = twoSumProblem33.BruteForce(intArray77, (int) (byte) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray77, 1);
        java.lang.Class<?> wildcardClass86 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem35.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.TwoPointer(intArray83, (int) '#');
        int[] intArray89 = twoSumProblem35.HashMap(intArray83, (int) 'a');
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.BruteForce(intArray45, (int) (short) 0);
        int[] intArray53 = twoSumProblem18.HashMap(intArray51, (int) (short) 1);
        int[] intArray55 = twoSumProblem1.HashMap(intArray53, (int) (short) 100);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray84 = twoSumProblem73.HashMap(intArray82, 100);
        int[] intArray86 = twoSumProblem58.TwoPointer(intArray84, (int) (byte) 0);
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray84, 0);
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, 100);
        java.lang.Class<?> wildcardClass35 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.HashMap(intArray47, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.BruteForce(intArray85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.TwoPointer(intArray44, (int) '#');
        int[] intArray50 = twoSumProblem26.BruteForce(intArray48, (-1));
        int[] intArray52 = twoSumProblem0.TwoPointer(intArray48, (int) (byte) 100);
        java.lang.Class<?> wildcardClass53 = intArray48.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        int[] intArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem10.BruteForce(intArray22, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem27.TwoPointer(intArray63, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.BruteForce(intArray85, (int) (short) 1);
        int[] intArray89 = twoSumProblem27.BruteForce(intArray85, (int) (short) 1);
        int[] intArray91 = twoSumProblem10.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem1.TwoPointer(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray91, (int) (short) 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.BruteForce(intArray64, (int) (short) 1);
        int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.TwoPointer(intArray82, (int) '#');
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem72.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.TwoPointer(intArray67, (int) (short) 0);
        int[] intArray71 = twoSumProblem0.HashMap(intArray67, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem72.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) 'a');
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.BruteForce(intArray67, 0);
        int[] intArray73 = twoSumProblem49.TwoPointer(intArray71, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem49.HashMap(intArray77, (int) (short) 10);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray77, 100);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.BruteForce(intArray84, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem39.HashMap(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem39.HashMap(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem39.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem39.BruteForce(intArray80, (int) (byte) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (int) (byte) -1);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.HashMap(intArray35, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem35.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem35.HashMap(intArray76, (int) (short) 10);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass81 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem38.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem32.TwoPointer(intArray68, (int) (short) -1);
        int[] intArray76 = twoSumProblem17.HashMap(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem17.BruteForce(intArray88, (int) 'a');
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (int) ' ');
        java.lang.Class<?> wildcardClass93 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem18.TwoPointer(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem17.TwoPointer(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem17.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) '#');
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem20.BruteForce(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem46.BruteForce(intArray64, (int) (short) 0);
        int[] intArray72 = twoSumProblem37.HashMap(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem20.HashMap(intArray72, (int) (short) 100);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray72, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        int[] intArray47 = twoSumProblem0.HashMap(intArray41, (int) (short) -1);
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray50 = twoSumProblem0.TwoPointer(intArray48, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.BruteForce(intArray63, (int) '4');
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, 1);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem54.BruteForce(intArray72, (int) (short) 0);
        int[] intArray80 = twoSumProblem45.HashMap(intArray78, (int) (short) 1);
        int[] intArray82 = twoSumProblem44.BruteForce(intArray78, (int) (short) -1);
        int[] intArray84 = twoSumProblem43.TwoPointer(intArray82, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray82, 100);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        int[] intArray66 = twoSumProblem25.BruteForce(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem67.HashMap(intArray76, 100);
        int[] intArray80 = twoSumProblem25.BruteForce(intArray76, (int) '#');
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (byte) -1);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.TwoPointer(intArray69, (int) (short) 0);
        int[] intArray73 = twoSumProblem35.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem0.BruteForce(intArray71, (-1));
        java.lang.Class<?> wildcardClass76 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem0.BruteForce(intArray67, 0);
        java.lang.Class<?> wildcardClass70 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem23.HashMap(intArray38, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem23.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem6.BruteForce(intArray53, (int) (short) 0);
        int[] intArray61 = twoSumProblem0.TwoPointer(intArray53, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.TwoPointer(intArray80, (int) '#');
        int[] intArray86 = twoSumProblem62.BruteForce(intArray84, (-1));
        int[] intArray88 = twoSumProblem0.HashMap(intArray84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.TwoPointer(intArray43, (int) '#');
        int[] intArray49 = twoSumProblem25.BruteForce(intArray47, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        int[] intArray71 = twoSumProblem25.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem72.BruteForce(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem25.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, (-1));
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (-1));
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.BruteForce(intArray54, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (byte) 0);
        int[] intArray90 = twoSumProblem17.TwoPointer(intArray86, (int) ' ');
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem49.HashMap(intArray62, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem49.HashMap(intArray72, 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.BruteForce(intArray68, 0);
        int[] intArray74 = twoSumProblem50.BruteForce(intArray68, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem50.HashMap(intArray79, (int) (short) 10);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray79, (int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.HashMap(intArray87, 0);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem40.HashMap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem40.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem23.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem17.TwoPointer(intArray70, (int) ' ');
        int[] intArray80 = twoSumProblem0.BruteForce(intArray78, (int) (byte) 10);
        java.lang.Class<?> wildcardClass81 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        int[] intArray60 = twoSumProblem36.BruteForce(intArray58, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem36.BruteForce(intArray73, 0);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray73, 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray45 = twoSumProblem34.HashMap(intArray43, 100);
        int[] intArray47 = twoSumProblem19.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem63.HashMap(intArray72, 100);
        int[] intArray76 = twoSumProblem48.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray78 = twoSumProblem19.HashMap(intArray74, 100);
        int[] intArray80 = twoSumProblem18.TwoPointer(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, (int) '#');
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem17.TwoPointer(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem17.HashMap(intArray89, (int) ' ');
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray17 = twoSumProblem6.HashMap(intArray15, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem6.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem64.TwoPointer(intArray88, (int) (short) 0);
        int[] intArray94 = twoSumProblem55.TwoPointer(intArray92, (-1));
        int[] intArray96 = twoSumProblem6.TwoPointer(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray94, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem37.HashMap(intArray52, (int) (byte) 100);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray52, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.TwoPointer(intArray79, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem57.HashMap(intArray85, (int) (short) 10);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem57.HashMap(intArray66, 100);
        int[] intArray70 = twoSumProblem42.TwoPointer(intArray68, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem42.BruteForce(intArray74, 1);
        int[] intArray80 = twoSumProblem0.BruteForce(intArray74, (int) '4');
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.TwoPointer(intArray81, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.TwoPointer(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.HashMap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem56.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.BruteForce(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem33.HashMap(intArray86, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray86, 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        int[] intArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem48.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem48.BruteForce(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem47.BruteForce(intArray89, (int) (byte) 1);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem17.TwoPointer(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem17.HashMap(intArray89, (int) ' ');
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem47.BruteForce(intArray77, 0);
        int[] intArray83 = twoSumProblem30.BruteForce(intArray77, (int) (short) 0);
        int[] intArray85 = twoSumProblem12.TwoPointer(intArray77, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        int[] intArray91 = twoSumProblem86.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem12.TwoPointer(intArray89, (int) 'a');
        int[] intArray95 = twoSumProblem0.BruteForce(intArray93, (int) (short) 10);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 0);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem39.HashMap(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.TwoPointer(intArray73, (int) (short) 0);
        int[] intArray77 = twoSumProblem39.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem6.BruteForce(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem39.HashMap(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem39.HashMap(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem39.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem39.BruteForce(intArray80, (int) (byte) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray87 = twoSumProblem0.HashMap(intArray85, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        int[] intArray52 = twoSumProblem0.HashMap(intArray50, (int) '#');
        java.lang.Class<?> wildcardClass53 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.TwoPointer(intArray28, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem39.TwoPointer(intArray77, (int) (short) -1);
        int[] intArray83 = twoSumProblem33.BruteForce(intArray77, (int) (byte) -1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray77, 1);
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        int[] intArray21 = twoSumProblem2.HashMap(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem2.HashMap(intArray25, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem2.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem2.HashMap(intArray43, (int) (short) 10);
        int[] intArray47 = twoSumProblem1.HashMap(intArray45, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem1.HashMap(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.HashMap(intArray61, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray54 = twoSumProblem0.BruteForce(intArray52, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem56.HashMap(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.TwoPointer(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem56.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem47.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) 'a');
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.TwoPointer(intArray28, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.BruteForce(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.HashMap(intArray63, 100);
        int[] intArray69 = twoSumProblem0.HashMap(intArray63, (int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem7.TwoPointer(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem6.TwoPointer(intArray75, 100);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray75, 100);
        java.lang.Class<?> wildcardClass80 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.BruteForce(intArray44, (int) (short) 0);
        int[] intArray52 = twoSumProblem17.HashMap(intArray50, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem17.HashMap(intArray66, 1);
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 1);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem69.HashMap(intArray90, 100);
        int[] intArray96 = twoSumProblem54.HashMap(intArray90, 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem17.HashMap(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem60.BruteForce(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem17.HashMap(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem64.TwoPointer(intArray86, (int) (short) 0);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 10);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray68 = twoSumProblem57.HashMap(intArray66, 100);
        int[] intArray70 = twoSumProblem42.TwoPointer(intArray68, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem71.HashMap(intArray86, (int) (byte) 100);
        int[] intArray90 = twoSumProblem42.TwoPointer(intArray88, (int) (byte) 100);
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (int) (byte) 100);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.HashMap(intArray93, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.TwoPointer(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem61.HashMap(intArray74, (int) '#');
        int[] intArray82 = twoSumProblem44.HashMap(intArray74, 10);
        int[] intArray84 = twoSumProblem29.BruteForce(intArray82, (int) (short) -1);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray82, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.TwoPointer(intArray13, (int) '#');
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        int[] intArray48 = twoSumProblem20.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem49.TwoPointer(intArray75, (int) (byte) 0);
        int[] intArray79 = twoSumProblem20.HashMap(intArray75, 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, 10);
        java.lang.Class<?> wildcardClass82 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 100);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem15.BruteForce(intArray46, (int) '#');
        int[] intArray52 = twoSumProblem0.BruteForce(intArray50, (int) ' ');
        int[] intArray56 = new int[] { (byte) 100, 0, (short) 1 };
        int[] intArray58 = twoSumProblem0.HashMap(intArray56, 0);
        java.lang.Class<?> wildcardClass59 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[100, 0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem17.BruteForce(intArray65, (int) (short) 100);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, 100);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        int[] intArray47 = twoSumProblem0.HashMap(intArray41, (int) (short) -1);
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray50 = twoSumProblem0.TwoPointer(intArray48, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray45 = twoSumProblem26.HashMap(intArray39, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem26.HashMap(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem26.BruteForce(intArray57, (int) '#');
        int[] intArray63 = twoSumProblem6.TwoPointer(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem65.TwoPointer(intArray77, (int) '#');
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) (byte) 0);
        int[] intArray85 = twoSumProblem6.TwoPointer(intArray83, 0);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem48.BruteForce(intArray66, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem48.HashMap(intArray77, (int) (short) 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 1);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.TwoPointer(intArray86, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem45.HashMap(intArray74, (int) (short) 10);
        int[] intArray82 = twoSumProblem25.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 100);
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.TwoPointer(intArray13, (int) '#');
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray47, (int) ' ');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.TwoPointer(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem33.BruteForce(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem18.TwoPointer(intArray80, 10);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, 10);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.BruteForce(intArray39, (int) (short) 0);
        int[] intArray47 = twoSumProblem12.HashMap(intArray45, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        int[] intArray69 = twoSumProblem12.HashMap(intArray61, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem70.BruteForce(intArray88, (int) (short) 0);
        int[] intArray96 = twoSumProblem12.TwoPointer(intArray88, 10);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.TwoPointer(intArray13, (int) '#');
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem20.TwoPointer(intArray79, 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass88 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem41.BruteForce(intArray53, 0);
        int[] intArray59 = twoSumProblem35.BruteForce(intArray53, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem35.BruteForce(intArray73, (int) '4');
        int[] intArray83 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        int[] intArray90 = new int[] { (byte) 0, ' ', '4', (short) -1, 10, ' ' };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 32, 52, -1, 10, 32]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray83, (int) '#');
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.BruteForce(intArray46, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem49.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem31.HashMap(intArray65, 10);
        int[] intArray69 = twoSumProblem0.TwoPointer(intArray67, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem70.HashMap(intArray85, (int) (byte) 100);
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, 10);
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem50.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray80 = twoSumProblem0.BruteForce(intArray78, 10);
        java.lang.Class<?> wildcardClass81 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.HashMap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        int[] intArray54 = twoSumProblem20.BruteForce(intArray50, 0);
        int[] intArray56 = twoSumProblem0.TwoPointer(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem57.HashMap(intArray72, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem57.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray87, (int) '#');
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.TwoPointer(intArray65, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem43.HashMap(intArray71, (int) (short) 10);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem88 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        int[] intArray93 = twoSumProblem88.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem87.HashMap(intArray91, (int) (short) 100);
        int[] intArray97 = twoSumProblem78.HashMap(intArray91, (int) '#');
        int[] intArray99 = twoSumProblem0.BruteForce(intArray91, (int) ' ');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem0.BruteForce(intArray63, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem68.HashMap(intArray77, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem68.TwoPointer(intArray92, (int) (short) 0);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, (int) (byte) -1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.BruteForce(intArray73, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem76.BruteForce(intArray90, (int) (byte) 0);
        int[] intArray94 = twoSumProblem58.HashMap(intArray92, 10);
        int[] intArray96 = twoSumProblem0.HashMap(intArray92, (int) (byte) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem47.TwoPointer(intArray81, 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray81, 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.BruteForce(intArray25, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        int[] intArray18 = twoSumProblem1.HashMap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem19.BruteForce(intArray31, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        int[] intArray65 = twoSumProblem19.BruteForce(intArray63, (int) (byte) 0);
        int[] intArray67 = twoSumProblem1.BruteForce(intArray65, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem1.TwoPointer(intArray84, 0);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) '4');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem36.TwoPointer(intArray81, (int) '#');
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem28.HashMap(intArray37, 100);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem42.BruteForce(intArray57, (int) (short) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray57, 0);
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.TwoPointer(intArray62, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem48.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem48.HashMap(intArray89, (int) (short) 10);
        int[] intArray93 = twoSumProblem47.HashMap(intArray91, (int) (short) 0);
        int[] intArray95 = twoSumProblem35.TwoPointer(intArray93, (int) (short) 0);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray93, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (-1));
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        int[] intArray52 = twoSumProblem0.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.HashMap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem59.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem53.TwoPointer(intArray89, (int) (short) -1);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray89, 10);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem15.HashMap(intArray81, 10);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem60.HashMap(intArray90, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, 0);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 1]");
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem77.HashMap(intArray86, 100);
        int[] intArray90 = twoSumProblem62.TwoPointer(intArray88, (int) (byte) 0);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem18.HashMap(intArray67, (int) (short) 100);
        int[] intArray71 = twoSumProblem17.TwoPointer(intArray69, (-1));
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        int[] intArray25 = twoSumProblem1.TwoPointer(intArray23, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem1.HashMap(intArray29, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        int[] intArray69 = twoSumProblem34.HashMap(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem1.TwoPointer(intArray69, 0);
        int[] intArray73 = twoSumProblem0.HashMap(intArray71, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem0.HashMap(intArray90, (int) '4');
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.HashMap(intArray38, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        int[] intArray73 = twoSumProblem43.BruteForce(intArray71, (int) (byte) 10);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.HashMap(intArray80, (int) (byte) 1);
        int[] intArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray89 = twoSumProblem0.HashMap(intArray87, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem38.HashMap(intArray53, (int) (byte) 100);
        int[] intArray57 = twoSumProblem9.TwoPointer(intArray55, (int) (byte) 100);
        int[] intArray59 = twoSumProblem0.BruteForce(intArray55, (int) (short) 1);
        java.lang.Class<?> wildcardClass60 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.BruteForce(intArray97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray35 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray37 = twoSumProblem23.TwoPointer(intArray35, 100);
        int[] intArray39 = twoSumProblem22.HashMap(intArray37, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem22.BruteForce(intArray52, 0);
        int[] intArray58 = twoSumProblem16.TwoPointer(intArray52, (int) (short) -1);
        int[] intArray60 = twoSumProblem1.HashMap(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem61.HashMap(intArray70, 100);
        int[] intArray74 = twoSumProblem1.BruteForce(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray90 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray92 = twoSumProblem78.TwoPointer(intArray90, 100);
        int[] intArray94 = twoSumProblem77.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray92, (int) (short) -1);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.TwoPointer(intArray64, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray64, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.TwoPointer(intArray82, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem64.HashMap(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem64.HashMap(intArray85, 100);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray59 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray61 = twoSumProblem47.TwoPointer(intArray59, 100);
        int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) '#');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.HashMap(intArray64, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem2.TwoPointer(intArray47, (int) '#');
        int[] intArray55 = twoSumProblem1.TwoPointer(intArray47, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem1.BruteForce(intArray75, (int) '4');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray75, (int) (byte) 0);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem32.HashMap(intArray62, (int) (byte) -1);
        int[] intArray68 = twoSumProblem15.HashMap(intArray66, (int) '4');
        int[] intArray70 = twoSumProblem0.BruteForce(intArray66, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (int) (byte) 100);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        int[] intArray21 = twoSumProblem10.HashMap(intArray19, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem28.BruteForce(intArray40, 0);
        int[] intArray46 = twoSumProblem22.TwoPointer(intArray44, (int) (short) 0);
        int[] intArray48 = twoSumProblem10.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem1.TwoPointer(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray70 = twoSumProblem51.HashMap(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem51.TwoPointer(intArray85, 10);
        int[] intArray89 = twoSumProblem1.BruteForce(intArray85, (int) 'a');
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, (int) '#');
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem59.TwoPointer(intArray71, (int) '#');
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) (byte) 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, 0);
        java.lang.Class<?> wildcardClass80 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray24 = twoSumProblem13.HashMap(intArray22, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem25.HashMap(intArray40, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray55 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray57 = twoSumProblem43.TwoPointer(intArray55, 100);
        int[] intArray59 = twoSumProblem25.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem13.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem62.HashMap(intArray75, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem62.HashMap(intArray85, 0);
        int[] intArray91 = twoSumProblem13.TwoPointer(intArray89, (int) ' ');
        int[] intArray93 = twoSumProblem12.TwoPointer(intArray89, (-1));
        int[] intArray95 = twoSumProblem0.BruteForce(intArray89, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem66.HashMap(intArray81, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem66.HashMap(intArray87, 100);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, 0);
        java.lang.Class<?> wildcardClass94 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem13.HashMap(intArray26, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem13.HashMap(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem13.BruteForce(intArray44, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem13.HashMap(intArray54, (int) (short) 10);
        int[] intArray58 = twoSumProblem12.HashMap(intArray56, (int) (short) 0);
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, (int) (short) 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.TwoPointer(intArray61, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem9.HashMap(intArray32, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem38.HashMap(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem50.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem38.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = twoSumProblem37.BruteForce(intArray86, 1);
        int[] intArray90 = twoSumProblem9.HashMap(intArray86, 1);
        int[] intArray92 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem46.HashMap(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem46.TwoPointer(intArray80, 10);
        int[] intArray84 = twoSumProblem40.TwoPointer(intArray80, (int) (byte) 1);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.TwoPointer(intArray64, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem42.BruteForce(intArray86, (int) (short) 10);
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, (int) '4');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem1.BruteForce(intArray64, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem1.HashMap(intArray80, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem83.HashMap(intArray92, 100);
        int[] intArray96 = twoSumProblem1.HashMap(intArray94, (int) (short) 100);
        int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 0);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray77, 1);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray77, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem47.HashMap(intArray56, 100);
        int[] intArray60 = twoSumProblem0.TwoPointer(intArray58, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem76.HashMap(intArray91, (int) (byte) 100);
        int[] intArray95 = twoSumProblem61.HashMap(intArray91, (int) (byte) -1);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 0);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.TwoPointer(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem43.HashMap(intArray73, 10);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray73, 1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem29.HashMap(intArray44, (int) (byte) 100);
        int[] intArray48 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem49.BruteForce(intArray64, (int) (short) 1);
        int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.TwoPointer(intArray82, (int) '#');
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) (byte) 0);
        int[] intArray90 = twoSumProblem0.HashMap(intArray82, (int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem59.TwoPointer(intArray71, (int) '#');
        int[] intArray77 = twoSumProblem58.HashMap(intArray71, (int) (byte) 0);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, 0);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem15.BruteForce(intArray59, (int) (byte) 0);
        int[] intArray63 = twoSumProblem0.HashMap(intArray59, 0);
        java.lang.Class<?> wildcardClass64 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.TwoPointer(intArray72, (int) '#');
        int[] intArray78 = twoSumProblem0.HashMap(intArray72, 0);
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem36.BruteForce(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) 'a');
        java.lang.Class<?> wildcardClass74 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem25.BruteForce(intArray80, (int) '4');
        int[] intArray88 = twoSumProblem0.TwoPointer(intArray80, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem0.BruteForce(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem55.TwoPointer(intArray67, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem81.HashMap(intArray85, (int) (short) 100);
        int[] intArray91 = twoSumProblem72.HashMap(intArray85, (int) '#');
        int[] intArray93 = twoSumProblem55.HashMap(intArray85, 10);
        int[] intArray95 = twoSumProblem0.TwoPointer(intArray85, (int) (short) 100);
        java.lang.Class<?> wildcardClass96 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        int[] intArray44 = twoSumProblem9.HashMap(intArray42, (int) (short) 1);
        int[] intArray46 = twoSumProblem0.HashMap(intArray42, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray52, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray85 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray87 = twoSumProblem73.TwoPointer(intArray85, 100);
        int[] intArray89 = twoSumProblem55.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem0.HashMap(intArray85, (int) (byte) 100);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.BruteForce(intArray92, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem10.TwoPointer(intArray46, (int) (short) -1);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem1.HashMap(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem1.TwoPointer(intArray84, (int) (byte) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray92, (int) (byte) 100);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem26.BruteForce(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem26.TwoPointer(intArray64, (int) (short) -1);
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray68, (int) (byte) 10);
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.BruteForce(intArray56, (int) (short) 0);
        int[] intArray64 = twoSumProblem29.HashMap(intArray62, (int) (short) 1);
        int[] intArray66 = twoSumProblem12.HashMap(intArray64, (int) (short) 100);
        int[] intArray68 = twoSumProblem0.HashMap(intArray64, 10);
        int[] intArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray71 = twoSumProblem0.HashMap(intArray69, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray81, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem55.BruteForce(intArray87, 1);
        int[] intArray93 = twoSumProblem1.BruteForce(intArray87, (int) (byte) 1);
        int[] intArray95 = twoSumProblem0.HashMap(intArray87, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem36.BruteForce(intArray75, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem78.HashMap(intArray87, 100);
        int[] intArray91 = twoSumProblem36.BruteForce(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 10);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.BruteForce(intArray44, 0);
        int[] intArray50 = twoSumProblem26.TwoPointer(intArray48, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem26.HashMap(intArray54, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem74.HashMap(intArray83, 100);
        int[] intArray87 = twoSumProblem59.TwoPointer(intArray85, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem88 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        int[] intArray93 = twoSumProblem88.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem59.BruteForce(intArray91, 1);
        int[] intArray97 = twoSumProblem26.TwoPointer(intArray91, (int) (short) 1);
        int[] intArray99 = twoSumProblem0.BruteForce(intArray91, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem40.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem40.TwoPointer(intArray72, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray72, (int) (byte) -1);
        int[] intArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray81 = twoSumProblem0.BruteForce(intArray79, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray50 = twoSumProblem39.HashMap(intArray48, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem51.TwoPointer(intArray73, (int) (short) 0);
        int[] intArray77 = twoSumProblem39.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem6.BruteForce(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray75, 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem21.HashMap(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem21.HashMap(intArray44, 0);
        int[] intArray50 = twoSumProblem6.TwoPointer(intArray48, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem72.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem66.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem51.BruteForce(intArray84, (int) (short) -1);
        int[] intArray94 = twoSumProblem6.BruteForce(intArray84, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray84, 100);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem68.HashMap(intArray83, (int) (byte) 100);
        int[] intArray87 = twoSumProblem53.HashMap(intArray83, (int) (byte) -1);
        int[] intArray89 = twoSumProblem36.HashMap(intArray87, (int) '4');
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, 0);
        java.lang.Class<?> wildcardClass92 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.BruteForce(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem9.BruteForce(intArray67, (int) (short) 1);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray67, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.HashMap(intArray79, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.TwoPointer(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.HashMap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem56.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.BruteForce(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, 100);
        java.lang.Class<?> wildcardClass35 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem9.HashMap(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem29.BruteForce(intArray60, (int) '#');
        int[] intArray66 = twoSumProblem9.TwoPointer(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem9.TwoPointer(intArray70, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem9.BruteForce(intArray89, (int) '#');
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray89, 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.TwoPointer(intArray59, 0);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray14 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray16 = twoSumProblem2.TwoPointer(intArray14, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem2.TwoPointer(intArray47, (int) '#');
        int[] intArray55 = twoSumProblem1.TwoPointer(intArray47, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem1.BruteForce(intArray75, (int) '4');
        int[] intArray79 = twoSumProblem0.BruteForce(intArray75, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, 0);
        java.lang.Class<?> wildcardClass91 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        int[] intArray69 = twoSumProblem34.HashMap(intArray67, (int) (short) 1);
        int[] intArray71 = twoSumProblem25.HashMap(intArray67, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem25.HashMap(intArray77, (int) (short) 0);
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray79, (int) '4');
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.TwoPointer(intArray39, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem42.TwoPointer(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem74.HashMap(intArray89, (int) (byte) 100);
        int[] intArray93 = twoSumProblem59.HashMap(intArray89, (int) (byte) -1);
        int[] intArray95 = twoSumProblem42.HashMap(intArray93, (int) '4');
        int[] intArray97 = twoSumProblem17.BruteForce(intArray93, (-1));
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray93, 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem48.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem42.BruteForce(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem67.HashMap(intArray80, (int) '#');
        int[] intArray88 = twoSumProblem42.BruteForce(intArray80, (int) '4');
        int[] intArray90 = twoSumProblem17.BruteForce(intArray88, 0);
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (int) '4');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.HashMap(intArray84, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem69.HashMap(intArray90, 100);
        int[] intArray96 = twoSumProblem54.HashMap(intArray90, 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (short) 0);
        java.lang.Class<?> wildcardClass99 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.TwoPointer(intArray74, (int) '#');
        int[] intArray80 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray83 = twoSumProblem0.TwoPointer(intArray81, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray28 = twoSumProblem17.HashMap(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem17.TwoPointer(intArray41, (int) (short) 0);
        int[] intArray47 = twoSumProblem0.HashMap(intArray41, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.TwoPointer(intArray66, (int) '#');
        int[] intArray72 = twoSumProblem48.BruteForce(intArray70, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem48.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray94, (int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        int[] intArray78 = twoSumProblem37.BruteForce(intArray70, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem37.HashMap(intArray91, (int) (byte) 1);
        int[] intArray97 = twoSumProblem0.HashMap(intArray95, (-1));
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem17.TwoPointer(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem17.HashMap(intArray89, (int) ' ');
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem25.BruteForce(intArray43, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem50.BruteForce(intArray78, (int) (byte) 10);
        int[] intArray82 = twoSumProblem25.HashMap(intArray78, (int) '4');
        int[] intArray84 = twoSumProblem0.HashMap(intArray82, (int) ' ');
        java.lang.Class<?> wildcardClass85 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.HashMap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem39.BruteForce(intArray69, 0);
        int[] intArray75 = twoSumProblem6.TwoPointer(intArray73, 0);
        int[] intArray77 = twoSumProblem0.HashMap(intArray75, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 10);
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem0.TwoPointer(intArray50, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray72, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.HashMap(intArray90, (-1));
        java.lang.Class<?> wildcardClass95 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.TwoPointer(intArray13, (int) '#');
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem56.TwoPointer(intArray68, (int) '#');
        int[] intArray74 = twoSumProblem20.HashMap(intArray68, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray85 = twoSumProblem20.TwoPointer(intArray79, 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray79, (int) (byte) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.BruteForce(intArray13, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.HashMap(intArray33, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem18.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.BruteForce(intArray48, (int) (short) 0);
        int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem63.HashMap(intArray67, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem63.BruteForce(intArray75, 0);
        int[] intArray81 = twoSumProblem57.TwoPointer(intArray79, (int) (short) 0);
        int[] intArray83 = twoSumProblem0.BruteForce(intArray81, (int) (byte) -1);
        java.lang.Class<?> wildcardClass84 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray23 = twoSumProblem12.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.TwoPointer(intArray46, (int) (short) 0);
        int[] intArray50 = twoSumProblem12.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem12.TwoPointer(intArray85, (int) '4');
        int[] intArray89 = twoSumProblem0.HashMap(intArray85, (int) '#');
        java.lang.Class<?> wildcardClass90 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.BruteForce(intArray38, 0);
        int[] intArray44 = twoSumProblem20.BruteForce(intArray38, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem20.HashMap(intArray49, (int) (short) 10);
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, 100);
        java.lang.Class<?> wildcardClass58 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem15.BruteForce(intArray62, (int) '#');
        int[] intArray70 = twoSumProblem0.TwoPointer(intArray62, 10);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray73 = twoSumProblem0.BruteForce(intArray71, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem0.HashMap(intArray53, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem56.HashMap(intArray89, (int) (short) 1);
        int[] intArray93 = twoSumProblem0.HashMap(intArray89, (int) (short) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.BruteForce(intArray94, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.BruteForce(intArray66, 0);
        int[] intArray72 = twoSumProblem48.BruteForce(intArray66, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem48.HashMap(intArray77, (int) (short) 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem0.BruteForce(intArray67, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.HashMap(intArray70, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        int[] intArray21 = twoSumProblem2.HashMap(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem2.HashMap(intArray25, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem2.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem2.HashMap(intArray43, (int) (short) 10);
        int[] intArray47 = twoSumProblem1.HashMap(intArray45, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem1.HashMap(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem61.HashMap(intArray76, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray91 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray93 = twoSumProblem79.TwoPointer(intArray91, 100);
        int[] intArray95 = twoSumProblem61.BruteForce(intArray91, 0);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, 10);
        java.lang.Class<?> wildcardClass98 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem0.TwoPointer(intArray51, (int) 'a');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem26.TwoPointer(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem26.BruteForce(intArray73, (int) '#');
        int[] intArray81 = twoSumProblem20.HashMap(intArray73, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem20.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem0.BruteForce(intArray86, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem38.HashMap(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem38.HashMap(intArray61, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem38.BruteForce(intArray69, (int) '#');
        int[] intArray75 = twoSumProblem18.TwoPointer(intArray73, (int) (short) 100);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) (byte) 100);
        java.lang.Class<?> wildcardClass78 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, (-1));
        java.lang.Class<?> wildcardClass66 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.TwoPointer(intArray32, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem37.HashMap(intArray79, 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem86 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem86.HashMap(intArray90, (int) (short) 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray90, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        int[] intArray19 = twoSumProblem11.HashMap(intArray15, (int) (short) 100);
        int[] intArray21 = twoSumProblem2.HashMap(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem2.HashMap(intArray25, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem2.BruteForce(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem2.HashMap(intArray43, (int) (short) 10);
        int[] intArray47 = twoSumProblem1.HashMap(intArray45, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem1.HashMap(intArray52, (int) '#');
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.HashMap(intArray61, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 1]");
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        int[] intArray77 = twoSumProblem35.TwoPointer(intArray71, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem78.BruteForce(intArray90, 0);
        int[] intArray96 = twoSumProblem35.BruteForce(intArray90, (int) '4');
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray96, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        int[] intArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray33 = twoSumProblem0.TwoPointer(intArray31, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem17.BruteForce(intArray29, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem34.HashMap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem52.HashMap(intArray67, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem52.BruteForce(intArray82, 0);
        int[] intArray88 = twoSumProblem34.BruteForce(intArray82, (int) (short) 100);
        int[] intArray90 = twoSumProblem17.HashMap(intArray88, 100);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray88, (int) '4');
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.HashMap(intArray93, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem29.BruteForce(intArray61, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem81.HashMap(intArray90, 100);
        int[] intArray94 = twoSumProblem66.TwoPointer(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem29.TwoPointer(intArray94, 0);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 0);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem20.HashMap(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem20.BruteForce(intArray51, (int) '#');
        int[] intArray57 = twoSumProblem0.TwoPointer(intArray55, (int) (short) 100);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem66.BruteForce(intArray81, (int) (short) 1);
        int[] intArray85 = twoSumProblem0.HashMap(intArray81, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem1.HashMap(intArray14, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem1.HashMap(intArray24, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem1.BruteForce(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem1.HashMap(intArray42, (int) (short) 10);
        int[] intArray46 = twoSumProblem0.HashMap(intArray44, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem47.BruteForce(intArray59, 0);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.TwoPointer(intArray79, (int) '#');
        int[] intArray85 = twoSumProblem66.HashMap(intArray79, (int) (byte) 0);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray79, 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.BruteForce(intArray72, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray40, 10);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        int[] intArray45 = new int[] {};
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.TwoPointer(intArray66, (int) '#');
        int[] intArray72 = twoSumProblem48.BruteForce(intArray70, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem48.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = intArray96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem0.BruteForce(intArray37, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem50.TwoPointer(intArray62, (int) '#');
        int[] intArray68 = twoSumProblem44.BruteForce(intArray66, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem78.HashMap(intArray82, (int) (short) 100);
        int[] intArray88 = twoSumProblem69.HashMap(intArray82, (int) '#');
        int[] intArray90 = twoSumProblem44.BruteForce(intArray88, (int) (short) 1);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray88, (int) (short) 1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray47, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray69, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        int[] intArray86 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray88 = twoSumProblem74.TwoPointer(intArray86, 100);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem17.HashMap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem17.BruteForce(intArray47, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem17.HashMap(intArray55, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray90 = twoSumProblem60.BruteForce(intArray88, (int) (byte) 10);
        int[] intArray92 = twoSumProblem17.HashMap(intArray90, (int) (short) 0);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray94.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray31 = twoSumProblem12.HashMap(intArray25, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem12.HashMap(intArray35, 0);
        int[] intArray41 = twoSumProblem0.TwoPointer(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem48.HashMap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray78 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray80 = twoSumProblem66.TwoPointer(intArray78, 100);
        int[] intArray82 = twoSumProblem48.BruteForce(intArray78, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem48.TwoPointer(intArray86, (int) (short) -1);
        int[] intArray92 = twoSumProblem42.BruteForce(intArray86, (int) (byte) -1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray86, 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem52.BruteForce(intArray64, 0);
        int[] intArray70 = twoSumProblem0.HashMap(intArray68, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 1]");
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem31.BruteForce(intArray43, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray67 = twoSumProblem48.HashMap(intArray61, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem48.HashMap(intArray71, 0);
        int[] intArray77 = twoSumProblem31.BruteForce(intArray75, (int) (byte) 0);
        int[] intArray79 = twoSumProblem6.TwoPointer(intArray75, (int) ' ');
        int[] intArray81 = twoSumProblem0.HashMap(intArray75, 10);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray78 = twoSumProblem59.HashMap(intArray72, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem59.HashMap(intArray82, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem59.BruteForce(intArray90, (int) '#');
        int[] intArray96 = twoSumProblem0.BruteForce(intArray90, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        int[] intArray51 = twoSumProblem17.HashMap(intArray47, (int) (byte) -1);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, (int) '4');
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray56 = twoSumProblem0.BruteForce(intArray54, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem15.HashMap(intArray81, 10);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem57.TwoPointer(intArray69, (int) '#');
        int[] intArray75 = twoSumProblem51.BruteForce(intArray73, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem51.BruteForce(intArray88, 0);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, 100);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem32.HashMap(intArray55, 0);
        int[] intArray61 = twoSumProblem17.TwoPointer(intArray59, (int) (short) 1);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem64.HashMap(intArray79, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem64.HashMap(intArray85, 100);
        int[] intArray91 = twoSumProblem0.HashMap(intArray89, (int) (byte) 100);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem35.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem35.HashMap(intArray76, (int) (short) 10);
        int[] intArray80 = twoSumProblem0.HashMap(intArray78, (int) 'a');
        java.lang.Class<?> wildcardClass81 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray51 = twoSumProblem32.HashMap(intArray45, (int) '#');
        int[] intArray53 = twoSumProblem15.HashMap(intArray45, 10);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem57.HashMap(intArray61, (int) (short) 100);
        int[] intArray69 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray71 = twoSumProblem57.TwoPointer(intArray69, 100);
        int[] intArray73 = twoSumProblem56.HashMap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem56.HashMap(intArray77, 100);
        int[] intArray83 = twoSumProblem0.TwoPointer(intArray81, (int) '4');
        java.lang.Class<?> wildcardClass84 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem26.HashMap(intArray35, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray50 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray52 = twoSumProblem38.TwoPointer(intArray50, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem53.HashMap(intArray62, 100);
        int[] intArray66 = twoSumProblem38.TwoPointer(intArray64, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem38.TwoPointer(intArray70, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem38.HashMap(intArray87, (int) (byte) -1);
        int[] intArray95 = twoSumProblem26.HashMap(intArray93, (int) (short) 1);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, (int) '#');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem32.TwoPointer(intArray44, (int) '#');
        int[] intArray50 = twoSumProblem26.BruteForce(intArray48, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem26.BruteForce(intArray63, 0);
        int[] intArray71 = twoSumProblem0.TwoPointer(intArray69, (int) (short) 0);
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray74 = twoSumProblem0.HashMap(intArray72, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem37.BruteForce(intArray74, (-1));
        int[] intArray80 = twoSumProblem20.HashMap(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray78, (int) (short) 100);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.TwoPointer(intArray83, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem68.BruteForce(intArray86, (int) (short) 0);
        int[] intArray94 = twoSumProblem59.HashMap(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem50.HashMap(intArray92, 100);
        int[] intArray98 = twoSumProblem0.TwoPointer(intArray92, 1);
        java.lang.Class<?> wildcardClass99 = intArray98.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        int[] intArray19 = twoSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray21 = twoSumProblem13.HashMap(intArray17, (int) (short) 100);
        int[] intArray25 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray27 = twoSumProblem13.TwoPointer(intArray25, 100);
        int[] intArray29 = twoSumProblem12.HashMap(intArray27, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray42 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray44 = twoSumProblem30.TwoPointer(intArray42, 100);
        int[] intArray46 = twoSumProblem12.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem0.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem67.BruteForce(intArray85, (int) (short) 0);
        int[] intArray93 = twoSumProblem58.HashMap(intArray91, (int) (short) 1);
        int[] intArray95 = twoSumProblem49.HashMap(intArray91, 100);
        int[] intArray97 = twoSumProblem0.HashMap(intArray91, (int) ' ');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray34 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray36 = twoSumProblem22.TwoPointer(intArray34, 100);
        int[] intArray38 = twoSumProblem21.HashMap(intArray36, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        int[] intArray55 = twoSumProblem21.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem15.TwoPointer(intArray51, (int) (short) -1);
        int[] intArray59 = twoSumProblem0.HashMap(intArray57, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray71 = twoSumProblem60.HashMap(intArray69, 100);
        int[] intArray73 = twoSumProblem0.BruteForce(intArray71, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem0.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem33.HashMap(intArray42, 100);
        int[] intArray46 = twoSumProblem18.TwoPointer(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        int[] intArray76 = twoSumProblem18.HashMap(intArray70, (int) '4');
        int[] intArray78 = twoSumProblem0.HashMap(intArray76, 0);
        java.lang.Class<?> wildcardClass79 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem25.BruteForce(intArray37, 0);
        int[] intArray43 = twoSumProblem19.BruteForce(intArray37, (int) (short) 0);
        int[] intArray45 = twoSumProblem10.HashMap(intArray43, (int) (short) 1);
        int[] intArray47 = twoSumProblem1.HashMap(intArray43, 100);
        int[] intArray49 = twoSumProblem0.BruteForce(intArray43, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem50.HashMap(intArray59, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem62.TwoPointer(intArray84, (int) (short) 0);
        int[] intArray88 = twoSumProblem50.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem44.HashMap(intArray53, 100);
        int[] intArray57 = twoSumProblem29.TwoPointer(intArray55, (int) (byte) 0);
        int[] intArray59 = twoSumProblem0.HashMap(intArray55, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray79 = twoSumProblem60.HashMap(intArray73, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem60.TwoPointer(intArray94, 10);
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, 10);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        int[] intArray38 = twoSumProblem0.TwoPointer(intArray36, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem63.HashMap(intArray72, 100);
        int[] intArray76 = twoSumProblem48.TwoPointer(intArray74, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem48.BruteForce(intArray80, 1);
        int[] intArray86 = twoSumProblem39.TwoPointer(intArray80, 1);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 0);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray72 = twoSumProblem0.BruteForce(intArray70, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        int[] intArray56 = twoSumProblem39.BruteForce(intArray54, (int) (short) 1);
        int[] intArray58 = twoSumProblem0.HashMap(intArray54, (int) (byte) 10);
        java.lang.Class<?> wildcardClass59 = intArray58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        int[] intArray48 = twoSumProblem31.HashMap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem31.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem25.TwoPointer(intArray61, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.BruteForce(intArray80, 0);
        int[] intArray86 = twoSumProblem25.BruteForce(intArray80, (int) '4');
        int[] intArray88 = twoSumProblem0.HashMap(intArray80, (int) (short) 100);
        java.lang.Class<?> wildcardClass89 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem33.HashMap(intArray48, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem33.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem15.BruteForce(intArray63, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray81 = twoSumProblem70.HashMap(intArray79, 100);
        int[] intArray83 = twoSumProblem15.HashMap(intArray81, 10);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) ' ');
        java.lang.Class<?> wildcardClass86 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem39.HashMap(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem39.HashMap(intArray62, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem39.BruteForce(intArray70, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem39.BruteForce(intArray80, (int) (byte) 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass85 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray40, 10);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        int[] intArray45 = new int[] {};
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem54.TwoPointer(intArray66, (int) '#');
        int[] intArray72 = twoSumProblem48.BruteForce(intArray70, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem73.HashMap(intArray86, (int) '#');
        int[] intArray94 = twoSumProblem48.BruteForce(intArray92, (int) (short) 1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) (byte) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray63 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray65 = twoSumProblem51.TwoPointer(intArray63, 100);
        int[] intArray67 = twoSumProblem50.HashMap(intArray65, (int) (byte) 100);
        int[] intArray69 = twoSumProblem35.HashMap(intArray65, (int) (byte) -1);
        int[] intArray71 = twoSumProblem0.HashMap(intArray65, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.TwoPointer(intArray85, (int) '#');
        int[] intArray91 = twoSumProblem72.HashMap(intArray85, (int) (byte) 0);
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) -1);
        int[] intArray96 = new int[] { 1, (short) -1 };
        int[] intArray98 = twoSumProblem0.HashMap(intArray96, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[1, -1]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem15.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem9.TwoPointer(intArray45, (int) (short) -1);
        int[] intArray53 = twoSumProblem0.BruteForce(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem0.BruteForce(intArray89, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 1]");
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem9.BruteForce(intArray21, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray57 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray59 = twoSumProblem45.TwoPointer(intArray57, 100);
        int[] intArray61 = twoSumProblem44.HashMap(intArray59, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray74 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray76 = twoSumProblem62.TwoPointer(intArray74, 100);
        int[] intArray78 = twoSumProblem44.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem26.BruteForce(intArray74, (int) (short) 100);
        int[] intArray82 = twoSumProblem9.HashMap(intArray80, 100);
        int[] intArray84 = twoSumProblem0.TwoPointer(intArray80, (int) ' ');
        int[] intArray90 = new int[] { 1, (-1), 100, (byte) -1, '#' };
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 10);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[1, -1, 100, -1, 35]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        int[] intArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray27 = twoSumProblem0.BruteForce(intArray25, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray32 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray34 = twoSumProblem20.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem35.HashMap(intArray58, 0);
        int[] intArray64 = twoSumProblem20.TwoPointer(intArray62, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem71.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem65.BruteForce(intArray83, (int) (short) 0);
        int[] intArray91 = twoSumProblem20.TwoPointer(intArray83, (int) '4');
        int[] intArray93 = twoSumProblem0.TwoPointer(intArray91, 100);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray22 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray24 = twoSumProblem10.TwoPointer(intArray22, 100);
        int[] intArray26 = twoSumProblem9.HashMap(intArray24, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem9.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem9.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem67.BruteForce(intArray79, 0);
        int[] intArray85 = twoSumProblem61.BruteForce(intArray79, (int) (short) 0);
        int[] intArray87 = twoSumProblem9.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.BruteForce(intArray87, (int) (short) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 1]");
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        int[] intArray24 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray26 = twoSumProblem12.TwoPointer(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray24, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.BruteForce(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem70.TwoPointer(intArray82, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem88 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        int[] intArray93 = twoSumProblem88.BruteForce(intArray91, (int) '#');
        int[] intArray95 = twoSumProblem87.HashMap(intArray91, (int) (short) 100);
        int[] intArray97 = twoSumProblem70.TwoPointer(intArray91, 10);
        int[] intArray99 = twoSumProblem0.TwoPointer(intArray97, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[0, 0]");
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem68.TwoPointer(intArray80, (int) '#');
        int[] intArray86 = twoSumProblem62.BruteForce(intArray84, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem87 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        int[] intArray92 = twoSumProblem87.BruteForce(intArray90, (int) '#');
        int[] intArray94 = twoSumProblem62.TwoPointer(intArray90, (-1));
        int[] intArray96 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) 10);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.BruteForce(intArray18, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        int[] intArray57 = twoSumProblem38.HashMap(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem38.HashMap(intArray61, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem38.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem38.HashMap(intArray79, (int) (short) 10);
        int[] intArray83 = twoSumProblem37.HashMap(intArray81, (int) (short) 0);
        int[] intArray85 = twoSumProblem25.TwoPointer(intArray83, (int) (short) 0);
        int[] intArray87 = twoSumProblem0.HashMap(intArray83, 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        int[] intArray25 = twoSumProblem1.TwoPointer(intArray23, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem26.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem1.TwoPointer(intArray60, (int) ' ');
        int[] intArray64 = twoSumProblem0.BruteForce(intArray60, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem0.HashMap(intArray73, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem25.HashMap(intArray34, 100);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray58 = twoSumProblem39.HashMap(intArray52, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.HashMap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray89 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray91 = twoSumProblem77.TwoPointer(intArray89, 100);
        int[] intArray93 = twoSumProblem59.BruteForce(intArray89, 0);
        int[] intArray95 = twoSumProblem39.TwoPointer(intArray89, (int) (short) 100);
        int[] intArray97 = twoSumProblem0.BruteForce(intArray95, (int) ' ');
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        int[] intArray11 = twoSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        int[] intArray18 = twoSumProblem13.BruteForce(intArray16, (int) '#');
        int[] intArray20 = twoSumProblem12.HashMap(intArray16, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem12.BruteForce(intArray24, 0);
        int[] intArray30 = twoSumProblem6.TwoPointer(intArray28, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem6.HashMap(intArray34, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.TwoPointer(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem39.HashMap(intArray69, 10);
        int[] intArray79 = twoSumProblem6.BruteForce(intArray69, (int) (short) 0);
        int[] intArray81 = twoSumProblem0.BruteForce(intArray79, 1);
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        int[] intArray33 = twoSumProblem17.BruteForce(intArray31, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.BruteForce(intArray61, 0);
        int[] intArray67 = twoSumProblem43.BruteForce(intArray61, (int) (short) 0);
        int[] intArray69 = twoSumProblem34.HashMap(intArray67, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        int[] intArray85 = twoSumProblem80.BruteForce(intArray83, (int) '#');
        int[] intArray87 = twoSumProblem79.HashMap(intArray83, (int) (short) 100);
        int[] intArray89 = twoSumProblem70.HashMap(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem34.HashMap(intArray83, 1);
        int[] intArray93 = twoSumProblem17.BruteForce(intArray83, 0);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray83, 0);
        java.lang.Class<?> wildcardClass96 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        int[] intArray58 = twoSumProblem0.HashMap(intArray52, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem59.BruteForce(intArray74, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem83.HashMap(intArray87, (int) (short) 100);
        int[] intArray93 = twoSumProblem77.BruteForce(intArray91, (int) (byte) 0);
        int[] intArray95 = twoSumProblem59.HashMap(intArray93, 10);
        int[] intArray97 = twoSumProblem0.TwoPointer(intArray93, (int) (byte) -1);
        java.lang.Class<?> wildcardClass98 = intArray93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        int[] intArray63 = twoSumProblem28.HashMap(intArray61, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        int[] intArray83 = twoSumProblem64.HashMap(intArray77, (int) '#');
        int[] intArray85 = twoSumProblem28.HashMap(intArray83, (-1));
        int[] intArray87 = twoSumProblem0.HashMap(intArray85, 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem54.HashMap(intArray63, 100);
        int[] intArray67 = twoSumProblem39.TwoPointer(intArray65, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem39.TwoPointer(intArray71, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem76.BruteForce(intArray88, 0);
        int[] intArray94 = twoSumProblem39.HashMap(intArray88, (int) (byte) -1);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray94, 0);
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.TwoPointer(intArray18, (int) '#');
        int[] intArray24 = twoSumProblem0.BruteForce(intArray22, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        int[] intArray46 = twoSumProblem0.HashMap(intArray38, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem47.HashMap(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem47.BruteForce(intArray78, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem47.HashMap(intArray88, (int) (short) 10);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
        int[] intArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray95 = twoSumProblem0.BruteForce(intArray93, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        int[] intArray35 = twoSumProblem1.HashMap(intArray31, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.BruteForce(intArray48, 0);
        int[] intArray54 = twoSumProblem1.HashMap(intArray52, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem55.TwoPointer(intArray79, (int) (short) 0);
        int[] intArray85 = twoSumProblem1.HashMap(intArray83, (int) (short) -1);
        int[] intArray87 = twoSumProblem0.BruteForce(intArray83, (int) (short) 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray90 = twoSumProblem0.TwoPointer(intArray88, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray37 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray39 = twoSumProblem25.TwoPointer(intArray37, 100);
        int[] intArray41 = twoSumProblem24.HashMap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem24.BruteForce(intArray54, 0);
        int[] intArray60 = twoSumProblem18.TwoPointer(intArray54, (int) (short) -1);
        int[] intArray64 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray66 = twoSumProblem18.TwoPointer(intArray64, (int) (short) -1);
        int[] intArray68 = twoSumProblem0.TwoPointer(intArray66, (-1));
        java.lang.Class<?> wildcardClass69 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem6.TwoPointer(intArray44, (int) (short) -1);
        int[] intArray50 = twoSumProblem0.BruteForce(intArray44, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.TwoPointer(intArray63, (int) '#');
        int[] intArray69 = twoSumProblem0.BruteForce(intArray63, 10);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem33.BruteForce(intArray45, 0);
        int[] intArray51 = twoSumProblem27.TwoPointer(intArray49, (int) (short) 0);
        int[] intArray53 = twoSumProblem15.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem15.TwoPointer(intArray88, (int) '4');
        int[] intArray92 = twoSumProblem0.HashMap(intArray88, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem30.BruteForce(intArray42, 0);
        int[] intArray48 = twoSumProblem24.BruteForce(intArray42, (int) (short) 0);
        int[] intArray50 = twoSumProblem9.BruteForce(intArray42, (int) (short) -1);
        int[] intArray52 = twoSumProblem0.BruteForce(intArray42, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem53.HashMap(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem53.HashMap(intArray76, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem53.BruteForce(intArray84, (int) '#');
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, 100);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray44 = twoSumProblem25.HashMap(intArray38, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem51.BruteForce(intArray63, 0);
        int[] intArray69 = twoSumProblem45.BruteForce(intArray63, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem45.HashMap(intArray74, (int) (short) 10);
        int[] intArray82 = twoSumProblem25.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem0.BruteForce(intArray82, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem0.BruteForce(intArray88, 0);
        java.lang.Class<?> wildcardClass93 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray80 = twoSumProblem69.HashMap(intArray78, 100);
        int[] intArray82 = twoSumProblem54.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem0.HashMap(intArray80, 100);
        java.lang.Class<?> wildcardClass85 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray86 = twoSumProblem75.HashMap(intArray84, 100);
        int[] intArray88 = twoSumProblem0.HashMap(intArray86, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem50.HashMap(intArray59, 100);
        int[] intArray63 = twoSumProblem0.BruteForce(intArray61, 100);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray66 = twoSumProblem0.BruteForce(intArray64, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        int[] intArray19 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray21 = twoSumProblem7.TwoPointer(intArray19, 100);
        int[] intArray23 = twoSumProblem6.HashMap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray36 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray38 = twoSumProblem24.TwoPointer(intArray36, 100);
        int[] intArray40 = twoSumProblem6.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray36, (int) (short) -1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray45 = twoSumProblem0.HashMap(intArray43, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem42.HashMap(intArray51, 100);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem56.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray75, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem38.HashMap(intArray42, (int) (short) 100);
        int[] intArray48 = twoSumProblem29.HashMap(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem29.HashMap(intArray52, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem29.BruteForce(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem29.HashMap(intArray70, (int) (short) 10);
        int[] intArray74 = twoSumProblem28.HashMap(intArray72, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.BruteForce(intArray87, 0);
        int[] intArray93 = twoSumProblem28.BruteForce(intArray91, (-1));
        int[] intArray95 = twoSumProblem0.BruteForce(intArray91, 10);
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem0.BruteForce(intArray32, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem43.BruteForce(intArray55, 0);
        int[] intArray61 = twoSumProblem37.BruteForce(intArray55, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        int[] intArray72 = twoSumProblem37.HashMap(intArray66, (int) (short) 10);
        int[] intArray74 = twoSumProblem0.HashMap(intArray72, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem0.HashMap(intArray80, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem0.HashMap(intArray88, 10);
        java.lang.Class<?> wildcardClass91 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem27.BruteForce(intArray39, 0);
        int[] intArray45 = twoSumProblem21.TwoPointer(intArray43, (int) (short) 0);
        int[] intArray47 = twoSumProblem9.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray69 = twoSumProblem50.HashMap(intArray63, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem50.TwoPointer(intArray84, 10);
        int[] intArray88 = twoSumProblem0.BruteForce(intArray84, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray27 = twoSumProblem0.TwoPointer(intArray21, 10);
        java.lang.Class<?> wildcardClass28 = intArray27.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem41.HashMap(intArray45, (int) (short) 100);
        int[] intArray53 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray55 = twoSumProblem41.TwoPointer(intArray53, 100);
        int[] intArray57 = twoSumProblem40.HashMap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        int[] intArray70 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray72 = twoSumProblem58.TwoPointer(intArray70, 100);
        int[] intArray74 = twoSumProblem40.BruteForce(intArray70, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        int[] intArray87 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray89 = twoSumProblem75.TwoPointer(intArray87, 100);
        int[] intArray91 = twoSumProblem40.HashMap(intArray89, (int) (short) 100);
        int[] intArray93 = twoSumProblem0.BruteForce(intArray91, (int) (short) -1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        int[] intArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray37 = twoSumProblem0.TwoPointer(intArray35, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        int[] intArray52 = twoSumProblem0.HashMap(intArray50, (int) '#');
        java.lang.Class<?> wildcardClass53 = intArray50.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray54 = twoSumProblem35.HashMap(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem64.HashMap(intArray68, (int) (short) 100);
        int[] intArray74 = twoSumProblem55.HashMap(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem55.HashMap(intArray78, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem55.BruteForce(intArray86, (int) '#');
        int[] intArray92 = twoSumProblem35.TwoPointer(intArray90, (int) (short) 100);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
        java.lang.Class<?> wildcardClass95 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem6.BruteForce(intArray18, 0);
        int[] intArray24 = twoSumProblem0.TwoPointer(intArray22, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem0.HashMap(intArray28, (int) (short) 10);
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray35 = twoSumProblem0.BruteForce(intArray33, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem15.HashMap(intArray28, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem15.HashMap(intArray38, 0);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray42, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray58 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray60 = twoSumProblem46.TwoPointer(intArray58, 100);
        int[] intArray62 = twoSumProblem45.HashMap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem45.HashMap(intArray66, 100);
        int[] intArray72 = twoSumProblem0.HashMap(intArray70, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        int[] intArray79 = twoSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray81 = twoSumProblem73.HashMap(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        int[] intArray87 = twoSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray89 = twoSumProblem73.BruteForce(intArray85, 0);
        int[] intArray91 = twoSumProblem0.TwoPointer(intArray89, (int) (byte) 10);
        java.lang.Class<?> wildcardClass92 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem19.HashMap(intArray28, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        int[] intArray55 = twoSumProblem31.TwoPointer(intArray53, (int) (short) 0);
        int[] intArray57 = twoSumProblem19.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem18.HashMap(intArray55, (int) (byte) 1);
        int[] intArray61 = twoSumProblem0.BruteForce(intArray59, (-1));
        int[] intArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray64 = twoSumProblem0.TwoPointer(intArray62, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray40, 10);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        int[] intArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray47 = twoSumProblem0.TwoPointer(intArray45, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray41 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray43 = twoSumProblem29.TwoPointer(intArray41, 100);
        int[] intArray45 = twoSumProblem28.BruteForce(intArray43, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem46.BruteForce(intArray60, (int) (byte) 0);
        int[] intArray64 = twoSumProblem28.HashMap(intArray62, 10);
        int[] intArray66 = twoSumProblem0.TwoPointer(intArray62, 0);
        java.lang.Class<?> wildcardClass67 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        int[] intArray31 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray33 = twoSumProblem19.TwoPointer(intArray31, 100);
        int[] intArray35 = twoSumProblem18.BruteForce(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray66 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray68 = twoSumProblem54.TwoPointer(intArray66, 100);
        int[] intArray70 = twoSumProblem53.HashMap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        int[] intArray77 = twoSumProblem72.BruteForce(intArray75, (int) '#');
        int[] intArray79 = twoSumProblem71.HashMap(intArray75, (int) (short) 100);
        int[] intArray83 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray85 = twoSumProblem71.TwoPointer(intArray83, 100);
        int[] intArray87 = twoSumProblem53.BruteForce(intArray83, 0);
        int[] intArray89 = twoSumProblem36.BruteForce(intArray83, (int) '#');
        int[] intArray91 = twoSumProblem18.HashMap(intArray83, (int) ' ');
        int[] intArray93 = twoSumProblem0.BruteForce(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        int[] intArray39 = twoSumProblem20.HashMap(intArray33, (int) '#');
        int[] intArray41 = twoSumProblem0.BruteForce(intArray39, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        int[] intArray53 = twoSumProblem42.HashMap(intArray51, 100);
        int[] intArray55 = twoSumProblem0.BruteForce(intArray51, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem62.HashMap(intArray66, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem62.BruteForce(intArray74, 0);
        int[] intArray80 = twoSumProblem56.BruteForce(intArray74, (int) (short) 0);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.HashMap(intArray83, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem37.BruteForce(intArray49, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray84 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray86 = twoSumProblem72.TwoPointer(intArray84, 100);
        int[] intArray88 = twoSumProblem54.BruteForce(intArray84, 0);
        int[] intArray90 = twoSumProblem37.BruteForce(intArray84, (int) (short) 0);
        int[] intArray92 = twoSumProblem36.BruteForce(intArray90, (int) (short) 1);
        int[] intArray94 = twoSumProblem0.TwoPointer(intArray92, (int) ' ');
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.HashMap(intArray95, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.TwoPointer(intArray40, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem18.HashMap(intArray46, (int) (short) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem18.TwoPointer(intArray85, 0);
        int[] intArray89 = twoSumProblem0.TwoPointer(intArray87, (-1));
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray63 = twoSumProblem0.HashMap(intArray61, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        int[] intArray34 = twoSumProblem18.BruteForce(intArray32, (int) (byte) 0);
        int[] intArray36 = twoSumProblem0.HashMap(intArray34, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem37.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem37.HashMap(intArray78, (int) (short) 10);
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray78, (int) (byte) -1);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray85 = twoSumProblem0.HashMap(intArray83, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem39.BruteForce(intArray51, 0);
        int[] intArray57 = twoSumProblem33.BruteForce(intArray51, (int) (short) 0);
        int[] intArray59 = twoSumProblem24.HashMap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.BruteForce(intArray72, 0);
        int[] intArray78 = twoSumProblem24.BruteForce(intArray76, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem79 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        int[] intArray84 = twoSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray86 = twoSumProblem24.TwoPointer(intArray82, 0);
        int[] intArray88 = twoSumProblem9.BruteForce(intArray86, (int) '4');
        int[] intArray90 = twoSumProblem0.HashMap(intArray86, (int) (byte) 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        int[] intArray47 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray49 = twoSumProblem35.TwoPointer(intArray47, 100);
        int[] intArray51 = twoSumProblem0.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        int[] intArray64 = twoSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray66 = twoSumProblem58.HashMap(intArray62, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem58.BruteForce(intArray70, 0);
        int[] intArray76 = twoSumProblem52.BruteForce(intArray70, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem77.HashMap(intArray81, (int) (short) 100);
        int[] intArray87 = twoSumProblem52.HashMap(intArray81, (int) (short) 10);
        int[] intArray89 = twoSumProblem0.HashMap(intArray81, (int) (byte) 10);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray92 = twoSumProblem0.HashMap(intArray90, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem17.HashMap(intArray40, 0);
        int[] intArray46 = twoSumProblem0.BruteForce(intArray44, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        int[] intArray53 = twoSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray55 = twoSumProblem47.HashMap(intArray51, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem47.HashMap(intArray60, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        int[] intArray73 = twoSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem67.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray81 = twoSumProblem67.TwoPointer(intArray79, 100);
        int[] intArray83 = twoSumProblem47.TwoPointer(intArray81, 10);
        int[] intArray85 = twoSumProblem0.BruteForce(intArray81, 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray88 = twoSumProblem0.BruteForce(intArray86, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        int[] intArray57 = twoSumProblem0.HashMap(intArray55, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem58.BruteForce(intArray73, (int) (short) 1);
        int[] intArray77 = twoSumProblem0.BruteForce(intArray75, (int) '#');
        java.lang.Class<?> wildcardClass78 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray11 = twoSumProblem0.HashMap(intArray9, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem12 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        int[] intArray17 = twoSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        int[] intArray36 = twoSumProblem12.TwoPointer(intArray34, (int) (short) 0);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        int[] intArray64 = twoSumProblem45.HashMap(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        int[] intArray70 = twoSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray72 = twoSumProblem45.HashMap(intArray68, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem45.BruteForce(intArray76, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem45.HashMap(intArray86, (int) (short) 10);
        int[] intArray90 = twoSumProblem39.TwoPointer(intArray86, (int) (short) -1);
        int[] intArray92 = twoSumProblem0.TwoPointer(intArray90, 0);
        java.lang.Class<?> wildcardClass93 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        int[] intArray41 = twoSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray43 = twoSumProblem35.HashMap(intArray39, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem35.BruteForce(intArray47, 0);
        int[] intArray53 = twoSumProblem0.HashMap(intArray51, 0);
        int[] intArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray56 = twoSumProblem0.BruteForce(intArray54, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 1]");
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem20.BruteForce(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        int[] intArray56 = twoSumProblem37.HashMap(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem37.HashMap(intArray60, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        int[] intArray72 = twoSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem66.HashMap(intArray70, (int) (short) 100);
        int[] intArray76 = twoSumProblem65.HashMap(intArray74, 100);
        int[] intArray78 = twoSumProblem37.BruteForce(intArray74, (-1));
        int[] intArray80 = twoSumProblem20.HashMap(intArray78, (-1));
        int[] intArray82 = twoSumProblem0.TwoPointer(intArray78, (int) (short) 100);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray26 = twoSumProblem15.HashMap(intArray24, 100);
        int[] intArray28 = twoSumProblem0.TwoPointer(intArray26, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem29.HashMap(intArray33, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem29.BruteForce(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem46.HashMap(intArray50, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem61.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem55.BruteForce(intArray73, (int) (short) 0);
        int[] intArray81 = twoSumProblem46.HashMap(intArray79, (int) (short) 1);
        int[] intArray83 = twoSumProblem29.HashMap(intArray81, (int) (short) 100);
        int[] intArray85 = twoSumProblem0.HashMap(intArray83, 0);
        java.lang.Class<?> wildcardClass86 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem18.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        int[] intArray65 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray67 = twoSumProblem53.TwoPointer(intArray65, 100);
        int[] intArray69 = twoSumProblem35.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem18.BruteForce(intArray65, (int) (short) 0);
        int[] intArray73 = twoSumProblem0.TwoPointer(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.BruteForce(intArray74, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray37 = twoSumProblem18.HashMap(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem18.HashMap(intArray41, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem18.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem60.TwoPointer(intArray72, (int) '#');
        int[] intArray78 = twoSumProblem54.BruteForce(intArray76, (-1));
        int[] intArray80 = twoSumProblem18.BruteForce(intArray76, 0);
        int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (short) 0);
        java.lang.Class<?> wildcardClass83 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray16 = twoSumProblem0.BruteForce(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray49 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray51 = twoSumProblem37.TwoPointer(intArray49, 100);
        int[] intArray53 = twoSumProblem17.TwoPointer(intArray51, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem54.HashMap(intArray58, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        int[] intArray85 = twoSumProblem69.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem63.BruteForce(intArray81, (int) (short) 0);
        int[] intArray89 = twoSumProblem54.HashMap(intArray87, (int) (short) 1);
        int[] intArray91 = twoSumProblem17.HashMap(intArray89, (int) ' ');
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, (int) (short) 100);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem43.HashMap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem43.BruteForce(intArray73, 0);
        int[] intArray79 = twoSumProblem37.TwoPointer(intArray73, (int) (short) -1);
        int[] intArray81 = twoSumProblem28.HashMap(intArray79, (int) (short) -1);
        int[] intArray83 = twoSumProblem0.HashMap(intArray79, 0);
        java.lang.Class<?> wildcardClass84 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem58 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        int[] intArray63 = twoSumProblem58.BruteForce(intArray61, (int) '#');
        int[] intArray65 = twoSumProblem49.TwoPointer(intArray61, (int) '#');
        int[] intArray67 = twoSumProblem43.BruteForce(intArray65, (-1));
        int[] intArray69 = twoSumProblem0.HashMap(intArray65, 0);
        java.lang.Class<?> wildcardClass70 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem6.HashMap(intArray29, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem6.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        int[] intArray47 = twoSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray49 = twoSumProblem6.HashMap(intArray47, (int) (short) 10);
        int[] intArray51 = twoSumProblem0.TwoPointer(intArray47, (int) (short) -1);
        java.lang.Class<?> wildcardClass52 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem23.HashMap(intArray27, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem23.BruteForce(intArray35, 0);
        int[] intArray41 = twoSumProblem17.BruteForce(intArray35, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        int[] intArray57 = twoSumProblem52.BruteForce(intArray55, (int) '#');
        int[] intArray59 = twoSumProblem51.HashMap(intArray55, (int) (short) 100);
        int[] intArray61 = twoSumProblem42.HashMap(intArray55, (int) '#');
        int[] intArray63 = twoSumProblem17.BruteForce(intArray55, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem64.HashMap(intArray73, 100);
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, (int) (short) -1);
        int[] intArray79 = twoSumProblem0.TwoPointer(intArray77, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem80 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem81 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        int[] intArray86 = twoSumProblem81.BruteForce(intArray84, (int) '#');
        int[] intArray88 = twoSumProblem80.HashMap(intArray84, (int) (short) 100);
        int[] intArray92 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray94 = twoSumProblem80.TwoPointer(intArray92, 100);
        int[] intArray96 = twoSumProblem0.HashMap(intArray94, (int) (short) 1);
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray99 = twoSumProblem0.HashMap(intArray97, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem36.BruteForce(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        int[] intArray29 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray31 = twoSumProblem17.TwoPointer(intArray29, 100);
        int[] intArray33 = twoSumProblem16.HashMap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem34.HashMap(intArray38, (int) (short) 100);
        int[] intArray46 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray48 = twoSumProblem34.TwoPointer(intArray46, 100);
        int[] intArray50 = twoSumProblem16.BruteForce(intArray46, 0);
        int[] intArray52 = twoSumProblem1.TwoPointer(intArray46, (int) '#');
        int[] intArray54 = twoSumProblem0.TwoPointer(intArray46, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.HashMap(intArray70, (int) (byte) 100);
        int[] intArray74 = twoSumProblem0.TwoPointer(intArray70, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        int[] intArray81 = twoSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem75.HashMap(intArray79, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        int[] intArray89 = twoSumProblem84.BruteForce(intArray87, (int) '#');
        int[] intArray91 = twoSumProblem75.TwoPointer(intArray87, (int) '#');
        int[] intArray93 = twoSumProblem0.HashMap(intArray91, 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem1.TwoPointer(intArray13, (int) '#');
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem20.BruteForce(intArray35, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem44.BruteForce(intArray56, 0);
        int[] intArray62 = twoSumProblem38.TwoPointer(intArray60, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem63 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        int[] intArray68 = twoSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray70 = twoSumProblem38.HashMap(intArray66, (int) (short) 10);
        int[] intArray72 = twoSumProblem20.HashMap(intArray70, (int) '#');
        int[] intArray74 = twoSumProblem0.BruteForce(intArray72, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem76 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem77 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        int[] intArray82 = twoSumProblem77.BruteForce(intArray80, (int) '#');
        int[] intArray84 = twoSumProblem76.HashMap(intArray80, (int) (short) 100);
        int[] intArray88 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray90 = twoSumProblem76.TwoPointer(intArray88, 100);
        int[] intArray92 = twoSumProblem75.HashMap(intArray90, (int) (byte) 100);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray90, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem30.HashMap(intArray45, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem30.BruteForce(intArray60, 0);
        int[] intArray66 = twoSumProblem24.TwoPointer(intArray60, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem67 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem68 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem68.HashMap(intArray72, (int) (short) 100);
        int[] intArray80 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray82 = twoSumProblem68.TwoPointer(intArray80, 100);
        int[] intArray84 = twoSumProblem67.BruteForce(intArray82, (int) (short) 1);
        int[] intArray86 = twoSumProblem24.BruteForce(intArray82, (int) (short) 1);
        int[] intArray88 = twoSumProblem15.BruteForce(intArray82, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem89 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        int[] intArray94 = twoSumProblem89.BruteForce(intArray92, (int) '#');
        int[] intArray96 = twoSumProblem15.HashMap(intArray94, (int) 'a');
        int[] intArray98 = twoSumProblem0.HashMap(intArray94, (int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[0, 0]");
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem8 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray11 = new int[] { (short) -1, (short) 0 };
        int[] intArray13 = twoSumProblem8.BruteForce(intArray11, (int) '#');
        int[] intArray15 = twoSumProblem7.HashMap(intArray11, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem7.BruteForce(intArray19, 0);
        int[] intArray25 = twoSumProblem1.BruteForce(intArray19, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem27.HashMap(intArray31, (int) (short) 100);
        int[] intArray39 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray41 = twoSumProblem27.TwoPointer(intArray39, 100);
        int[] intArray43 = twoSumProblem26.HashMap(intArray41, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem44.HashMap(intArray48, (int) (short) 100);
        int[] intArray56 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray58 = twoSumProblem44.TwoPointer(intArray56, 100);
        int[] intArray60 = twoSumProblem26.BruteForce(intArray56, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem26.HashMap(intArray64, 0);
        int[] intArray70 = twoSumProblem1.HashMap(intArray64, (int) (byte) 0);
        int[] intArray72 = twoSumProblem0.HashMap(intArray64, (-1));
        java.lang.Class<?> wildcardClass73 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.BruteForce(intArray27, 0);
        int[] intArray33 = twoSumProblem9.BruteForce(intArray27, (int) (short) 0);
        int[] intArray35 = twoSumProblem0.HashMap(intArray33, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem46 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        int[] intArray51 = twoSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray53 = twoSumProblem45.HashMap(intArray49, (int) (short) 100);
        int[] intArray55 = twoSumProblem36.HashMap(intArray49, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem36.HashMap(intArray59, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem64 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        int[] intArray69 = twoSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray71 = twoSumProblem36.BruteForce(intArray67, (int) '#');
        int[] intArray73 = twoSumProblem0.HashMap(intArray67, (int) 'a');
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray76 = twoSumProblem0.HashMap(intArray74, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.BruteForce(intArray15, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem24.HashMap(intArray28, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem24.BruteForce(intArray36, 0);
        int[] intArray42 = twoSumProblem18.BruteForce(intArray36, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem44 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        int[] intArray49 = twoSumProblem44.BruteForce(intArray47, (int) '#');
        int[] intArray51 = twoSumProblem43.HashMap(intArray47, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray62 = twoSumProblem43.HashMap(intArray56, (int) '#');
        int[] intArray64 = twoSumProblem18.BruteForce(intArray56, (int) '4');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray77 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray79 = twoSumProblem65.TwoPointer(intArray77, 100);
        int[] intArray81 = twoSumProblem18.HashMap(intArray79, (int) '#');
        int[] intArray83 = twoSumProblem0.BruteForce(intArray81, (int) (short) -1);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray86 = twoSumProblem0.BruteForce(intArray84, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        int[] intArray30 = twoSumProblem25.BruteForce(intArray28, (int) '#');
        int[] intArray32 = twoSumProblem16.BruteForce(intArray28, 0);
        int[] intArray34 = twoSumProblem10.BruteForce(intArray28, (int) (short) 0);
        int[] intArray36 = twoSumProblem1.HashMap(intArray34, (int) (short) 1);
        int[] intArray38 = twoSumProblem0.BruteForce(intArray34, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray49 = twoSumProblem0.TwoPointer(intArray47, (int) (short) 0);
        int[] intArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray52 = twoSumProblem0.TwoPointer(intArray50, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 1]");
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem3 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        int[] intArray8 = twoSumProblem3.BruteForce(intArray6, (int) '#');
        int[] intArray10 = twoSumProblem2.HashMap(intArray6, (int) (short) 100);
        int[] intArray12 = twoSumProblem1.HashMap(intArray10, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem13 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem14 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        int[] intArray22 = twoSumProblem14.HashMap(intArray18, (int) (short) 100);
        int[] intArray26 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray28 = twoSumProblem14.TwoPointer(intArray26, 100);
        int[] intArray30 = twoSumProblem13.HashMap(intArray28, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        int[] intArray37 = twoSumProblem32.BruteForce(intArray35, (int) '#');
        int[] intArray39 = twoSumProblem31.HashMap(intArray35, (int) (short) 100);
        int[] intArray43 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray45 = twoSumProblem31.TwoPointer(intArray43, 100);
        int[] intArray47 = twoSumProblem13.BruteForce(intArray43, 0);
        int[] intArray49 = twoSumProblem1.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = twoSumProblem0.BruteForce(intArray49, 1);
        int[] intArray58 = new int[] { 'a', (short) 10, (byte) 0, (byte) -1, (byte) 1, (byte) 0 };
        int[] intArray60 = twoSumProblem0.BruteForce(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem61.HashMap(intArray65, (int) (short) 100);
        int[] intArray73 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray75 = twoSumProblem61.TwoPointer(intArray73, 100);
        int[] intArray77 = twoSumProblem0.TwoPointer(intArray73, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem78 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        int[] intArray83 = twoSumProblem78.BruteForce(intArray81, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem84 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem85 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        int[] intArray90 = twoSumProblem85.BruteForce(intArray88, (int) '#');
        int[] intArray92 = twoSumProblem84.HashMap(intArray88, (int) (short) 100);
        int[] intArray94 = twoSumProblem78.BruteForce(intArray92, (int) (byte) 0);
        int[] intArray96 = twoSumProblem0.BruteForce(intArray92, (int) '4');
        java.lang.Class<?> wildcardClass97 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[97, 10, 0, -1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1, 2]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        int[] intArray26 = twoSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray28 = twoSumProblem20.HashMap(intArray24, (int) (short) 100);
        int[] intArray30 = twoSumProblem0.BruteForce(intArray28, (int) (byte) 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem37.HashMap(intArray41, (int) (short) 100);
        int[] intArray47 = twoSumProblem31.BruteForce(intArray45, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray59 = twoSumProblem48.HashMap(intArray57, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem61 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        int[] intArray66 = twoSumProblem61.BruteForce(intArray64, (int) '#');
        int[] intArray68 = twoSumProblem60.HashMap(intArray64, (int) (short) 100);
        int[] intArray72 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray74 = twoSumProblem60.TwoPointer(intArray72, 100);
        int[] intArray76 = twoSumProblem48.TwoPointer(intArray72, (int) (short) 0);
        int[] intArray78 = twoSumProblem31.HashMap(intArray72, (int) (short) -1);
        int[] intArray80 = twoSumProblem0.BruteForce(intArray78, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.TwoPointer(intArray12, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem17.HashMap(intArray21, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray36 = twoSumProblem17.HashMap(intArray30, (int) '#');
        int[] intArray38 = twoSumProblem0.HashMap(intArray30, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        int[] intArray45 = twoSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray47 = twoSumProblem39.HashMap(intArray43, (int) (short) 100);
        int[] intArray51 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray53 = twoSumProblem39.TwoPointer(intArray51, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray67 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray69 = twoSumProblem55.TwoPointer(intArray67, 100);
        int[] intArray71 = twoSumProblem54.HashMap(intArray69, (int) (byte) 100);
        int[] intArray73 = twoSumProblem39.HashMap(intArray69, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem74 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem75 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        int[] intArray80 = twoSumProblem75.BruteForce(intArray78, (int) '#');
        int[] intArray82 = twoSumProblem74.HashMap(intArray78, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem74.BruteForce(intArray86, 0);
        int[] intArray92 = twoSumProblem39.HashMap(intArray90, 0);
        int[] intArray94 = twoSumProblem0.BruteForce(intArray92, (int) (short) -1);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray97 = twoSumProblem0.TwoPointer(intArray95, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0]");
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        int[] intArray14 = twoSumProblem9.BruteForce(intArray12, (int) '#');
        int[] intArray16 = twoSumProblem0.BruteForce(intArray12, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem19.HashMap(intArray23, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        int[] intArray34 = twoSumProblem29.BruteForce(intArray32, (int) '#');
        int[] intArray36 = twoSumProblem28.HashMap(intArray32, (int) (short) 100);
        int[] intArray38 = twoSumProblem19.HashMap(intArray32, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem39 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        int[] intArray44 = twoSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray46 = twoSumProblem19.HashMap(intArray42, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        int[] intArray54 = twoSumProblem19.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        int[] intArray60 = twoSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray62 = twoSumProblem19.HashMap(intArray60, (int) (short) 10);
        int[] intArray64 = twoSumProblem18.HashMap(intArray62, (int) (short) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem65 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem65.HashMap(intArray69, (int) (short) 100);
        int[] intArray75 = twoSumProblem18.HashMap(intArray69, (int) '#');
        int[] intArray77 = twoSumProblem17.BruteForce(intArray75, 0);
        int[] intArray79 = twoSumProblem0.BruteForce(intArray77, (int) ' ');
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray82 = twoSumProblem0.BruteForce(intArray80, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        int[] intArray25 = twoSumProblem6.HashMap(intArray19, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem27 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        int[] intArray32 = twoSumProblem27.BruteForce(intArray30, (int) '#');
        int[] intArray34 = twoSumProblem26.HashMap(intArray30, (int) (short) 100);
        int[] intArray38 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray40 = twoSumProblem26.TwoPointer(intArray38, 100);
        int[] intArray42 = twoSumProblem6.TwoPointer(intArray40, 10);
        int[] intArray44 = twoSumProblem0.TwoPointer(intArray40, (int) (byte) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem52 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        int[] intArray58 = twoSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray60 = twoSumProblem52.HashMap(intArray56, (int) (short) 100);
        int[] intArray64 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray66 = twoSumProblem52.TwoPointer(intArray64, 100);
        int[] intArray68 = twoSumProblem51.HashMap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        int[] intArray75 = twoSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray77 = twoSumProblem69.HashMap(intArray73, (int) (short) 100);
        int[] intArray81 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray83 = twoSumProblem69.TwoPointer(intArray81, 100);
        int[] intArray85 = twoSumProblem51.BruteForce(intArray81, 0);
        int[] intArray87 = twoSumProblem45.TwoPointer(intArray81, (int) (short) -1);
        int[] intArray91 = new int[] { (short) 1, (byte) 1, (byte) 0 };
        int[] intArray93 = twoSumProblem45.TwoPointer(intArray91, (int) (short) -1);
        int[] intArray95 = twoSumProblem0.BruteForce(intArray91, (-1));
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray98 = twoSumProblem0.BruteForce(intArray96, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1, 1, 0]");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 0]");
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem19 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        int[] intArray24 = twoSumProblem19.BruteForce(intArray22, (int) '#');
        int[] intArray26 = twoSumProblem18.HashMap(intArray22, (int) (short) 100);
        int[] intArray30 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray32 = twoSumProblem18.TwoPointer(intArray30, 100);
        int[] intArray34 = twoSumProblem0.BruteForce(intArray30, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        int[] intArray40 = twoSumProblem35.BruteForce(intArray38, (int) '#');
        int[] intArray42 = twoSumProblem0.TwoPointer(intArray38, (int) (short) -1);
        int[] intArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray45 = twoSumProblem0.TwoPointer(intArray43, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 1]");
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem11 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        int[] intArray16 = twoSumProblem11.BruteForce(intArray14, (int) '#');
        int[] intArray18 = twoSumProblem10.HashMap(intArray14, (int) (short) 100);
        int[] intArray20 = twoSumProblem9.HashMap(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        int[] intArray33 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray35 = twoSumProblem21.TwoPointer(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray33, (int) (short) 0);
        int[] intArray39 = twoSumProblem0.TwoPointer(intArray37, (-1));
        com.thealgorithms.misc.TwoSumProblem twoSumProblem40 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        int[] intArray46 = twoSumProblem41.BruteForce(intArray44, (int) '#');
        int[] intArray48 = twoSumProblem40.HashMap(intArray44, (int) (short) 100);
        int[] intArray52 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray54 = twoSumProblem40.TwoPointer(intArray52, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray66 = twoSumProblem55.HashMap(intArray64, 100);
        int[] intArray68 = twoSumProblem40.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        int[] intArray74 = twoSumProblem69.BruteForce(intArray72, (int) '#');
        int[] intArray76 = twoSumProblem40.TwoPointer(intArray72, (int) (byte) 0);
        int[] intArray78 = twoSumProblem0.TwoPointer(intArray72, (int) (byte) -1);
        java.lang.Class<?> wildcardClass79 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        int[] intArray20 = twoSumProblem15.BruteForce(intArray18, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        int[] intArray27 = twoSumProblem22.BruteForce(intArray25, (int) '#');
        int[] intArray29 = twoSumProblem21.HashMap(intArray25, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        int[] intArray35 = twoSumProblem30.BruteForce(intArray33, (int) '#');
        int[] intArray37 = twoSumProblem21.BruteForce(intArray33, 0);
        int[] intArray39 = twoSumProblem15.BruteForce(intArray33, (int) (short) 0);
        int[] intArray41 = twoSumProblem0.BruteForce(intArray33, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray52 = twoSumProblem0.TwoPointer(intArray50, (-1));
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            int[] intArray55 = twoSumProblem0.BruteForce(intArray53, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem17 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        int[] intArray22 = twoSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray24 = twoSumProblem16.HashMap(intArray20, (int) (short) 100);
        int[] intArray28 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray30 = twoSumProblem16.TwoPointer(intArray28, 100);
        int[] intArray32 = twoSumProblem15.HashMap(intArray30, (int) (byte) 100);
        int[] intArray34 = twoSumProblem0.HashMap(intArray30, (int) (byte) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray46 = twoSumProblem35.HashMap(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        int[] intArray52 = twoSumProblem47.BruteForce(intArray50, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem53 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem54 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        int[] intArray59 = twoSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray61 = twoSumProblem53.HashMap(intArray57, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem62 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        int[] intArray67 = twoSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray69 = twoSumProblem53.BruteForce(intArray65, 0);
        int[] intArray71 = twoSumProblem47.TwoPointer(intArray69, (int) (short) 0);
        int[] intArray73 = twoSumProblem35.BruteForce(intArray71, (int) '#');
        int[] intArray75 = twoSumProblem0.BruteForce(intArray71, (-1));
        java.lang.Class<?> wildcardClass76 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        int[] intArray5 = twoSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem6 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem7 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray10 = new int[] { (short) -1, (short) 0 };
        int[] intArray12 = twoSumProblem7.BruteForce(intArray10, (int) '#');
        int[] intArray14 = twoSumProblem6.HashMap(intArray10, (int) (short) 100);
        int[] intArray18 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray20 = twoSumProblem6.TwoPointer(intArray18, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem21 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem22 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem23 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        int[] intArray28 = twoSumProblem23.BruteForce(intArray26, (int) '#');
        int[] intArray30 = twoSumProblem22.HashMap(intArray26, (int) (short) 100);
        int[] intArray32 = twoSumProblem21.HashMap(intArray30, 100);
        int[] intArray34 = twoSumProblem6.TwoPointer(intArray32, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem35 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        int[] intArray48 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray50 = twoSumProblem36.TwoPointer(intArray48, 100);
        int[] intArray52 = twoSumProblem35.HashMap(intArray50, (int) (byte) 100);
        int[] intArray54 = twoSumProblem6.TwoPointer(intArray52, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem57 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        int[] intArray62 = twoSumProblem57.BruteForce(intArray60, (int) '#');
        int[] intArray64 = twoSumProblem56.HashMap(intArray60, (int) (short) 100);
        int[] intArray68 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray70 = twoSumProblem56.TwoPointer(intArray68, 100);
        int[] intArray72 = twoSumProblem55.BruteForce(intArray70, (int) (short) 1);
        int[] intArray74 = twoSumProblem6.TwoPointer(intArray72, (int) 'a');
        int[] intArray76 = twoSumProblem0.TwoPointer(intArray74, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        int[] intArray12 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray14 = twoSumProblem0.TwoPointer(intArray12, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem15 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem16 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        int[] intArray21 = twoSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray23 = twoSumProblem15.HashMap(intArray19, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        int[] intArray29 = twoSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray31 = twoSumProblem15.TwoPointer(intArray27, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        int[] intArray38 = twoSumProblem33.BruteForce(intArray36, (int) '#');
        int[] intArray40 = twoSumProblem32.HashMap(intArray36, (int) (short) 100);
        int[] intArray44 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray46 = twoSumProblem32.TwoPointer(intArray44, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem47 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        int[] intArray54 = twoSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray56 = twoSumProblem48.HashMap(intArray52, (int) (short) 100);
        int[] intArray60 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray62 = twoSumProblem48.TwoPointer(intArray60, 100);
        int[] intArray64 = twoSumProblem47.HashMap(intArray62, (int) (byte) 100);
        int[] intArray66 = twoSumProblem32.HashMap(intArray62, (int) (byte) -1);
        int[] intArray68 = twoSumProblem15.HashMap(intArray66, (int) '4');
        int[] intArray70 = twoSumProblem0.BruteForce(intArray66, (int) ' ');
        java.lang.Class<?> wildcardClass71 = twoSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray21 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray23 = twoSumProblem9.TwoPointer(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem24 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem25 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray33 = twoSumProblem25.HashMap(intArray29, (int) (short) 100);
        int[] intArray35 = twoSumProblem24.HashMap(intArray33, 100);
        int[] intArray37 = twoSumProblem9.TwoPointer(intArray35, (int) (byte) 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem38 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        int[] intArray43 = twoSumProblem38.BruteForce(intArray41, (int) '#');
        int[] intArray45 = twoSumProblem9.BruteForce(intArray41, 1);
        int[] intArray47 = twoSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem48 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem49 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        int[] intArray55 = twoSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray57 = twoSumProblem49.HashMap(intArray53, (int) (short) 100);
        int[] intArray61 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray63 = twoSumProblem49.TwoPointer(intArray61, 100);
        int[] intArray65 = twoSumProblem48.BruteForce(intArray63, (int) (short) 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem72 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem73 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        int[] intArray78 = twoSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray80 = twoSumProblem72.HashMap(intArray76, (int) (short) 100);
        int[] intArray82 = twoSumProblem66.BruteForce(intArray80, (int) (byte) 0);
        int[] intArray84 = twoSumProblem48.HashMap(intArray82, 10);
        int[] intArray86 = twoSumProblem0.TwoPointer(intArray82, (int) (short) 0);
        java.lang.Class<?> wildcardClass87 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 1]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem2 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        int[] intArray7 = twoSumProblem2.BruteForce(intArray5, (int) '#');
        int[] intArray9 = twoSumProblem1.HashMap(intArray5, (int) (short) 100);
        int[] intArray13 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray15 = twoSumProblem1.TwoPointer(intArray13, 100);
        int[] intArray17 = twoSumProblem0.HashMap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem18 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        int[] intArray23 = twoSumProblem18.BruteForce(intArray21, (int) '#');
        int[] intArray25 = twoSumProblem0.HashMap(intArray21, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem26 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        int[] intArray31 = twoSumProblem26.BruteForce(intArray29, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem32 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem33 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem34 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        int[] intArray39 = twoSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray41 = twoSumProblem33.HashMap(intArray37, (int) (short) 100);
        int[] intArray45 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray47 = twoSumProblem33.TwoPointer(intArray45, 100);
        int[] intArray49 = twoSumProblem32.HashMap(intArray47, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem50 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem51 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        int[] intArray56 = twoSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray58 = twoSumProblem50.HashMap(intArray54, (int) (short) 100);
        int[] intArray62 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray64 = twoSumProblem50.TwoPointer(intArray62, 100);
        int[] intArray66 = twoSumProblem32.BruteForce(intArray62, 0);
        int[] intArray68 = twoSumProblem26.TwoPointer(intArray62, (int) (short) -1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem69 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem70 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem71 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        int[] intArray76 = twoSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray78 = twoSumProblem70.HashMap(intArray74, (int) (short) 100);
        int[] intArray82 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray84 = twoSumProblem70.TwoPointer(intArray82, 100);
        int[] intArray86 = twoSumProblem69.BruteForce(intArray84, (int) (short) 1);
        int[] intArray88 = twoSumProblem26.BruteForce(intArray84, (int) (short) 1);
        int[] intArray90 = twoSumProblem0.BruteForce(intArray88, (int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 1]");
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        int[] intArray33 = twoSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray35 = twoSumProblem0.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem36 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem37 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        int[] intArray42 = twoSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray44 = twoSumProblem36.HashMap(intArray40, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem45 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        int[] intArray50 = twoSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray52 = twoSumProblem36.TwoPointer(intArray48, (int) '#');
        int[] intArray54 = twoSumProblem0.HashMap(intArray48, (int) 'a');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem55 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem56 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        int[] intArray61 = twoSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray63 = twoSumProblem55.HashMap(intArray59, (int) (short) 100);
        int[] intArray65 = twoSumProblem0.BruteForce(intArray63, 10);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem66 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        int[] intArray71 = twoSumProblem66.BruteForce(intArray69, (int) '#');
        int[] intArray73 = twoSumProblem0.HashMap(intArray69, (-1));
        java.lang.Class<?> wildcardClass74 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        com.thealgorithms.misc.TwoSumProblem twoSumProblem0 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem1 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        int[] intArray6 = twoSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray8 = twoSumProblem0.HashMap(intArray4, (int) (short) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem9 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem10 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        int[] intArray15 = twoSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray17 = twoSumProblem9.HashMap(intArray13, (int) (short) 100);
        int[] intArray19 = twoSumProblem0.HashMap(intArray13, (int) '#');
        com.thealgorithms.misc.TwoSumProblem twoSumProblem20 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        int[] intArray25 = twoSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray27 = twoSumProblem0.HashMap(intArray23, 0);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem28 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem29 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem30 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem31 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        int[] intArray36 = twoSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray38 = twoSumProblem30.HashMap(intArray34, (int) (short) 100);
        int[] intArray40 = twoSumProblem29.HashMap(intArray38, 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem41 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem42 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem43 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        int[] intArray48 = twoSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray50 = twoSumProblem42.HashMap(intArray46, (int) (short) 100);
        int[] intArray54 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray56 = twoSumProblem42.TwoPointer(intArray54, 100);
        int[] intArray58 = twoSumProblem41.HashMap(intArray56, (int) (byte) 100);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem59 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem60 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        int[] intArray65 = twoSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray67 = twoSumProblem59.HashMap(intArray63, (int) (short) 100);
        int[] intArray71 = new int[] { 'a', (byte) 100, (byte) 10 };
        int[] intArray73 = twoSumProblem59.TwoPointer(intArray71, 100);
        int[] intArray75 = twoSumProblem41.BruteForce(intArray71, 0);
        int[] intArray77 = twoSumProblem29.HashMap(intArray71, (int) (short) 100);
        int[] intArray79 = twoSumProblem28.BruteForce(intArray77, 1);
        int[] intArray81 = twoSumProblem0.HashMap(intArray77, 1);
        com.thealgorithms.misc.TwoSumProblem twoSumProblem82 = new com.thealgorithms.misc.TwoSumProblem();
        com.thealgorithms.misc.TwoSumProblem twoSumProblem83 = new com.thealgorithms.misc.TwoSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        int[] intArray88 = twoSumProblem83.BruteForce(intArray86, (int) '#');
        int[] intArray90 = twoSumProblem82.HashMap(intArray86, (int) (short) 100);
        int[] intArray92 = twoSumProblem0.HashMap(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[97, 100, 10]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 0]");
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[0, 0]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }
}

